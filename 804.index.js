/*! For license information please see 804.index.js.LICENSE.txt */
(self.webpackChunkblocks=self.webpackChunkblocks||[]).push([[804],{793:(module,__unused_webpack_exports,__webpack_require__)=>{var t;self,t=function(__WEBPACK_EXTERNAL_MODULE__2__){return function(e){var t={};function n(r){if(t[r])return t[r].exports;var s=t[r]={i:r,l:!1,exports:{}};return e[r].call(s.exports,s,s.exports,n),s.l=!0,s.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var s in e)n.d(r,s,function(t){return e[t]}.bind(null,s));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=177)}({13:function(e,t,n){"use strict";n.r(t),n.d(t,"Level",(function(){return r})),n.d(t,"verbosity",(function(){return a})),n.d(t,"setVerbosity",(function(){return o})),n.d(t,"log",(function(){return i})),n.d(t,"logWithDuration",(function(){return u}));var r,s=n(14);!function(e){e[e.NONE=0]="NONE",e[e.WARN=5]="WARN",e[e.INFO=10]="INFO",e[e.DEBUG=20]="DEBUG"}(r||(r={}));let a=10;function o(e){e=e}function i(e,t="Magenta.js",n=10){if(0===n)throw Error("Logging level cannot be NONE.");a>=n&&(5===n?console.warn:console.log)(`%c ${t} `,"background:magenta; color:white",e)}function u(e,t,n="Magenta.js",r=10){i(`${e} in ${((s.d.now()-t)/1e3).toPrecision(3)}s`,n,r)}},14:function(e,t,n){"use strict";(function(e){n.d(t,"a",(function(){return s})),n.d(t,"d",(function(){return a})),n.d(t,"c",(function(){return o})),n.d(t,"b",(function(){return u}));const r=function(){if("undefined"!=typeof globalThis)return globalThis;if("undefined"!=typeof self)return self;if("undefined"!=typeof window)return window;if(void 0!==e)return e;throw new Error("cannot find the global object")}(),s=r.fetch.bind(r),a=r.performance,o=(r.navigator,!!r.webkitOfflineAudioContext),i=void 0!==r.WorkerGlobalScope;function u(e){if(e=o?44100:e,i)throw new Error("Cannot use offline audio context in a web worker.");const t=r.webkitOfflineAudioContext;return o?new t(1,e,e):new r.OfflineAudioContext(1,e,e)}}).call(this,n(21))},15:function(e,t,n){"use strict";n.r(t),n.d(t,"MultipleTimeSignatureException",(function(){return a})),n.d(t,"BadTimeSignatureException",(function(){return o})),n.d(t,"NegativeTimeException",(function(){return i})),n.d(t,"MultipleTempoException",(function(){return u})),n.d(t,"QuantizationStatusException",(function(){return l})),n.d(t,"clone",(function(){return c})),n.d(t,"stepsPerQuarterToStepsPerSecond",(function(){return p})),n.d(t,"quantizeToStep",(function(){return h})),n.d(t,"quantizeNoteSequence",(function(){return m})),n.d(t,"isQuantizedSequence",(function(){return g})),n.d(t,"assertIsQuantizedSequence",(function(){return y})),n.d(t,"isRelativeQuantizedSequence",(function(){return b})),n.d(t,"assertIsRelativeQuantizedSequence",(function(){return w})),n.d(t,"isAbsoluteQuantizedSequence",(function(){return x})),n.d(t,"assertIsAbsoluteQuantizedSequence",(function(){return S})),n.d(t,"unquantizeSequence",(function(){return v})),n.d(t,"createQuantizedNoteSequence",(function(){return k})),n.d(t,"mergeInstruments",(function(){return N})),n.d(t,"replaceInstruments",(function(){return I})),n.d(t,"mergeConsecutiveNotes",(function(){return T})),n.d(t,"concatenate",(function(){return C})),n.d(t,"trim",(function(){return A})),n.d(t,"split",(function(){return $}));var r=n(9),s=n(8);class a extends Error{constructor(e){super(e),Object.setPrototypeOf(this,new.target.prototype)}}class o extends Error{constructor(e){super(e),Object.setPrototypeOf(this,new.target.prototype)}}class i extends Error{constructor(e){super(e),Object.setPrototypeOf(this,new.target.prototype)}}class u extends Error{constructor(e){super(e),Object.setPrototypeOf(this,new.target.prototype)}}class l extends Error{constructor(e){super(e),Object.setPrototypeOf(this,new.target.prototype)}}function c(e){return r.a.decode(r.a.encode(e).finish())}function p(e,t){return e*t/60}function h(e,t,n=.5){const r=e*t;return Math.floor(r+(1-n))}function d(e){return e.controlChanges.concat(e.textAnnotations)}function f(e){if(e.tempos&&0!==e.tempos.length){if(e.tempos.sort(((e,t)=>e.time-t.time)),0!==e.tempos[0].time&&e.tempos[0].qpm!==s.DEFAULT_QUARTERS_PER_MINUTE)throw new u("NoteSequence has an implicit tempo change from initial "+s.DEFAULT_QUARTERS_PER_MINUTE+" qpm to "+`${e.tempos[0].qpm} qpm at ${e.tempos[0].time} seconds.`);for(let t=1;t<e.tempos.length;t++)if(e.tempos[t].qpm!==e.tempos[0].qpm)throw new u(`NoteSequence has at least one tempo change from ${e.tempos[0].qpm} qpm to ${e.tempos[t].qpm}qpm at ${e.tempos[t].time} seconds.`)}}function m(e,t){const n=c(e);if(n.quantizationInfo=r.a.QuantizationInfo.create({stepsPerQuarter:t}),n.timeSignatures.length>0){if(n.timeSignatures.sort(((e,t)=>e.time-t.time)),0!==n.timeSignatures[0].time&&(4!==n.timeSignatures[0].numerator||4!==n.timeSignatures[0].denominator))throw new a(`NoteSequence has an implicit change from initial 4/4 time signature to ${n.timeSignatures[0].numerator}/`+n.timeSignatures[0].denominator+" at "+n.timeSignatures[0].time+" seconds.");for(let e=1;e<n.timeSignatures.length;e++){const t=n.timeSignatures[e];if(t.numerator!==n.timeSignatures[0].numerator||t.denominator!==n.timeSignatures[0].denominator)throw new a("NoteSequence has at least one time signature change from "+n.timeSignatures[0].numerator+"/"+n.timeSignatures[0].denominator+" to "+`${t.numerator}/${t.denominator} `+`at ${t.time} seconds`)}n.timeSignatures[0].time=0,n.timeSignatures=[n.timeSignatures[0]]}else{const e=r.a.TimeSignature.create({numerator:4,denominator:4,time:0});n.timeSignatures.push(e)}const u=n.timeSignatures[0];if(!(l=u.denominator)||0!=(l&l-1))throw new o(`Denominator is not a power of 2. Time signature: ${u.numerator}/${u.denominator}`);var l;if(0===u.numerator)throw new o(`Numerator is 0. Time signature: ${u.numerator}/${u.denominator}`);if(n.tempos.length>0)f(n),n.tempos[0].time=0,n.tempos=[n.tempos[0]];else{const e=r.a.Tempo.create({qpm:s.DEFAULT_QUARTERS_PER_MINUTE,time:0});n.tempos.push(e)}const m=p(t,n.tempos[0].qpm);return n.totalQuantizedSteps=h(e.totalTime,m),function(e,t){for(const n of e.notes){if(n.quantizedStartStep=h(n.startTime,t),n.quantizedEndStep=h(n.endTime,t),n.quantizedEndStep===n.quantizedStartStep&&(n.quantizedEndStep+=1),n.quantizedStartStep<0||n.quantizedEndStep<0)throw new i("Got negative note time: start_step = "+n.quantizedStartStep+", end_step = "+n.quantizedEndStep);n.quantizedEndStep>e.totalQuantizedSteps&&(e.totalQuantizedSteps=n.quantizedEndStep)}d(e).forEach((e=>{if(e.quantizedStep=h(e.time,t),e.quantizedStep<0)throw new i("Got negative event time: step = "+e.quantizedStep)}))}(n,m),n}function g(e){return e.quantizationInfo&&(e.quantizationInfo.stepsPerQuarter>0||e.quantizationInfo.stepsPerSecond>0)}function y(e){if(!g(e))throw new l(`NoteSequence ${e.id} is not quantized (missing quantizationInfo)`)}function b(e){return e.quantizationInfo&&e.quantizationInfo.stepsPerQuarter>0}function w(e){if(!b(e))throw new l(`NoteSequence ${e.id} is not quantized or is quantized based on absolute timing`)}function x(e){return e.quantizationInfo&&e.quantizationInfo.stepsPerSecond>0}function S(e){if(!x(e))throw new l(`NoteSequence ${e.id} is not quantized or is quantized based on relative timing`)}function v(e,t){w(e),f(e);const n=c(e);t?n.tempos&&n.tempos.length>0?n.tempos[0].qpm=t:n.tempos.push(r.a.Tempo.create({time:0,qpm:t})):t=e.tempos&&e.tempos.length>0?n.tempos[0].qpm:s.DEFAULT_QUARTERS_PER_MINUTE;const a=e=>e/n.quantizationInfo.stepsPerQuarter*(60/t);return n.totalTime=a(n.totalQuantizedSteps),n.notes.forEach((e=>{e.startTime=a(e.quantizedStartStep),e.endTime=a(e.quantizedEndStep),n.totalTime=Math.max(n.totalTime,e.endTime),delete e.quantizedStartStep,delete e.quantizedEndStep})),d(n).forEach((e=>{e.time=a(e.time)})),delete n.totalQuantizedSteps,delete n.quantizationInfo,n}function k(e=s.DEFAULT_STEPS_PER_QUARTER,t=s.DEFAULT_QUARTERS_PER_MINUTE){return r.a.create({quantizationInfo:{stepsPerQuarter:e},tempos:[{qpm:t}]})}function N(e){const t=c(e),n=t.notes.concat(t.pitchBends).concat(t.controlChanges),r=Array.from(new Set(n.filter((e=>!e.isDrum)).map((e=>e.program))));return n.forEach((e=>{e.isDrum?(e.program=0,e.instrument=r.length):e.instrument=r.indexOf(e.program)})),t}function I(e,t){const n=new Set(e.notes.map((e=>e.instrument))),s=new Set(t.notes.map((e=>e.instrument))),a=[];e.notes.forEach((e=>{s.has(e.instrument)||a.push(r.a.Note.create(e))})),t.notes.forEach((e=>{n.has(e.instrument)&&a.push(r.a.Note.create(e))}));const o=c(e);return o.notes=a.sort(((e,t)=>e.instrument-t.instrument||e.quantizedStartStep-t.quantizedStartStep)),o}function T(e){y(e);const t=c(e);t.notes=[];const n=e.notes.sort(((e,t)=>e.instrument-t.instrument||e.quantizedStartStep-t.quantizedStartStep)),s=new r.a.Note;s.pitch=n[0].pitch,s.instrument=n[0].instrument,s.quantizedStartStep=n[0].quantizedStartStep,s.quantizedEndStep=n[0].quantizedEndStep,t.notes.push(s);let a=0;for(let e=1;e<n.length;e++){const s=n[e],o=t.notes[a];if(o.instrument===s.instrument&&o.pitch===s.pitch&&s.quantizedStartStep===o.quantizedEndStep&&s.quantizedStartStep%16!=0)t.notes[a].quantizedEndStep+=s.quantizedEndStep-s.quantizedStartStep;else{const s=new r.a.Note;s.pitch=n[e].pitch,s.instrument=n[e].instrument,s.quantizedStartStep=n[e].quantizedStartStep,s.quantizedEndStep=n[e].quantizedEndStep,t.notes.push(s),a++}}return t}function C(e,t){if(t&&t.length!==e.length)throw new Error("Number of sequences to concatenate and their individual\n durations does not match.");if(g(e[0])){for(let t=0;t<e.length;++t)if(y(e[t]),e[t].quantizationInfo.stepsPerQuarter!==e[0].quantizationInfo.stepsPerQuarter)throw new Error("Not all sequences have the same quantizationInfo");return E(e,"totalQuantizedSteps","quantizedStartStep","quantizedEndStep",t)}return E(e,"totalTime","startTime","endTime",t)}function A(e,t,n,r){return g(e)?P(e,t,n,"totalQuantizedSteps","quantizedStartStep","quantizedEndStep",r):P(e,t,n,"totalTime","startTime","endTime",r)}function E(e,t,n,s,a){let o,i=0;for(let u=0;u<e.length;++u){const l=a?a[u]:e[u][t];if(0===l)throw Error(`Sequence ${e[u].id} has no ${t}, and no individual duration was provided.`);0===u?o=c(e[0]):Array.prototype.push.apply(o.notes,e[u].notes.map((e=>{const t=r.a.Note.create(e);return t[n]+=i,t[s]+=i,t}))),i+=l}return o[t]=i,o}function P(e,t,n,r,s,a,o){const i=c(e);i[r]=n,i.notes=i.notes.filter((e=>e[s]>=t&&e[s]<=n&&(o||e[a]<=n))),i[r]-=t;for(let e=0;e<i.notes.length;e++)i.notes[e][s]-=t,i.notes[e][a]-=t,o&&(i.notes[e][a]=Math.min(i.notes[e][a],i[r]));return i}function $(e,t){y(e);const n=c(e),s=n.notes.sort(((e,t)=>e.quantizedStartStep-t.quantizedStartStep)),a=[];let o=0,i=[];for(let e=0;e<s.length;e++){const u=s[e],l=u.quantizedStartStep,p=u.quantizedEndStep;if(u.quantizedStartStep-=o,u.quantizedEndStep-=o,!(u.quantizedStartStep<0))if(u.quantizedEndStep<=t)i.push(u);else{if(u.quantizedStartStep<t){const e=r.a.Note.create(u);e.quantizedEndStep=t,e.startTime=e.endTime=void 0,i.push(e),u.quantizedStartStep=o+t,u.quantizedEndStep=p}else u.quantizedStartStep=l,u.quantizedEndStep=p;if((u.quantizedEndStep>t||u.quantizedStartStep>t)&&(e-=1),0!==i.length){const e=c(n);e.notes=i,e.totalQuantizedSteps=t,a.push(e)}i=[],o+=t}}if(0!==i.length){const e=c(n);e.notes=i,e.totalQuantizedSteps=t,a.push(e)}return a}},177:function(e,t,n){"use strict";n.r(t),n.d(t,"MusicRNN",(function(){return p}));var r=n(2),s=n(63),a=n(42),o=n(29),i=n(14),u=n(13),l=n(15);class c{constructor(e,t,n){this.cells=e,this.attnLength=t,this.attnSize=n}static isWrapped(e){return"rnn/attention_cell_wrapper/kernel"in e}initialize(e){const t="rnn/attention_cell_wrapper/";this.attnInputMatrix=e[t+"kernel"],this.attnInputBias=e[t+"bias"],this.attnW=e[t+"attention/attn_w"],this.attnV=e[t+"attention/attn_v"],this.attnMatrix=e[t+"attention/kernel"],this.attnBias=e[t+"attention/bias"],this.attnOutputMatrix=e[t+"attention_output_projection/kernel"],this.attnOutputBias=e[t+"attention_output_projection/bias"]}initState(){return{attention:r.zeros([this.attnSize]),attentionState:r.zeros([1,this.attnSize*this.attnLength])}}call(e,t,n,s){const a=r.concat([e,s.attention.as2D(1,-1)],1),o=r.add(r.matMul(a,this.attnInputMatrix),this.attnInputBias.as2D(1,-1));[t,n]=r.multiRNNCell(this.cells,o,t,n);const i=r.reshape(s.attentionState,[-1,this.attnLength,1,this.attnSize]),u=r.conv2d(i,this.attnW,[1,1],"same"),l=[];for(let e=0;e<t.length;e++)l.push(t[e]),l.push(n[e]);const c=r.concat(l,1),p=r.matMul(c,this.attnMatrix).reshape([-1,1,1,this.attnSize]),h=r.sum(r.mul(this.attnV,r.tanh(r.add(u,p))),[2,3]),d=r.softmax(h),f=r.sum(r.mul(r.reshape(d,[-1,this.attnLength,1,1]),i),[1,2]).reshape([-1,this.attnSize]),m=s.attentionState.reshape([-1,this.attnLength,this.attnSize]),g=r.slice(m,[0,1,0],[m.shape[0],m.shape[1]-1,m.shape[2]]),y=r.add(r.matMul(r.concat([n[2],f],1),this.attnOutputMatrix),this.attnOutputBias),b=f.flatten(),w=r.concat([g,y.as3D(y.shape[0],1,y.shape[1])],1).reshape([-1,this.attnLength*this.attnSize]);return{output:y,c:t,h:n,attentionState:{attention:b,attentionState:w}}}}class p{constructor(e,t){this.checkpointURL=e,this.spec=t,this.initialized=!1,this.rawVars={},this.biasShapes=[],this.lstmCells=[]}isInitialized(){return this.initialized}instantiateFromSpec(){this.dataConverter=o.converterFromSpec(this.spec.dataConverter),this.attentionLength=this.spec.attentionLength,this.chordEncoder=this.spec.chordEncoder?a.chordEncoderFromType(this.spec.chordEncoder):void 0,this.auxInputs=this.spec.auxInputs?this.spec.auxInputs.map((e=>s.auxiliaryInputFromSpec(e))):void 0}async initialize(){this.dispose();const e=i.d.now();this.spec||await Object(i.a)(this.checkpointURL+"/config.json").then((e=>e.json())).then((e=>{if("MusicRNN"!==e.type)throw new Error("Attempted to instantiate MusicRNN model with incorrect type:\n                  "+e.type);this.spec=e})),this.instantiateFromSpec();const t=await Object(i.a)(this.checkpointURL+"/weights_manifest.json").then((e=>e.json())).then((e=>r.io.loadWeights(e,this.checkpointURL))),n=c.isWrapped(t),s=n?"rnn/attention_cell_wrapper/":"rnn/";this.forgetBias=r.scalar(1),this.lstmCells.length=0,this.biasShapes.length=0;let a=0;for(;;){const e=s+"multi_rnn_cell/cell_%d/basic_lstm_cell/".replace("%d",a.toString());if(!(e+"kernel"in t))break;this.lstmCells.push(((n,s,a)=>r.basicLSTMCell(this.forgetBias,t[e+"kernel"],t[e+"bias"],n,s,a))),this.biasShapes.push(t[e+"bias"].shape[0]),++a}this.lstmFcW=t["fully_connected/weights"],this.lstmFcB=t["fully_connected/biases"],n&&(this.attentionWrapper=new c(this.lstmCells,this.attentionLength,this.biasShapes[0]/4),this.attentionWrapper.initialize(t)),this.rawVars=t,this.initialized=!0,u.logWithDuration("Initialized model",e,"MusicRNN")}dispose(){Object.keys(this.rawVars).forEach((e=>this.rawVars[e].dispose())),this.rawVars={},this.forgetBias&&(this.forgetBias.dispose(),this.forgetBias=void 0),this.initialized=!1}async continueSequence(e,t,n,r){return(await this.continueSequenceImpl(e,t,n,r,!1)).sequence}async continueSequenceAndReturnProbabilities(e,t,n,r){return this.continueSequenceImpl(e,t,n,r,!0)}async continueSequenceImpl(e,t,n,s,a){if(l.assertIsRelativeQuantizedSequence(e),this.chordEncoder&&!s)throw new Error("Chord progression expected but not provided.");if(!this.chordEncoder&&s)throw new Error("Unexpected chord progression provided.");this.initialized||await this.initialize();const o=i.d.now(),c=r.tidy((()=>{const o=this.dataConverter.toTensor(e),i=o.shape[0],u=o.shape[1],l=this.chordEncoder?this.chordEncoder.encodeProgression(s,i+t):void 0,c=this.auxInputs?r.concat(this.auxInputs.map((e=>e.getTensors(i+t))),1):void 0,p=this.sampleRnn(o,t,n,l,c,a),h=p.samples;return{samples:r.stack(h).as2D(h.length,u),probs:p.probs}})),p=await c,h=this.dataConverter.toNoteSequence(p.samples,e.quantizationInfo.stepsPerQuarter),d=[];if(a)for(let e=0;e<p.probs.length;e++)d.push(await p.probs[e].data()),p.probs[e].dispose();return c.samples.dispose(),h.then((()=>u.logWithDuration("Continuation completed",o,"MusicRNN",20))),{sequence:h,probs:d}}sampleRnn(e,t,n,s,a,o){const i=e.shape[0],u=e.shape[1];let l=[],c=[];for(let e=0;e<this.biasShapes.length;e++)l.push(r.zeros([1,this.biasShapes[e]/4])),c.push(r.zeros([1,this.biasShapes[e]/4]));let p,h=this.attentionWrapper?this.attentionWrapper.initState():null;e=e.toFloat();const d=[],f=[],m=r.split(e.toFloat(),i),g=s?r.split(s,s.shape[0]):void 0,y=a?r.split(a,a.shape[0]):void 0;for(let e=0;e<i+t;e++){let s;if(e<i)s=m[e];else{let e,t=p.matMul(this.lstmFcW).add(this.lstmFcB).as1D();n?(t=t.div(r.scalar(n)),e=r.multinomial(t,1).as1D()):e=t.argMax().as1D(),o&&f.push(r.softmax(t)),s=r.oneHot(e,u).toFloat(),d.push(s.as1D())}if(e===i+t-1)break;const a=[];if(g&&a.push(g[e+1]),a.push(s),y&&a.push(y[e]),s=r.concat(a,1),this.attentionWrapper){const e=this.attentionWrapper.call(s,l,c,h);l=e.c,c=e.h,h=e.attentionState,p=e.output}else[l,c]=r.multiRNNCell(this.lstmCells,s,l,c),p=c[c.length-1]}return{samples:d,probs:f}}}},18:function(e,t,n){"use strict";(function(e){var r=t;function s(e,t,n){for(var r=Object.keys(t),s=0;s<r.length;++s)void 0!==e[r[s]]&&n||(e[r[s]]=t[r[s]]);return e}function a(e){function t(e,n){if(!(this instanceof t))return new t(e,n);Object.defineProperty(this,"message",{get:function(){return e}}),Error.captureStackTrace?Error.captureStackTrace(this,t):Object.defineProperty(this,"stack",{value:(new Error).stack||""}),n&&s(this,n)}return(t.prototype=Object.create(Error.prototype)).constructor=t,Object.defineProperty(t.prototype,"name",{get:function(){return e}}),t.prototype.toString=function(){return this.name+": "+this.message},t}r.asPromise=n(50),r.base64=n(51),r.EventEmitter=n(52),r.float=n(53),r.inquire=n(54),r.utf8=n(55),r.pool=n(56),r.LongBits=n(57),r.isNode=Boolean(void 0!==e&&e&&e.process&&e.process.versions&&e.process.versions.node),r.global=r.isNode&&e||"undefined"!=typeof window&&window||"undefined"!=typeof self&&self||this,r.emptyArray=Object.freeze?Object.freeze([]):[],r.emptyObject=Object.freeze?Object.freeze({}):{},r.isInteger=Number.isInteger||function(e){return"number"==typeof e&&isFinite(e)&&Math.floor(e)===e},r.isString=function(e){return"string"==typeof e||e instanceof String},r.isObject=function(e){return e&&"object"==typeof e},r.isset=r.isSet=function(e,t){var n=e[t];return!(null==n||!e.hasOwnProperty(t))&&("object"!=typeof n||(Array.isArray(n)?n.length:Object.keys(n).length)>0)},r.Buffer=function(){try{var e=r.inquire("buffer").Buffer;return e.prototype.utf8Write?e:null}catch(e){return null}}(),r._Buffer_from=null,r._Buffer_allocUnsafe=null,r.newBuffer=function(e){return"number"==typeof e?r.Buffer?r._Buffer_allocUnsafe(e):new r.Array(e):r.Buffer?r._Buffer_from(e):"undefined"==typeof Uint8Array?e:new Uint8Array(e)},r.Array="undefined"!=typeof Uint8Array?Uint8Array:Array,r.Long=r.global.dcodeIO&&r.global.dcodeIO.Long||r.global.Long||r.inquire("long"),r.key2Re=/^true|false|0|1$/,r.key32Re=/^-?(?:0|[1-9][0-9]*)$/,r.key64Re=/^(?:[\\x00-\\xff]{8}|-?(?:0|[1-9][0-9]*))$/,r.longToHash=function(e){return e?r.LongBits.from(e).toHash():r.LongBits.zeroHash},r.longFromHash=function(e,t){var n=r.LongBits.fromHash(e);return r.Long?r.Long.fromBits(n.lo,n.hi,t):n.toNumber(Boolean(t))},r.merge=s,r.lcFirst=function(e){return e.charAt(0).toLowerCase()+e.substring(1)},r.newError=a,r.ProtocolError=a("ProtocolError"),r.oneOfGetter=function(e){for(var t={},n=0;n<e.length;++n)t[e[n]]=1;return function(){for(var e=Object.keys(this),n=e.length-1;n>-1;--n)if(1===t[e[n]]&&void 0!==this[e[n]]&&null!==this[e[n]])return e[n]}},r.oneOfSetter=function(e){return function(t){for(var n=0;n<e.length;++n)e[n]!==t&&delete this[e[n]]}},r.toJSONOptions={longs:String,enums:String,bytes:String,json:!0},r._configure=function(){var e=r.Buffer;e?(r._Buffer_from=e.from!==Uint8Array.from&&e.from||function(t,n){return new e(t,n)},r._Buffer_allocUnsafe=e.allocUnsafe||function(t){return new e(t)}):r._Buffer_from=r._Buffer_allocUnsafe=null}}).call(this,n(21))},2:function(e,t){e.exports=__WEBPACK_EXTERNAL_MODULE__2__},21:function(e,t){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(e){"object"==typeof window&&(n=window)}e.exports=n},26:function(e,t,n){"use strict";n.r(t),n.d(t,"NO_EVENT",(function(){return o})),n.d(t,"NOTE_OFF",(function(){return i})),n.d(t,"Melody",(function(){return u})),n.d(t,"MelodyRhythm",(function(){return l})),n.d(t,"MelodyShape",(function(){return c})),n.d(t,"MelodyRegister",(function(){return p}));var r=n(2),s=n(9),a=n(15);const o=0,i=1;class u{constructor(e,t,n){this.events=e,this.minPitch=t,this.maxPitch=n}static fromNoteSequence(e,t,n,r=!0,s){a.assertIsQuantizedSequence(e);const o=e.notes.sort(((e,t)=>e.quantizedStartStep===t.quantizedStartStep?t.pitch-e.pitch:e.quantizedStartStep-t.quantizedStartStep)),l=new Int32Array(s||e.totalQuantizedSteps);let c=-1;return o.forEach((e=>{if(e.quantizedStartStep===c){if(r)return;throw new Error("`NoteSequence` is not monophonic.")}if(e.pitch<t||e.pitch>n)throw Error("`NoteSequence` has a pitch outside of the valid range: "+e.pitch);l[e.quantizedStartStep]=e.pitch-t+2,l[e.quantizedEndStep]=i,c=e.quantizedStartStep})),new u(l,t,n)}toNoteSequence(e,t){const n=a.createQuantizedNoteSequence(e,t);let r=null;for(let e=0;e<this.events.length;++e){const t=this.events[e];switch(t){case o:break;case i:r&&(r.quantizedEndStep=e,n.notes.push(r),r=null);break;default:r&&(r.quantizedEndStep=e,n.notes.push(r)),r=s.a.Note.create({pitch:t-2+this.minPitch,quantizedStartStep:e})}}return r&&(r.quantizedEndStep=this.events.length,n.notes.push(r)),n.totalQuantizedSteps=this.events.length,n}}class l{constructor(){this.depth=1}extract(e){const t=e.events.length,n=r.buffer([t,1]);for(let r=0;r<t;++r)n.set(e.events[r]>=2?1:0,r,0);return n.toTensor().as2D(t,1)}}class c{constructor(){this.depth=3}extract(e){const t=e.events.length,n=r.buffer([t,3]);let s=null,a=null;for(let r=0;r<t;++r)if(e.events[r]>=2){if(null!==s){let t;0===n.get(s,0)&&0===n.get(s,1)&&0===n.get(s,2)&&(s=-1),t=e.events[r]<a?0:e.events[r]>a?2:1;for(let e=r;e>s;--e)n.set(1,e,t)}s=r,a=e.events[r]}if(s!==t-1)if(null===s||0===n.get(s,0)&&0===n.get(s,1)&&0===n.get(s,2))for(let e=0;e<t;++e)n.set(1,e,1);else for(let e=t-1;e>s;--e)for(let t=0;t<3;t++)n.set(n.get(s,t),e,t);return n.toTensor().as2D(t,3)}}class p{constructor(e){this.boundaryPitches=e,this.depth=e.length+1}meanMelodyPitch(e){let t=0,n=0,r=null;for(let s=0;s<e.events.length;++s)e.events[s]===i?r=null:e.events[s]>=2&&(r=e.minPitch+e.events[s]-2),null!==r&&(t+=r,n+=1);return n?t/n:null}extract(e){const t=e.events.length,n=this.meanMelodyPitch(e);if(null===n)return r.zeros([t,this.depth]);let s=0;for(;s<this.boundaryPitches.length&&n>=this.boundaryPitches[s];)s++;const a=r.buffer([t,this.depth]);for(let e=0;e<t;++e)a.set(1,e,s);return a.toTensor().as2D(t,this.depth)}}},29:function(e,t,n){"use strict";n.r(t),n.d(t,"DEFAULT_DRUM_PITCH_CLASSES",(function(){return c})),n.d(t,"converterFromSpec",(function(){return p})),n.d(t,"DataConverter",(function(){return h})),n.d(t,"DrumsConverter",(function(){return d})),n.d(t,"DrumRollConverter",(function(){return f})),n.d(t,"DrumsOneHotConverter",(function(){return m})),n.d(t,"MelodyConverter",(function(){return g})),n.d(t,"MelodyRhythmConverter",(function(){return b})),n.d(t,"MelodyShapeConverter",(function(){return w})),n.d(t,"TrioConverter",(function(){return x})),n.d(t,"TrioRhythmConverter",(function(){return S})),n.d(t,"MultitrackConverter",(function(){return v})),n.d(t,"GrooveConverter",(function(){return k}));var r=n(2),s=n(9),a=n(8),o=n(13),i=n(26),u=n(33),l=n(15);const c=[[36,35],[38,27,28,31,32,33,34,37,39,40,56,65,66,75,85],[42,44,54,68,69,70,71,73,78,80],[46,67,72,74,79,81],[45,29,41,61,64,84],[48,47,60,63,77,86,87],[50,30,43,62,76,83],[49,55,57,58],[51,52,53,59,82]];function p(e){switch(e.type){case"MelodyConverter":return new g(e.args);case"MelodyRhythmConverter":return new b(e.args);case"MelodyShapeConverter":return new w(e.args);case"DrumsConverter":return new d(e.args);case"DrumRollConverter":return new f(e.args);case"TrioConverter":return new x(e.args);case"TrioRhythmConverter":return new S(e.args);case"DrumsOneHotConverter":return new m(e.args);case"MultitrackConverter":return new v(e.args);case"GrooveConverter":return new k(e.args);default:throw new Error("Unknown DataConverter type: "+e)}}class h{constructor(e){this.NUM_SPLITS=0,this.SEGMENTED_BY_TRACK=!1,this.numSteps=e.numSteps,this.numSegments=e.numSegments}tensorSteps(e){return r.scalar(e.shape[0],"int32")}}class d extends h{constructor(e){super(e),this.pitchClasses=e.pitchClasses||c,this.pitchToClass=new Map;for(let e=0;e<this.pitchClasses.length;++e)this.pitchClasses[e].forEach((t=>{this.pitchToClass.set(t,e)}));this.depth=this.pitchClasses.length+1}toTensor(e){l.assertIsQuantizedSequence(e);const t=this.numSteps||e.totalQuantizedSteps,n=r.buffer([t,this.pitchClasses.length+1],"int32");for(let e=0;e<t;++e)n.set(1,e,-1);return e.notes.forEach((e=>{n.set(1,e.quantizedStartStep,this.pitchToClass.get(e.pitch)),n.set(0,e.quantizedStartStep,-1)})),n.toTensor()}async toNoteSequence(e,t,n){const r=l.createQuantizedNoteSequence(t,n),a=e.argMax(1),o=await a.data();a.dispose();for(let e=0;e<o.length;++e)for(let t=0;t<this.pitchClasses.length;t++)o[e]>>t&1&&r.notes.push(s.a.Note.create({pitch:this.pitchClasses[t][0],quantizedStartStep:e,quantizedEndStep:e+1,isDrum:!0}));return r.totalQuantizedSteps=o.length,r}}class f extends d{async toNoteSequence(e,t,n){const r=l.createQuantizedNoteSequence(t,n),a=await e.data();for(let t=0;t<e.shape[0];++t){const e=a.slice(t*this.pitchClasses.length,(t+1)*this.pitchClasses.length);for(let n=0;n<e.length;++n)e[n]&&r.notes.push(s.a.Note.create({pitch:this.pitchClasses[n][0],quantizedStartStep:t,quantizedEndStep:t+1,isDrum:!0}))}return r.totalQuantizedSteps=e.shape[0],r}}class m extends d{constructor(e){super(e),this.depth=Math.pow(2,this.pitchClasses.length)}toTensor(e){l.assertIsRelativeQuantizedSequence(e);const t=this.numSteps||e.totalQuantizedSteps,n=Array(t).fill(0);for(const{pitch:t,quantizedStartStep:r}of e.notes)n[r]+=Math.pow(2,this.pitchToClass.get(t));return r.tidy((()=>r.oneHot(r.tensor1d(n,"int32"),this.depth)))}}class g extends h{constructor(e){super(e),this.NOTE_OFF=1,this.FIRST_PITCH=2,this.minPitch=e.minPitch,this.maxPitch=e.maxPitch,this.ignorePolyphony=e.ignorePolyphony,this.depth=e.maxPitch-e.minPitch+1+this.FIRST_PITCH}toTensor(e){const t=i.Melody.fromNoteSequence(e,this.minPitch,this.maxPitch,this.ignorePolyphony,this.numSteps);return r.tidy((()=>r.oneHot(r.tensor(t.events,[t.events.length],"int32"),this.depth)))}async toNoteSequence(e,t,n){const r=e.argMax(1),s=await r.data();return r.dispose(),new i.Melody(s,this.minPitch,this.maxPitch).toNoteSequence(t,n)}}class y extends h{constructor(e,t){super(e),this.minPitch=e.minPitch,this.maxPitch=e.maxPitch,this.ignorePolyphony=e.ignorePolyphony,this.melodyControl=t,this.depth=t.depth}toTensor(e){const t=i.Melody.fromNoteSequence(e,this.minPitch,this.maxPitch,this.ignorePolyphony,this.numSteps);return this.melodyControl.extract(t)}}class b extends y{constructor(e){super(e,new i.MelodyRhythm)}async toNoteSequence(e,t,n){const r=l.createQuantizedNoteSequence(t,n),a=await e.data();for(let e=0;e<a.length;++e)a[e]&&r.notes.push(s.a.Note.create({pitch:c[1][0],quantizedStartStep:e,quantizedEndStep:e+1,isDrum:!0}));return r.totalQuantizedSteps=a.length,r}}class w extends y{constructor(e){super(e,new i.MelodyShape)}async toNoteSequence(e,t,n){const r=l.createQuantizedNoteSequence(t,n),a=e.argMax(1),i=await a.data();a.dispose();let u=Math.round((this.maxPitch+this.minPitch)/2);for(let e=0;e<i.length;++e){switch(i[e]){case 0:u-=1,u<this.minPitch&&(u=this.minPitch,o.log("Pitch range exceeded when creating NoteSequence from shape.","MelodyShapeConverter"));break;case 2:u+=1,u>this.maxPitch&&(u=this.maxPitch,o.log("Pitch range exceeded when creating NoteSequence from shape.","MelodyShapeConverter"))}r.notes.push(s.a.Note.create({pitch:u,quantizedStartStep:e,quantizedEndStep:e+1}))}return r.totalQuantizedSteps=i.length,r}}class x extends h{constructor(e){super(e),this.NUM_SPLITS=3,this.MEL_PROG_RANGE=[0,31],this.BASS_PROG_RANGE=[32,39],e.melArgs.numSteps=e.numSteps,e.bassArgs.numSteps=e.numSteps,e.drumsArgs.numSteps=e.numSteps,this.melConverter=new g(e.melArgs),this.bassConverter=new g(e.bassArgs),this.drumsConverter=new m(e.drumsArgs),this.depth=this.melConverter.depth+this.bassConverter.depth+this.drumsConverter.depth}toTensor(e){l.assertIsQuantizedSequence(e);const t=l.clone(e),n=l.clone(e),s=l.clone(e);return t.notes=e.notes.filter((e=>!e.isDrum&&e.program>=this.MEL_PROG_RANGE[0]&&e.program<=this.MEL_PROG_RANGE[1])),n.notes=e.notes.filter((e=>!e.isDrum&&e.program>=this.BASS_PROG_RANGE[0]&&e.program<=this.BASS_PROG_RANGE[1])),s.notes=e.notes.filter((e=>e.isDrum)),r.tidy((()=>r.concat([this.melConverter.toTensor(t),this.bassConverter.toTensor(n),this.drumsConverter.toTensor(s)],-1)))}async toNoteSequence(e,t,n){const s=r.split(e,[this.melConverter.depth,this.bassConverter.depth,this.drumsConverter.depth],-1),a=await this.melConverter.toNoteSequence(s[0],t,n);a.notes.forEach((e=>{e.instrument=0,e.program=0}));const o=await this.bassConverter.toNoteSequence(s[1],t,n);a.notes.push(...o.notes.map((e=>(e.instrument=1,e.program=this.BASS_PROG_RANGE[0],e))));const i=await this.drumsConverter.toNoteSequence(s[2],t,n);return a.notes.push(...i.notes.map((e=>(e.instrument=2,e)))),s.forEach((e=>e.dispose())),a}}class S extends h{constructor(e){super(e),this.NUM_SPLITS=3,this.trioConverter=new x(e),this.depth=3}toTensor(e){return r.tidy((()=>{const t=this.trioConverter.toTensor(e),n=r.split(t,[this.trioConverter.melConverter.depth,this.trioConverter.bassConverter.depth,this.trioConverter.drumsConverter.depth],1),s=r.argMax(n[0],1),a=r.argMax(n[1],1),o=r.argMax(n[2],1),i=r.greater(s,1),u=r.greater(a,1),l=r.greater(o,0);return r.stack([i,u,l],1)}))}async toNoteSequence(e,t,n){const a=r.split(e,3,1),o=await Promise.all(a.map((e=>e.data()))),i=l.createQuantizedNoteSequence(t,n);for(let e=0;e<this.numSteps;++e)o[0][e]&&i.notes.push(s.a.Note.create({pitch:72,quantizedStartStep:e,quantizedEndStep:e+1,instrument:0,program:0})),o[1][e]&&i.notes.push(s.a.Note.create({pitch:36,quantizedStartStep:e,quantizedEndStep:e+1,instrument:1,program:32})),o[2][e]&&i.notes.push(s.a.Note.create({pitch:c[1][0],quantizedStartStep:e,quantizedEndStep:e+1,instrument:2,isDrum:!0}));return i.totalQuantizedSteps=this.numSteps,i}}class v extends h{constructor(e){super(e),this.SEGMENTED_BY_TRACK=!0,this.stepsPerQuarter=e.stepsPerQuarter,this.totalSteps=e.totalSteps,this.numVelocityBins=e.numVelocityBins,this.minPitch=e.minPitch?e.minPitch:a.MIN_MIDI_PITCH,this.maxPitch=e.maxPitch?e.maxPitch:a.MAX_MIDI_PITCH,this.numPitches=this.maxPitch-this.minPitch+1,this.performanceEventDepth=2*this.numPitches+this.totalSteps+this.numVelocityBins,this.numPrograms=a.MAX_MIDI_PROGRAM-a.MIN_MIDI_PROGRAM+2,this.endToken=this.performanceEventDepth+this.numPrograms,this.depth=this.endToken+1,this.endTensor=r.tidy((()=>r.oneHot(r.tensor1d([this.endToken],"int32"),this.depth).as1D()))}trackToTensor(e){const t=this.numSteps/this.numSegments;let n;if(e){for(;e.events.length>t-2;)e.events.pop();n=r.buffer([e.events.length+2],"int32"),n.set(this.performanceEventDepth+(e.isDrum?this.numPrograms-1:e.program),0),e.events.forEach(((e,t)=>{switch(e.type){case"note-on":n.set(e.pitch-this.minPitch,t+1);break;case"note-off":n.set(this.numPitches+e.pitch-this.minPitch,t+1);break;case"time-shift":n.set(2*this.numPitches+e.steps-1,t+1);break;case"velocity-change":n.set(2*this.numPitches+this.totalSteps+e.velocityBin-1,t+1);break;default:throw new Error("Unrecognized performance event: "+e)}})),n.set(this.endToken,e.events.length+1)}else n=r.buffer([1],"int32",new Int32Array([this.endToken]));return r.tidy((()=>{const e=r.oneHot(n.toTensor(),this.depth);return e.pad([[0,t-e.shape[0]],[0,0]])}))}toTensor(e){if(l.assertIsRelativeQuantizedSequence(e),e.quantizationInfo.stepsPerQuarter!==this.stepsPerQuarter)throw new Error(`Steps per quarter note mismatch: ${e.quantizationInfo.stepsPerQuarter} != ${this.stepsPerQuarter}`);const t=l.clone(e);t.notes=e.notes.filter((e=>e.pitch>=this.minPitch&&e.pitch<=this.maxPitch));const n=new Set(t.notes.map((e=>e.instrument))),s=Array.from(n).map((e=>u.Performance.fromNoteSequence(t,this.totalSteps,this.numVelocityBins,e))).sort(((e,t)=>t.isDrum?-1:e.isDrum?1:e.program-t.program));for(;s.length>this.numSegments;)s.pop();for(s.forEach((e=>e.setNumSteps(this.totalSteps)));s.length<this.numSegments;)s.push(void 0);return r.tidy((()=>r.concat(s.map((e=>this.trackToTensor(e))),0)))}tokensToTrack(e){const t=e.indexOf(this.endToken),n=t>=0?t:e.length,r=e.slice(0,n),s=r.filter((e=>e<this.performanceEventDepth)),a=r.filter((e=>e>=this.performanceEventDepth)),[o,i]=a.length?a[0]-this.performanceEventDepth<this.numPrograms-1?[a[0]-this.performanceEventDepth,!1]:[0,!0]:[0,!1],l=Array.from(s).map((e=>{if(e<this.numPitches)return{type:"note-on",pitch:this.minPitch+e};if(e<2*this.numPitches)return{type:"note-off",pitch:this.minPitch+e-this.numPitches};if(e<2*this.numPitches+this.totalSteps)return{type:"time-shift",steps:e-2*this.numPitches+1};if(e<2*this.numPitches+this.totalSteps+this.numVelocityBins)return{type:"velocity-change",velocityBin:e-2*this.numPitches-this.totalSteps+1};throw new Error("Invalid performance event token: "+e)}));return new u.Performance(l,this.totalSteps,this.numVelocityBins,o,i)}async toNoteSequence(e,t=this.stepsPerQuarter,n){const s=l.createQuantizedNoteSequence(t,n);s.totalQuantizedSteps=this.totalSteps;const a=r.tidy((()=>r.split(e.argMax(1),this.numSegments)));return(await Promise.all(a.map((async e=>{const t=await e.data(),n=this.tokensToTrack(t);return e.dispose(),n})))).forEach(((e,t)=>{e.setNumSteps(this.totalSteps),s.notes.push(...e.toNoteSequence(t).notes)})),s}}class k extends h{constructor(e){super(e),this.TAPIFY_CHANNEL=3,this.stepsPerQuarter=e.stepsPerQuarter||a.DEFAULT_STEPS_PER_QUARTER,this.pitchClasses=e.pitchClasses||c,this.pitchToClass=new Map;for(let e=0;e<this.pitchClasses.length;++e)this.pitchClasses[e].forEach((t=>{this.pitchToClass.set(t,e)}));this.humanize=e.humanize||!1,this.tapify=e.tapify||!1,this.splitInstruments=e.splitInstruments||!1,this.depth=3}toTensor(e){const t=l.isRelativeQuantizedSequence(e)?e:l.quantizeNoteSequence(e,this.stepsPerQuarter),n=this.numSteps,s=t.tempos&&t.tempos.length?t.tempos[0].qpm:a.DEFAULT_QUARTERS_PER_MINUTE,o=60/s/this.stepsPerQuarter,i=[];for(let e=0;e<n;++e)i.push(new Map);t.notes.forEach((e=>{if(!this.tapify&&!this.pitchToClass.has(e.pitch))return;const t=e.quantizedStartStep;if(t>=i.length)throw Error(`Model does not support sequences with more than ${n} steps (${n*o} seconds at qpm ${s}).`);const r=this.tapify?this.TAPIFY_CHANNEL:this.pitchToClass.get(e.pitch);(!i[t].has(r)||i[t].get(r).velocity<e.velocity)&&i[t].set(r,e)}));const u=this.pitchClasses.length,c=r.buffer([n,u]),p=r.buffer([n,u]),h=r.buffer([n,u]);function d(e){if(void 0===e.startTime)return 0;const t=e.startTime;return 2*(e.quantizedStartStep*o-t)/o}for(let e=0;e<n;++e)for(let t=0;t<u;++t){const n=i[e].get(t);c.set(n?1:0,e,t),this.humanize||this.tapify||p.set(n?n.velocity/a.MAX_MIDI_VELOCITY:0,e,t),this.humanize||h.set(n?d(n):0,e,t)}return r.tidy((()=>{const e=c.toTensor(),t=p.toTensor(),s=h.toTensor(),a=this.splitInstruments?n*u:n;return r.concat([e.as2D(a,-1),t.as2D(a,-1),s.as2D(a,-1)],1)}))}async toNoteSequence(e,t,n=a.DEFAULT_QUARTERS_PER_MINUTE){if(t&&t!==this.stepsPerQuarter)throw Error("`stepsPerQuarter` is set by the model.");t=this.stepsPerQuarter;const r=this.splitInstruments?e.shape[0]/this.pitchClasses.length:e.shape[0],o=60/n/this.stepsPerQuarter,i=s.a.create({totalTime:r*o,tempos:[{qpm:n}]}),u=await e.data();function l(e,t,n){return Math.min(Math.max(e,t),n)}const c=this.pitchClasses.length;for(let e=0;e<r;++e){const t=u.slice(e*c*this.depth,(e+1)*c*this.depth);for(let n=0;n<c;++n){const r=t[this.splitInstruments?n*this.depth:n],u=t[this.splitInstruments?n*this.depth+1:c+n],p=t[this.splitInstruments?n*this.depth+2:2*c+n];if(r>.5){const t=l(Math.round(u*a.MAX_MIDI_VELOCITY),a.MIN_MIDI_VELOCITY,a.MAX_MIDI_VELOCITY),r=l(p/2,-.5,.5);i.notes.push(s.a.Note.create({pitch:this.pitchClasses[n][0],startTime:(e-r)*o,endTime:(e-r+1)*o,velocity:t,isDrum:!0}))}}}return i}}},33:function(e,t,n){"use strict";n.r(t),n.d(t,"Performance",(function(){return i}));var r=n(9),s=n(8),a=n(15),o=n(13);class i{constructor(e,t,n,r,s){this.events=e,this.maxShiftSteps=t,this.numVelocityBins=n,this.program=r,this.isDrum=s}static fromNoteSequence(e,t,n,r){a.assertIsQuantizedSequence(e);const o=e.notes.filter(((e,t)=>void 0===r||e.instrument===r)),u=o.sort(((e,t)=>e.startTime===t.startTime?e.pitch-t.pitch:e.startTime-t.startTime)),l=u.map(((e,t)=>({step:e.quantizedStartStep,index:t,isOffset:0}))),c=u.map(((e,t)=>({step:e.quantizedEndStep,index:t,isOffset:1}))),p=l.concat(c).sort(((e,t)=>e.step===t.step?e.index===t.index?e.isOffset-t.isOffset:e.index-t.index:e.step-t.step)),h=n?Math.ceil((s.MIDI_VELOCITIES-1)/n):void 0,d=[];let f=0,m=n;for(const e of p){if(e.step>f){for(;e.step>f+t;)d.push({type:"time-shift",steps:t}),f+=t;d.push({type:"time-shift",steps:e.step-f}),f=e.step}if(e.isOffset)d.push({type:"note-off",pitch:u[e.index].pitch});else{if(h){const t=Math.floor((u[e.index].velocity-s.MIN_MIDI_VELOCITY-1)/h)+1;t!==m&&(d.push({type:"velocity-change",velocityBin:t}),m=t)}d.push({type:"note-on",pitch:u[e.index].pitch})}}const g=!!o.some((e=>e.isDrum))&&(!o.some((e=>!e.isDrum))||void 0),y=Array.from(new Set(o.map((e=>e.program)))),b=g||1!==y.length?void 0:y[0],w=new i(d,t,n,b,g);return w.setNumSteps(e.totalQuantizedSteps),w}getNumSteps(){return this.events.filter((e=>"time-shift"===e.type)).map((e=>e.steps)).reduce(((e,t)=>e+t),0)}setNumSteps(e){let t=this.getNumSteps();if(t<e){if(this.events.length){const n=this.events[this.events.length-1];if("time-shift"===n.type){const r=Math.min(e-t,this.maxShiftSteps-n.steps);n.steps+=r,t+=r}}for(;t<e;)t+this.maxShiftSteps>e?(this.events.push({type:"time-shift",steps:e-t}),t=e):(this.events.push({type:"time-shift",steps:this.maxShiftSteps}),t+=this.maxShiftSteps)}else if(t>e)for(;this.events.length&&t>e;){const n=this.events[this.events.length-1];"time-shift"===n.type?t-n.steps<e?(n.steps-=t-e,t=e):(this.events.pop(),t-=n.steps):this.events.pop()}}toNoteSequence(e){const t=this.numVelocityBins?Math.ceil((s.MIDI_VELOCITIES-1)/this.numVelocityBins):void 0,n=r.a.create();let a,i=0;const u=new Map;for(let e=s.MIN_MIDI_PITCH;e<=s.MAX_MIDI_PITCH;++e)u.set(e,[]);for(const l of this.events)switch(l.type){case"note-on":u.get(l.pitch).push([i,a]);break;case"note-off":const c=u.get(l.pitch);if(c.length){const[t,s]=c.shift();i>t?n.notes.push(r.a.Note.create({pitch:l.pitch,velocity:s,instrument:e,quantizedStartStep:t,quantizedEndStep:i,program:this.program,isDrum:this.isDrum})):o.log(`Ignoring zero-length note: (pitch = ${l.pitch}, step = ${i})`,"Performance")}else o.log(`Ignoring note-off with no previous note-on:(pitch = ${l.pitch}, step = ${i})`,"Performance");break;case"time-shift":i+=l.steps;break;case"velocity-change":if(!t)throw new Error("Unexpected velocity change event: "+l);a=s.MIN_MIDI_VELOCITY+(l.velocityBin-1)*t+1;break;default:throw new Error("Unrecognized performance event: "+l)}return u.forEach(((t,s)=>{for(const[a,u]of t)i>a?n.notes.push(r.a.Note.create({pitch:s,velocity:u,instrument:e,quantizedStartStep:a,quantizedEndStep:i,program:this.program,isDrum:this.isDrum})):o.log(`Ignoring zero-length note: (pitch = ${s}, step = ${i})`,"Performance")})),n.totalQuantizedSteps=i,n}}},35:function(e,t,n){"use strict";e.exports=p;var r,s=n(18),a=s.LongBits,o=s.base64,i=s.utf8;function u(e,t,n){this.fn=e,this.len=t,this.next=void 0,this.val=n}function l(){}function c(e){this.head=e.head,this.tail=e.tail,this.len=e.len,this.next=e.states}function p(){this.len=0,this.head=new u(l,0,0),this.tail=this.head,this.states=null}var h=function(){return s.Buffer?function(){return(p.create=function(){return new r})()}:function(){return new p}};function d(e,t,n){t[n]=255&e}function f(e,t){this.len=e,this.next=void 0,this.val=t}function m(e,t,n){for(;e.hi;)t[n++]=127&e.lo|128,e.lo=(e.lo>>>7|e.hi<<25)>>>0,e.hi>>>=7;for(;e.lo>127;)t[n++]=127&e.lo|128,e.lo=e.lo>>>7;t[n++]=e.lo}function g(e,t,n){t[n]=255&e,t[n+1]=e>>>8&255,t[n+2]=e>>>16&255,t[n+3]=e>>>24}p.create=h(),p.alloc=function(e){return new s.Array(e)},s.Array!==Array&&(p.alloc=s.pool(p.alloc,s.Array.prototype.subarray)),p.prototype._push=function(e,t,n){return this.tail=this.tail.next=new u(e,t,n),this.len+=t,this},f.prototype=Object.create(u.prototype),f.prototype.fn=function(e,t,n){for(;e>127;)t[n++]=127&e|128,e>>>=7;t[n]=e},p.prototype.uint32=function(e){return this.len+=(this.tail=this.tail.next=new f((e>>>=0)<128?1:e<16384?2:e<2097152?3:e<268435456?4:5,e)).len,this},p.prototype.int32=function(e){return e<0?this._push(m,10,a.fromNumber(e)):this.uint32(e)},p.prototype.sint32=function(e){return this.uint32((e<<1^e>>31)>>>0)},p.prototype.uint64=function(e){var t=a.from(e);return this._push(m,t.length(),t)},p.prototype.int64=p.prototype.uint64,p.prototype.sint64=function(e){var t=a.from(e).zzEncode();return this._push(m,t.length(),t)},p.prototype.bool=function(e){return this._push(d,1,e?1:0)},p.prototype.fixed32=function(e){return this._push(g,4,e>>>0)},p.prototype.sfixed32=p.prototype.fixed32,p.prototype.fixed64=function(e){var t=a.from(e);return this._push(g,4,t.lo)._push(g,4,t.hi)},p.prototype.sfixed64=p.prototype.fixed64,p.prototype.float=function(e){return this._push(s.float.writeFloatLE,4,e)},p.prototype.double=function(e){return this._push(s.float.writeDoubleLE,8,e)};var y=s.Array.prototype.set?function(e,t,n){t.set(e,n)}:function(e,t,n){for(var r=0;r<e.length;++r)t[n+r]=e[r]};p.prototype.bytes=function(e){var t=e.length>>>0;if(!t)return this._push(d,1,0);if(s.isString(e)){var n=p.alloc(t=o.length(e));o.decode(e,n,0),e=n}return this.uint32(t)._push(y,t,e)},p.prototype.string=function(e){var t=i.length(e);return t?this.uint32(t)._push(i.write,t,e):this._push(d,1,0)},p.prototype.fork=function(){return this.states=new c(this),this.head=this.tail=new u(l,0,0),this.len=0,this},p.prototype.reset=function(){return this.states?(this.head=this.states.head,this.tail=this.states.tail,this.len=this.states.len,this.states=this.states.next):(this.head=this.tail=new u(l,0,0),this.len=0),this},p.prototype.ldelim=function(){var e=this.head,t=this.tail,n=this.len;return this.reset().uint32(n),n&&(this.tail.next=e.next,this.tail=t,this.len+=n),this},p.prototype.finish=function(){for(var e=this.head.next,t=this.constructor.alloc(this.len),n=0;e;)e.fn(e.val,t,n),n+=e.len,e=e.next;return t},p._configure=function(e){r=e,p.create=h(),r._configure()}},36:function(e,t,n){"use strict";e.exports=u;var r,s=n(18),a=s.LongBits,o=s.utf8;function i(e,t){return RangeError("index out of range: "+e.pos+" + "+(t||1)+" > "+e.len)}function u(e){this.buf=e,this.pos=0,this.len=e.length}var l,c="undefined"!=typeof Uint8Array?function(e){if(e instanceof Uint8Array||Array.isArray(e))return new u(e);throw Error("illegal buffer")}:function(e){if(Array.isArray(e))return new u(e);throw Error("illegal buffer")},p=function(){return s.Buffer?function(e){return(u.create=function(e){return s.Buffer.isBuffer(e)?new r(e):c(e)})(e)}:c};function h(){var e=new a(0,0),t=0;if(!(this.len-this.pos>4)){for(;t<3;++t){if(this.pos>=this.len)throw i(this);if(e.lo=(e.lo|(127&this.buf[this.pos])<<7*t)>>>0,this.buf[this.pos++]<128)return e}return e.lo=(e.lo|(127&this.buf[this.pos++])<<7*t)>>>0,e}for(;t<4;++t)if(e.lo=(e.lo|(127&this.buf[this.pos])<<7*t)>>>0,this.buf[this.pos++]<128)return e;if(e.lo=(e.lo|(127&this.buf[this.pos])<<28)>>>0,e.hi=(e.hi|(127&this.buf[this.pos])>>4)>>>0,this.buf[this.pos++]<128)return e;if(t=0,this.len-this.pos>4){for(;t<5;++t)if(e.hi=(e.hi|(127&this.buf[this.pos])<<7*t+3)>>>0,this.buf[this.pos++]<128)return e}else for(;t<5;++t){if(this.pos>=this.len)throw i(this);if(e.hi=(e.hi|(127&this.buf[this.pos])<<7*t+3)>>>0,this.buf[this.pos++]<128)return e}throw Error("invalid varint encoding")}function d(e,t){return(e[t-4]|e[t-3]<<8|e[t-2]<<16|e[t-1]<<24)>>>0}function f(){if(this.pos+8>this.len)throw i(this,8);return new a(d(this.buf,this.pos+=4),d(this.buf,this.pos+=4))}u.create=p(),u.prototype._slice=s.Array.prototype.subarray||s.Array.prototype.slice,u.prototype.uint32=(l=4294967295,function(){if(l=(127&this.buf[this.pos])>>>0,this.buf[this.pos++]<128)return l;if(l=(l|(127&this.buf[this.pos])<<7)>>>0,this.buf[this.pos++]<128)return l;if(l=(l|(127&this.buf[this.pos])<<14)>>>0,this.buf[this.pos++]<128)return l;if(l=(l|(127&this.buf[this.pos])<<21)>>>0,this.buf[this.pos++]<128)return l;if(l=(l|(15&this.buf[this.pos])<<28)>>>0,this.buf[this.pos++]<128)return l;if((this.pos+=5)>this.len)throw this.pos=this.len,i(this,10);return l}),u.prototype.int32=function(){return 0|this.uint32()},u.prototype.sint32=function(){var e=this.uint32();return e>>>1^-(1&e)|0},u.prototype.bool=function(){return 0!==this.uint32()},u.prototype.fixed32=function(){if(this.pos+4>this.len)throw i(this,4);return d(this.buf,this.pos+=4)},u.prototype.sfixed32=function(){if(this.pos+4>this.len)throw i(this,4);return 0|d(this.buf,this.pos+=4)},u.prototype.float=function(){if(this.pos+4>this.len)throw i(this,4);var e=s.float.readFloatLE(this.buf,this.pos);return this.pos+=4,e},u.prototype.double=function(){if(this.pos+8>this.len)throw i(this,4);var e=s.float.readDoubleLE(this.buf,this.pos);return this.pos+=8,e},u.prototype.bytes=function(){var e=this.uint32(),t=this.pos,n=this.pos+e;if(n>this.len)throw i(this,e);return this.pos+=e,Array.isArray(this.buf)?this.buf.slice(t,n):t===n?new this.buf.constructor(0):this._slice.call(this.buf,t,n)},u.prototype.string=function(){var e=this.bytes();return o.read(e,0,e.length)},u.prototype.skip=function(e){if("number"==typeof e){if(this.pos+e>this.len)throw i(this,e);this.pos+=e}else do{if(this.pos>=this.len)throw i(this)}while(128&this.buf[this.pos++]);return this},u.prototype.skipType=function(e){switch(e){case 0:this.skip();break;case 1:this.skip(8);break;case 2:this.skip(this.uint32());break;case 3:for(;4!=(e=7&this.uint32());)this.skipType(e);break;case 5:this.skip(4);break;default:throw Error("invalid wire type "+e+" at offset "+this.pos)}return this},u._configure=function(e){r=e,u.create=p(),r._configure();var t=s.Long?"toLong":"toNumber";s.merge(u.prototype,{int64:function(){return h.call(this)[t](!1)},uint64:function(){return h.call(this)[t](!0)},sint64:function(){return h.call(this).zzDecode()[t](!1)},fixed64:function(){return f.call(this)[t](!0)},sfixed64:function(){return f.call(this)[t](!1)}})}},38:function(e,t,n){"use strict";var r,s,a=n(48),o=a.Reader,i=a.Writer,u=a.util,l=a.roots.default||(a.roots.default={});l.tensorflow=((s={}).magenta=((r={}).NoteSequence=function(){function e(e){if(this.timeSignatures=[],this.keySignatures=[],this.tempos=[],this.notes=[],this.pitchBends=[],this.controlChanges=[],this.partInfos=[],this.textAnnotations=[],this.sectionAnnotations=[],this.sectionGroups=[],e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}var t,n;return e.prototype.id="",e.prototype.filename="",e.prototype.referenceNumber=u.Long?u.Long.fromBits(0,0,!1):0,e.prototype.collectionName="",e.prototype.ticksPerQuarter=0,e.prototype.timeSignatures=u.emptyArray,e.prototype.keySignatures=u.emptyArray,e.prototype.tempos=u.emptyArray,e.prototype.notes=u.emptyArray,e.prototype.totalTime=0,e.prototype.totalQuantizedSteps=u.Long?u.Long.fromBits(0,0,!1):0,e.prototype.pitchBends=u.emptyArray,e.prototype.controlChanges=u.emptyArray,e.prototype.partInfos=u.emptyArray,e.prototype.sourceInfo=null,e.prototype.textAnnotations=u.emptyArray,e.prototype.sectionAnnotations=u.emptyArray,e.prototype.sectionGroups=u.emptyArray,e.prototype.quantizationInfo=null,e.prototype.subsequenceInfo=null,e.prototype.sequenceMetadata=null,e.create=function(t){return new e(t)},e.encode=function(e,t){if(t||(t=i.create()),null!=e.id&&e.hasOwnProperty("id")&&t.uint32(10).string(e.id),null!=e.filename&&e.hasOwnProperty("filename")&&t.uint32(18).string(e.filename),null!=e.collectionName&&e.hasOwnProperty("collectionName")&&t.uint32(26).string(e.collectionName),null!=e.ticksPerQuarter&&e.hasOwnProperty("ticksPerQuarter")&&t.uint32(32).int32(e.ticksPerQuarter),null!=e.timeSignatures&&e.timeSignatures.length)for(var n=0;n<e.timeSignatures.length;++n)l.tensorflow.magenta.NoteSequence.TimeSignature.encode(e.timeSignatures[n],t.uint32(42).fork()).ldelim();if(null!=e.keySignatures&&e.keySignatures.length)for(n=0;n<e.keySignatures.length;++n)l.tensorflow.magenta.NoteSequence.KeySignature.encode(e.keySignatures[n],t.uint32(50).fork()).ldelim();if(null!=e.tempos&&e.tempos.length)for(n=0;n<e.tempos.length;++n)l.tensorflow.magenta.NoteSequence.Tempo.encode(e.tempos[n],t.uint32(58).fork()).ldelim();if(null!=e.notes&&e.notes.length)for(n=0;n<e.notes.length;++n)l.tensorflow.magenta.NoteSequence.Note.encode(e.notes[n],t.uint32(66).fork()).ldelim();if(null!=e.totalTime&&e.hasOwnProperty("totalTime")&&t.uint32(73).double(e.totalTime),null!=e.pitchBends&&e.pitchBends.length)for(n=0;n<e.pitchBends.length;++n)l.tensorflow.magenta.NoteSequence.PitchBend.encode(e.pitchBends[n],t.uint32(82).fork()).ldelim();if(null!=e.controlChanges&&e.controlChanges.length)for(n=0;n<e.controlChanges.length;++n)l.tensorflow.magenta.NoteSequence.ControlChange.encode(e.controlChanges[n],t.uint32(90).fork()).ldelim();if(null!=e.partInfos&&e.partInfos.length)for(n=0;n<e.partInfos.length;++n)l.tensorflow.magenta.NoteSequence.PartInfo.encode(e.partInfos[n],t.uint32(98).fork()).ldelim();if(null!=e.sourceInfo&&e.hasOwnProperty("sourceInfo")&&l.tensorflow.magenta.NoteSequence.SourceInfo.encode(e.sourceInfo,t.uint32(106).fork()).ldelim(),null!=e.textAnnotations&&e.textAnnotations.length)for(n=0;n<e.textAnnotations.length;++n)l.tensorflow.magenta.NoteSequence.TextAnnotation.encode(e.textAnnotations[n],t.uint32(114).fork()).ldelim();if(null!=e.quantizationInfo&&e.hasOwnProperty("quantizationInfo")&&l.tensorflow.magenta.NoteSequence.QuantizationInfo.encode(e.quantizationInfo,t.uint32(122).fork()).ldelim(),null!=e.totalQuantizedSteps&&e.hasOwnProperty("totalQuantizedSteps")&&t.uint32(128).int64(e.totalQuantizedSteps),null!=e.subsequenceInfo&&e.hasOwnProperty("subsequenceInfo")&&l.tensorflow.magenta.NoteSequence.SubsequenceInfo.encode(e.subsequenceInfo,t.uint32(138).fork()).ldelim(),null!=e.referenceNumber&&e.hasOwnProperty("referenceNumber")&&t.uint32(144).int64(e.referenceNumber),null!=e.sequenceMetadata&&e.hasOwnProperty("sequenceMetadata")&&l.tensorflow.magenta.SequenceMetadata.encode(e.sequenceMetadata,t.uint32(154).fork()).ldelim(),null!=e.sectionAnnotations&&e.sectionAnnotations.length)for(n=0;n<e.sectionAnnotations.length;++n)l.tensorflow.magenta.NoteSequence.SectionAnnotation.encode(e.sectionAnnotations[n],t.uint32(162).fork()).ldelim();if(null!=e.sectionGroups&&e.sectionGroups.length)for(n=0;n<e.sectionGroups.length;++n)l.tensorflow.magenta.NoteSequence.SectionGroup.encode(e.sectionGroups[n],t.uint32(170).fork()).ldelim();return t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof o||(e=o.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new l.tensorflow.magenta.NoteSequence;e.pos<n;){var s=e.uint32();switch(s>>>3){case 1:r.id=e.string();break;case 2:r.filename=e.string();break;case 18:r.referenceNumber=u.Long?e.int64().toNumber():e.int64();break;case 3:r.collectionName=e.string();break;case 4:r.ticksPerQuarter=e.int32();break;case 5:r.timeSignatures&&r.timeSignatures.length||(r.timeSignatures=[]),r.timeSignatures.push(l.tensorflow.magenta.NoteSequence.TimeSignature.decode(e,e.uint32()));break;case 6:r.keySignatures&&r.keySignatures.length||(r.keySignatures=[]),r.keySignatures.push(l.tensorflow.magenta.NoteSequence.KeySignature.decode(e,e.uint32()));break;case 7:r.tempos&&r.tempos.length||(r.tempos=[]),r.tempos.push(l.tensorflow.magenta.NoteSequence.Tempo.decode(e,e.uint32()));break;case 8:r.notes&&r.notes.length||(r.notes=[]),r.notes.push(l.tensorflow.magenta.NoteSequence.Note.decode(e,e.uint32()));break;case 9:r.totalTime=e.double();break;case 16:r.totalQuantizedSteps=u.Long?e.int64().toNumber():e.int64();break;case 10:r.pitchBends&&r.pitchBends.length||(r.pitchBends=[]),r.pitchBends.push(l.tensorflow.magenta.NoteSequence.PitchBend.decode(e,e.uint32()));break;case 11:r.controlChanges&&r.controlChanges.length||(r.controlChanges=[]),r.controlChanges.push(l.tensorflow.magenta.NoteSequence.ControlChange.decode(e,e.uint32()));break;case 12:r.partInfos&&r.partInfos.length||(r.partInfos=[]),r.partInfos.push(l.tensorflow.magenta.NoteSequence.PartInfo.decode(e,e.uint32()));break;case 13:r.sourceInfo=l.tensorflow.magenta.NoteSequence.SourceInfo.decode(e,e.uint32());break;case 14:r.textAnnotations&&r.textAnnotations.length||(r.textAnnotations=[]),r.textAnnotations.push(l.tensorflow.magenta.NoteSequence.TextAnnotation.decode(e,e.uint32()));break;case 20:r.sectionAnnotations&&r.sectionAnnotations.length||(r.sectionAnnotations=[]),r.sectionAnnotations.push(l.tensorflow.magenta.NoteSequence.SectionAnnotation.decode(e,e.uint32()));break;case 21:r.sectionGroups&&r.sectionGroups.length||(r.sectionGroups=[]),r.sectionGroups.push(l.tensorflow.magenta.NoteSequence.SectionGroup.decode(e,e.uint32()));break;case 15:r.quantizationInfo=l.tensorflow.magenta.NoteSequence.QuantizationInfo.decode(e,e.uint32());break;case 17:r.subsequenceInfo=l.tensorflow.magenta.NoteSequence.SubsequenceInfo.decode(e,e.uint32());break;case 19:r.sequenceMetadata=l.tensorflow.magenta.SequenceMetadata.decode(e,e.uint32());break;default:e.skipType(7&s)}}return r},e.decodeDelimited=function(e){return e instanceof o||(e=new o(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";if(null!=e.id&&e.hasOwnProperty("id")&&!u.isString(e.id))return"id: string expected";if(null!=e.filename&&e.hasOwnProperty("filename")&&!u.isString(e.filename))return"filename: string expected";if(null!=e.referenceNumber&&e.hasOwnProperty("referenceNumber")&&!(u.isInteger(e.referenceNumber)||e.referenceNumber&&u.isInteger(e.referenceNumber.low)&&u.isInteger(e.referenceNumber.high)))return"referenceNumber: integer|Long expected";if(null!=e.collectionName&&e.hasOwnProperty("collectionName")&&!u.isString(e.collectionName))return"collectionName: string expected";if(null!=e.ticksPerQuarter&&e.hasOwnProperty("ticksPerQuarter")&&!u.isInteger(e.ticksPerQuarter))return"ticksPerQuarter: integer expected";if(null!=e.timeSignatures&&e.hasOwnProperty("timeSignatures")){if(!Array.isArray(e.timeSignatures))return"timeSignatures: array expected";for(var t=0;t<e.timeSignatures.length;++t)if(n=l.tensorflow.magenta.NoteSequence.TimeSignature.verify(e.timeSignatures[t]))return"timeSignatures."+n}if(null!=e.keySignatures&&e.hasOwnProperty("keySignatures")){if(!Array.isArray(e.keySignatures))return"keySignatures: array expected";for(t=0;t<e.keySignatures.length;++t)if(n=l.tensorflow.magenta.NoteSequence.KeySignature.verify(e.keySignatures[t]))return"keySignatures."+n}if(null!=e.tempos&&e.hasOwnProperty("tempos")){if(!Array.isArray(e.tempos))return"tempos: array expected";for(t=0;t<e.tempos.length;++t)if(n=l.tensorflow.magenta.NoteSequence.Tempo.verify(e.tempos[t]))return"tempos."+n}if(null!=e.notes&&e.hasOwnProperty("notes")){if(!Array.isArray(e.notes))return"notes: array expected";for(t=0;t<e.notes.length;++t)if(n=l.tensorflow.magenta.NoteSequence.Note.verify(e.notes[t]))return"notes."+n}if(null!=e.totalTime&&e.hasOwnProperty("totalTime")&&"number"!=typeof e.totalTime)return"totalTime: number expected";if(null!=e.totalQuantizedSteps&&e.hasOwnProperty("totalQuantizedSteps")&&!(u.isInteger(e.totalQuantizedSteps)||e.totalQuantizedSteps&&u.isInteger(e.totalQuantizedSteps.low)&&u.isInteger(e.totalQuantizedSteps.high)))return"totalQuantizedSteps: integer|Long expected";if(null!=e.pitchBends&&e.hasOwnProperty("pitchBends")){if(!Array.isArray(e.pitchBends))return"pitchBends: array expected";for(t=0;t<e.pitchBends.length;++t)if(n=l.tensorflow.magenta.NoteSequence.PitchBend.verify(e.pitchBends[t]))return"pitchBends."+n}if(null!=e.controlChanges&&e.hasOwnProperty("controlChanges")){if(!Array.isArray(e.controlChanges))return"controlChanges: array expected";for(t=0;t<e.controlChanges.length;++t)if(n=l.tensorflow.magenta.NoteSequence.ControlChange.verify(e.controlChanges[t]))return"controlChanges."+n}if(null!=e.partInfos&&e.hasOwnProperty("partInfos")){if(!Array.isArray(e.partInfos))return"partInfos: array expected";for(t=0;t<e.partInfos.length;++t)if(n=l.tensorflow.magenta.NoteSequence.PartInfo.verify(e.partInfos[t]))return"partInfos."+n}if(null!=e.sourceInfo&&e.hasOwnProperty("sourceInfo")&&(n=l.tensorflow.magenta.NoteSequence.SourceInfo.verify(e.sourceInfo)))return"sourceInfo."+n;if(null!=e.textAnnotations&&e.hasOwnProperty("textAnnotations")){if(!Array.isArray(e.textAnnotations))return"textAnnotations: array expected";for(t=0;t<e.textAnnotations.length;++t)if(n=l.tensorflow.magenta.NoteSequence.TextAnnotation.verify(e.textAnnotations[t]))return"textAnnotations."+n}if(null!=e.sectionAnnotations&&e.hasOwnProperty("sectionAnnotations")){if(!Array.isArray(e.sectionAnnotations))return"sectionAnnotations: array expected";for(t=0;t<e.sectionAnnotations.length;++t)if(n=l.tensorflow.magenta.NoteSequence.SectionAnnotation.verify(e.sectionAnnotations[t]))return"sectionAnnotations."+n}if(null!=e.sectionGroups&&e.hasOwnProperty("sectionGroups")){if(!Array.isArray(e.sectionGroups))return"sectionGroups: array expected";for(t=0;t<e.sectionGroups.length;++t){var n;if(n=l.tensorflow.magenta.NoteSequence.SectionGroup.verify(e.sectionGroups[t]))return"sectionGroups."+n}}return null!=e.quantizationInfo&&e.hasOwnProperty("quantizationInfo")&&(n=l.tensorflow.magenta.NoteSequence.QuantizationInfo.verify(e.quantizationInfo))?"quantizationInfo."+n:null!=e.subsequenceInfo&&e.hasOwnProperty("subsequenceInfo")&&(n=l.tensorflow.magenta.NoteSequence.SubsequenceInfo.verify(e.subsequenceInfo))?"subsequenceInfo."+n:null!=e.sequenceMetadata&&e.hasOwnProperty("sequenceMetadata")&&(n=l.tensorflow.magenta.SequenceMetadata.verify(e.sequenceMetadata))?"sequenceMetadata."+n:null},e.fromObject=function(e){if(e instanceof l.tensorflow.magenta.NoteSequence)return e;var t=new l.tensorflow.magenta.NoteSequence;if(null!=e.id&&(t.id=String(e.id)),null!=e.filename&&(t.filename=String(e.filename)),null!=e.referenceNumber&&(u.Long?(t.referenceNumber=u.Long.fromValue(e.referenceNumber)).unsigned=!1:"string"==typeof e.referenceNumber?t.referenceNumber=parseInt(e.referenceNumber,10):"number"==typeof e.referenceNumber?t.referenceNumber=e.referenceNumber:"object"==typeof e.referenceNumber&&(t.referenceNumber=new u.LongBits(e.referenceNumber.low>>>0,e.referenceNumber.high>>>0).toNumber())),null!=e.collectionName&&(t.collectionName=String(e.collectionName)),null!=e.ticksPerQuarter&&(t.ticksPerQuarter=0|e.ticksPerQuarter),e.timeSignatures){if(!Array.isArray(e.timeSignatures))throw TypeError(".tensorflow.magenta.NoteSequence.timeSignatures: array expected");t.timeSignatures=[];for(var n=0;n<e.timeSignatures.length;++n){if("object"!=typeof e.timeSignatures[n])throw TypeError(".tensorflow.magenta.NoteSequence.timeSignatures: object expected");t.timeSignatures[n]=l.tensorflow.magenta.NoteSequence.TimeSignature.fromObject(e.timeSignatures[n])}}if(e.keySignatures){if(!Array.isArray(e.keySignatures))throw TypeError(".tensorflow.magenta.NoteSequence.keySignatures: array expected");for(t.keySignatures=[],n=0;n<e.keySignatures.length;++n){if("object"!=typeof e.keySignatures[n])throw TypeError(".tensorflow.magenta.NoteSequence.keySignatures: object expected");t.keySignatures[n]=l.tensorflow.magenta.NoteSequence.KeySignature.fromObject(e.keySignatures[n])}}if(e.tempos){if(!Array.isArray(e.tempos))throw TypeError(".tensorflow.magenta.NoteSequence.tempos: array expected");for(t.tempos=[],n=0;n<e.tempos.length;++n){if("object"!=typeof e.tempos[n])throw TypeError(".tensorflow.magenta.NoteSequence.tempos: object expected");t.tempos[n]=l.tensorflow.magenta.NoteSequence.Tempo.fromObject(e.tempos[n])}}if(e.notes){if(!Array.isArray(e.notes))throw TypeError(".tensorflow.magenta.NoteSequence.notes: array expected");for(t.notes=[],n=0;n<e.notes.length;++n){if("object"!=typeof e.notes[n])throw TypeError(".tensorflow.magenta.NoteSequence.notes: object expected");t.notes[n]=l.tensorflow.magenta.NoteSequence.Note.fromObject(e.notes[n])}}if(null!=e.totalTime&&(t.totalTime=Number(e.totalTime)),null!=e.totalQuantizedSteps&&(u.Long?(t.totalQuantizedSteps=u.Long.fromValue(e.totalQuantizedSteps)).unsigned=!1:"string"==typeof e.totalQuantizedSteps?t.totalQuantizedSteps=parseInt(e.totalQuantizedSteps,10):"number"==typeof e.totalQuantizedSteps?t.totalQuantizedSteps=e.totalQuantizedSteps:"object"==typeof e.totalQuantizedSteps&&(t.totalQuantizedSteps=new u.LongBits(e.totalQuantizedSteps.low>>>0,e.totalQuantizedSteps.high>>>0).toNumber())),e.pitchBends){if(!Array.isArray(e.pitchBends))throw TypeError(".tensorflow.magenta.NoteSequence.pitchBends: array expected");for(t.pitchBends=[],n=0;n<e.pitchBends.length;++n){if("object"!=typeof e.pitchBends[n])throw TypeError(".tensorflow.magenta.NoteSequence.pitchBends: object expected");t.pitchBends[n]=l.tensorflow.magenta.NoteSequence.PitchBend.fromObject(e.pitchBends[n])}}if(e.controlChanges){if(!Array.isArray(e.controlChanges))throw TypeError(".tensorflow.magenta.NoteSequence.controlChanges: array expected");for(t.controlChanges=[],n=0;n<e.controlChanges.length;++n){if("object"!=typeof e.controlChanges[n])throw TypeError(".tensorflow.magenta.NoteSequence.controlChanges: object expected");t.controlChanges[n]=l.tensorflow.magenta.NoteSequence.ControlChange.fromObject(e.controlChanges[n])}}if(e.partInfos){if(!Array.isArray(e.partInfos))throw TypeError(".tensorflow.magenta.NoteSequence.partInfos: array expected");for(t.partInfos=[],n=0;n<e.partInfos.length;++n){if("object"!=typeof e.partInfos[n])throw TypeError(".tensorflow.magenta.NoteSequence.partInfos: object expected");t.partInfos[n]=l.tensorflow.magenta.NoteSequence.PartInfo.fromObject(e.partInfos[n])}}if(null!=e.sourceInfo){if("object"!=typeof e.sourceInfo)throw TypeError(".tensorflow.magenta.NoteSequence.sourceInfo: object expected");t.sourceInfo=l.tensorflow.magenta.NoteSequence.SourceInfo.fromObject(e.sourceInfo)}if(e.textAnnotations){if(!Array.isArray(e.textAnnotations))throw TypeError(".tensorflow.magenta.NoteSequence.textAnnotations: array expected");for(t.textAnnotations=[],n=0;n<e.textAnnotations.length;++n){if("object"!=typeof e.textAnnotations[n])throw TypeError(".tensorflow.magenta.NoteSequence.textAnnotations: object expected");t.textAnnotations[n]=l.tensorflow.magenta.NoteSequence.TextAnnotation.fromObject(e.textAnnotations[n])}}if(e.sectionAnnotations){if(!Array.isArray(e.sectionAnnotations))throw TypeError(".tensorflow.magenta.NoteSequence.sectionAnnotations: array expected");for(t.sectionAnnotations=[],n=0;n<e.sectionAnnotations.length;++n){if("object"!=typeof e.sectionAnnotations[n])throw TypeError(".tensorflow.magenta.NoteSequence.sectionAnnotations: object expected");t.sectionAnnotations[n]=l.tensorflow.magenta.NoteSequence.SectionAnnotation.fromObject(e.sectionAnnotations[n])}}if(e.sectionGroups){if(!Array.isArray(e.sectionGroups))throw TypeError(".tensorflow.magenta.NoteSequence.sectionGroups: array expected");for(t.sectionGroups=[],n=0;n<e.sectionGroups.length;++n){if("object"!=typeof e.sectionGroups[n])throw TypeError(".tensorflow.magenta.NoteSequence.sectionGroups: object expected");t.sectionGroups[n]=l.tensorflow.magenta.NoteSequence.SectionGroup.fromObject(e.sectionGroups[n])}}if(null!=e.quantizationInfo){if("object"!=typeof e.quantizationInfo)throw TypeError(".tensorflow.magenta.NoteSequence.quantizationInfo: object expected");t.quantizationInfo=l.tensorflow.magenta.NoteSequence.QuantizationInfo.fromObject(e.quantizationInfo)}if(null!=e.subsequenceInfo){if("object"!=typeof e.subsequenceInfo)throw TypeError(".tensorflow.magenta.NoteSequence.subsequenceInfo: object expected");t.subsequenceInfo=l.tensorflow.magenta.NoteSequence.SubsequenceInfo.fromObject(e.subsequenceInfo)}if(null!=e.sequenceMetadata){if("object"!=typeof e.sequenceMetadata)throw TypeError(".tensorflow.magenta.NoteSequence.sequenceMetadata: object expected");t.sequenceMetadata=l.tensorflow.magenta.SequenceMetadata.fromObject(e.sequenceMetadata)}return t},e.toObject=function(e,t){t||(t={});var n={};if((t.arrays||t.defaults)&&(n.timeSignatures=[],n.keySignatures=[],n.tempos=[],n.notes=[],n.pitchBends=[],n.controlChanges=[],n.partInfos=[],n.textAnnotations=[],n.sectionAnnotations=[],n.sectionGroups=[]),t.defaults){if(n.id="",n.filename="",n.collectionName="",n.ticksPerQuarter=0,n.totalTime=0,n.sourceInfo=null,n.quantizationInfo=null,u.Long){var r=new u.Long(0,0,!1);n.totalQuantizedSteps=t.longs===String?r.toString():t.longs===Number?r.toNumber():r}else n.totalQuantizedSteps=t.longs===String?"0":0;n.subsequenceInfo=null,u.Long?(r=new u.Long(0,0,!1),n.referenceNumber=t.longs===String?r.toString():t.longs===Number?r.toNumber():r):n.referenceNumber=t.longs===String?"0":0,n.sequenceMetadata=null}if(null!=e.id&&e.hasOwnProperty("id")&&(n.id=e.id),null!=e.filename&&e.hasOwnProperty("filename")&&(n.filename=e.filename),null!=e.collectionName&&e.hasOwnProperty("collectionName")&&(n.collectionName=e.collectionName),null!=e.ticksPerQuarter&&e.hasOwnProperty("ticksPerQuarter")&&(n.ticksPerQuarter=e.ticksPerQuarter),e.timeSignatures&&e.timeSignatures.length){n.timeSignatures=[];for(var s=0;s<e.timeSignatures.length;++s)n.timeSignatures[s]=l.tensorflow.magenta.NoteSequence.TimeSignature.toObject(e.timeSignatures[s],t)}if(e.keySignatures&&e.keySignatures.length)for(n.keySignatures=[],s=0;s<e.keySignatures.length;++s)n.keySignatures[s]=l.tensorflow.magenta.NoteSequence.KeySignature.toObject(e.keySignatures[s],t);if(e.tempos&&e.tempos.length)for(n.tempos=[],s=0;s<e.tempos.length;++s)n.tempos[s]=l.tensorflow.magenta.NoteSequence.Tempo.toObject(e.tempos[s],t);if(e.notes&&e.notes.length)for(n.notes=[],s=0;s<e.notes.length;++s)n.notes[s]=l.tensorflow.magenta.NoteSequence.Note.toObject(e.notes[s],t);if(null!=e.totalTime&&e.hasOwnProperty("totalTime")&&(n.totalTime=t.json&&!isFinite(e.totalTime)?String(e.totalTime):e.totalTime),e.pitchBends&&e.pitchBends.length)for(n.pitchBends=[],s=0;s<e.pitchBends.length;++s)n.pitchBends[s]=l.tensorflow.magenta.NoteSequence.PitchBend.toObject(e.pitchBends[s],t);if(e.controlChanges&&e.controlChanges.length)for(n.controlChanges=[],s=0;s<e.controlChanges.length;++s)n.controlChanges[s]=l.tensorflow.magenta.NoteSequence.ControlChange.toObject(e.controlChanges[s],t);if(e.partInfos&&e.partInfos.length)for(n.partInfos=[],s=0;s<e.partInfos.length;++s)n.partInfos[s]=l.tensorflow.magenta.NoteSequence.PartInfo.toObject(e.partInfos[s],t);if(null!=e.sourceInfo&&e.hasOwnProperty("sourceInfo")&&(n.sourceInfo=l.tensorflow.magenta.NoteSequence.SourceInfo.toObject(e.sourceInfo,t)),e.textAnnotations&&e.textAnnotations.length)for(n.textAnnotations=[],s=0;s<e.textAnnotations.length;++s)n.textAnnotations[s]=l.tensorflow.magenta.NoteSequence.TextAnnotation.toObject(e.textAnnotations[s],t);if(null!=e.quantizationInfo&&e.hasOwnProperty("quantizationInfo")&&(n.quantizationInfo=l.tensorflow.magenta.NoteSequence.QuantizationInfo.toObject(e.quantizationInfo,t)),null!=e.totalQuantizedSteps&&e.hasOwnProperty("totalQuantizedSteps")&&("number"==typeof e.totalQuantizedSteps?n.totalQuantizedSteps=t.longs===String?String(e.totalQuantizedSteps):e.totalQuantizedSteps:n.totalQuantizedSteps=t.longs===String?u.Long.prototype.toString.call(e.totalQuantizedSteps):t.longs===Number?new u.LongBits(e.totalQuantizedSteps.low>>>0,e.totalQuantizedSteps.high>>>0).toNumber():e.totalQuantizedSteps),null!=e.subsequenceInfo&&e.hasOwnProperty("subsequenceInfo")&&(n.subsequenceInfo=l.tensorflow.magenta.NoteSequence.SubsequenceInfo.toObject(e.subsequenceInfo,t)),null!=e.referenceNumber&&e.hasOwnProperty("referenceNumber")&&("number"==typeof e.referenceNumber?n.referenceNumber=t.longs===String?String(e.referenceNumber):e.referenceNumber:n.referenceNumber=t.longs===String?u.Long.prototype.toString.call(e.referenceNumber):t.longs===Number?new u.LongBits(e.referenceNumber.low>>>0,e.referenceNumber.high>>>0).toNumber():e.referenceNumber),null!=e.sequenceMetadata&&e.hasOwnProperty("sequenceMetadata")&&(n.sequenceMetadata=l.tensorflow.magenta.SequenceMetadata.toObject(e.sequenceMetadata,t)),e.sectionAnnotations&&e.sectionAnnotations.length)for(n.sectionAnnotations=[],s=0;s<e.sectionAnnotations.length;++s)n.sectionAnnotations[s]=l.tensorflow.magenta.NoteSequence.SectionAnnotation.toObject(e.sectionAnnotations[s],t);if(e.sectionGroups&&e.sectionGroups.length)for(n.sectionGroups=[],s=0;s<e.sectionGroups.length;++s)n.sectionGroups[s]=l.tensorflow.magenta.NoteSequence.SectionGroup.toObject(e.sectionGroups[s],t);return n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e.Note=function(){function e(e){if(e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.pitch=0,e.prototype.pitchName=0,e.prototype.velocity=0,e.prototype.startTime=0,e.prototype.quantizedStartStep=u.Long?u.Long.fromBits(0,0,!1):0,e.prototype.endTime=0,e.prototype.quantizedEndStep=u.Long?u.Long.fromBits(0,0,!1):0,e.prototype.numerator=0,e.prototype.denominator=0,e.prototype.instrument=0,e.prototype.program=0,e.prototype.isDrum=!1,e.prototype.part=0,e.prototype.voice=0,e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=i.create()),null!=e.pitch&&e.hasOwnProperty("pitch")&&t.uint32(8).int32(e.pitch),null!=e.velocity&&e.hasOwnProperty("velocity")&&t.uint32(16).int32(e.velocity),null!=e.startTime&&e.hasOwnProperty("startTime")&&t.uint32(25).double(e.startTime),null!=e.endTime&&e.hasOwnProperty("endTime")&&t.uint32(33).double(e.endTime),null!=e.numerator&&e.hasOwnProperty("numerator")&&t.uint32(40).int32(e.numerator),null!=e.denominator&&e.hasOwnProperty("denominator")&&t.uint32(48).int32(e.denominator),null!=e.instrument&&e.hasOwnProperty("instrument")&&t.uint32(56).int32(e.instrument),null!=e.program&&e.hasOwnProperty("program")&&t.uint32(64).int32(e.program),null!=e.isDrum&&e.hasOwnProperty("isDrum")&&t.uint32(72).bool(e.isDrum),null!=e.part&&e.hasOwnProperty("part")&&t.uint32(80).int32(e.part),null!=e.pitchName&&e.hasOwnProperty("pitchName")&&t.uint32(88).int32(e.pitchName),null!=e.voice&&e.hasOwnProperty("voice")&&t.uint32(96).int32(e.voice),null!=e.quantizedStartStep&&e.hasOwnProperty("quantizedStartStep")&&t.uint32(104).int64(e.quantizedStartStep),null!=e.quantizedEndStep&&e.hasOwnProperty("quantizedEndStep")&&t.uint32(112).int64(e.quantizedEndStep),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof o||(e=o.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new l.tensorflow.magenta.NoteSequence.Note;e.pos<n;){var s=e.uint32();switch(s>>>3){case 1:r.pitch=e.int32();break;case 11:r.pitchName=e.int32();break;case 2:r.velocity=e.int32();break;case 3:r.startTime=e.double();break;case 13:r.quantizedStartStep=u.Long?e.int64().toNumber():e.int64();break;case 4:r.endTime=e.double();break;case 14:r.quantizedEndStep=u.Long?e.int64().toNumber():e.int64();break;case 5:r.numerator=e.int32();break;case 6:r.denominator=e.int32();break;case 7:r.instrument=e.int32();break;case 8:r.program=e.int32();break;case 9:r.isDrum=e.bool();break;case 10:r.part=e.int32();break;case 12:r.voice=e.int32();break;default:e.skipType(7&s)}}return r},e.decodeDelimited=function(e){return e instanceof o||(e=new o(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";if(null!=e.pitch&&e.hasOwnProperty("pitch")&&!u.isInteger(e.pitch))return"pitch: integer expected";if(null!=e.pitchName&&e.hasOwnProperty("pitchName"))switch(e.pitchName){default:return"pitchName: enum value expected";case 0:case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:case 13:case 14:case 15:case 16:case 17:case 18:case 19:case 20:case 21:case 22:case 23:case 24:case 25:case 26:case 27:case 28:case 29:case 30:case 31:case 32:case 33:case 34:case 35:}return null!=e.velocity&&e.hasOwnProperty("velocity")&&!u.isInteger(e.velocity)?"velocity: integer expected":null!=e.startTime&&e.hasOwnProperty("startTime")&&"number"!=typeof e.startTime?"startTime: number expected":null!=e.quantizedStartStep&&e.hasOwnProperty("quantizedStartStep")&&!(u.isInteger(e.quantizedStartStep)||e.quantizedStartStep&&u.isInteger(e.quantizedStartStep.low)&&u.isInteger(e.quantizedStartStep.high))?"quantizedStartStep: integer|Long expected":null!=e.endTime&&e.hasOwnProperty("endTime")&&"number"!=typeof e.endTime?"endTime: number expected":null!=e.quantizedEndStep&&e.hasOwnProperty("quantizedEndStep")&&!(u.isInteger(e.quantizedEndStep)||e.quantizedEndStep&&u.isInteger(e.quantizedEndStep.low)&&u.isInteger(e.quantizedEndStep.high))?"quantizedEndStep: integer|Long expected":null!=e.numerator&&e.hasOwnProperty("numerator")&&!u.isInteger(e.numerator)?"numerator: integer expected":null!=e.denominator&&e.hasOwnProperty("denominator")&&!u.isInteger(e.denominator)?"denominator: integer expected":null!=e.instrument&&e.hasOwnProperty("instrument")&&!u.isInteger(e.instrument)?"instrument: integer expected":null!=e.program&&e.hasOwnProperty("program")&&!u.isInteger(e.program)?"program: integer expected":null!=e.isDrum&&e.hasOwnProperty("isDrum")&&"boolean"!=typeof e.isDrum?"isDrum: boolean expected":null!=e.part&&e.hasOwnProperty("part")&&!u.isInteger(e.part)?"part: integer expected":null!=e.voice&&e.hasOwnProperty("voice")&&!u.isInteger(e.voice)?"voice: integer expected":null},e.fromObject=function(e){if(e instanceof l.tensorflow.magenta.NoteSequence.Note)return e;var t=new l.tensorflow.magenta.NoteSequence.Note;switch(null!=e.pitch&&(t.pitch=0|e.pitch),e.pitchName){case"UNKNOWN_PITCH_NAME":case 0:t.pitchName=0;break;case"F_FLAT_FLAT":case 1:t.pitchName=1;break;case"C_FLAT_FLAT":case 2:t.pitchName=2;break;case"G_FLAT_FLAT":case 3:t.pitchName=3;break;case"D_FLAT_FLAT":case 4:t.pitchName=4;break;case"A_FLAT_FLAT":case 5:t.pitchName=5;break;case"E_FLAT_FLAT":case 6:t.pitchName=6;break;case"B_FLAT_FLAT":case 7:t.pitchName=7;break;case"F_FLAT":case 8:t.pitchName=8;break;case"C_FLAT":case 9:t.pitchName=9;break;case"G_FLAT":case 10:t.pitchName=10;break;case"D_FLAT":case 11:t.pitchName=11;break;case"A_FLAT":case 12:t.pitchName=12;break;case"E_FLAT":case 13:t.pitchName=13;break;case"B_FLAT":case 14:t.pitchName=14;break;case"F":case 15:t.pitchName=15;break;case"C":case 16:t.pitchName=16;break;case"G":case 17:t.pitchName=17;break;case"D":case 18:t.pitchName=18;break;case"A":case 19:t.pitchName=19;break;case"E":case 20:t.pitchName=20;break;case"B":case 21:t.pitchName=21;break;case"F_SHARP":case 22:t.pitchName=22;break;case"C_SHARP":case 23:t.pitchName=23;break;case"G_SHARP":case 24:t.pitchName=24;break;case"D_SHARP":case 25:t.pitchName=25;break;case"A_SHARP":case 26:t.pitchName=26;break;case"E_SHARP":case 27:t.pitchName=27;break;case"B_SHARP":case 28:t.pitchName=28;break;case"F_SHARP_SHARP":case 29:t.pitchName=29;break;case"C_SHARP_SHARP":case 30:t.pitchName=30;break;case"G_SHARP_SHARP":case 31:t.pitchName=31;break;case"D_SHARP_SHARP":case 32:t.pitchName=32;break;case"A_SHARP_SHARP":case 33:t.pitchName=33;break;case"E_SHARP_SHARP":case 34:t.pitchName=34;break;case"B_SHARP_SHARP":case 35:t.pitchName=35}return null!=e.velocity&&(t.velocity=0|e.velocity),null!=e.startTime&&(t.startTime=Number(e.startTime)),null!=e.quantizedStartStep&&(u.Long?(t.quantizedStartStep=u.Long.fromValue(e.quantizedStartStep)).unsigned=!1:"string"==typeof e.quantizedStartStep?t.quantizedStartStep=parseInt(e.quantizedStartStep,10):"number"==typeof e.quantizedStartStep?t.quantizedStartStep=e.quantizedStartStep:"object"==typeof e.quantizedStartStep&&(t.quantizedStartStep=new u.LongBits(e.quantizedStartStep.low>>>0,e.quantizedStartStep.high>>>0).toNumber())),null!=e.endTime&&(t.endTime=Number(e.endTime)),null!=e.quantizedEndStep&&(u.Long?(t.quantizedEndStep=u.Long.fromValue(e.quantizedEndStep)).unsigned=!1:"string"==typeof e.quantizedEndStep?t.quantizedEndStep=parseInt(e.quantizedEndStep,10):"number"==typeof e.quantizedEndStep?t.quantizedEndStep=e.quantizedEndStep:"object"==typeof e.quantizedEndStep&&(t.quantizedEndStep=new u.LongBits(e.quantizedEndStep.low>>>0,e.quantizedEndStep.high>>>0).toNumber())),null!=e.numerator&&(t.numerator=0|e.numerator),null!=e.denominator&&(t.denominator=0|e.denominator),null!=e.instrument&&(t.instrument=0|e.instrument),null!=e.program&&(t.program=0|e.program),null!=e.isDrum&&(t.isDrum=Boolean(e.isDrum)),null!=e.part&&(t.part=0|e.part),null!=e.voice&&(t.voice=0|e.voice),t},e.toObject=function(e,t){t||(t={});var n={};if(t.defaults){if(n.pitch=0,n.velocity=0,n.startTime=0,n.endTime=0,n.numerator=0,n.denominator=0,n.instrument=0,n.program=0,n.isDrum=!1,n.part=0,n.pitchName=t.enums===String?"UNKNOWN_PITCH_NAME":0,n.voice=0,u.Long){var r=new u.Long(0,0,!1);n.quantizedStartStep=t.longs===String?r.toString():t.longs===Number?r.toNumber():r}else n.quantizedStartStep=t.longs===String?"0":0;u.Long?(r=new u.Long(0,0,!1),n.quantizedEndStep=t.longs===String?r.toString():t.longs===Number?r.toNumber():r):n.quantizedEndStep=t.longs===String?"0":0}return null!=e.pitch&&e.hasOwnProperty("pitch")&&(n.pitch=e.pitch),null!=e.velocity&&e.hasOwnProperty("velocity")&&(n.velocity=e.velocity),null!=e.startTime&&e.hasOwnProperty("startTime")&&(n.startTime=t.json&&!isFinite(e.startTime)?String(e.startTime):e.startTime),null!=e.endTime&&e.hasOwnProperty("endTime")&&(n.endTime=t.json&&!isFinite(e.endTime)?String(e.endTime):e.endTime),null!=e.numerator&&e.hasOwnProperty("numerator")&&(n.numerator=e.numerator),null!=e.denominator&&e.hasOwnProperty("denominator")&&(n.denominator=e.denominator),null!=e.instrument&&e.hasOwnProperty("instrument")&&(n.instrument=e.instrument),null!=e.program&&e.hasOwnProperty("program")&&(n.program=e.program),null!=e.isDrum&&e.hasOwnProperty("isDrum")&&(n.isDrum=e.isDrum),null!=e.part&&e.hasOwnProperty("part")&&(n.part=e.part),null!=e.pitchName&&e.hasOwnProperty("pitchName")&&(n.pitchName=t.enums===String?l.tensorflow.magenta.NoteSequence.PitchName[e.pitchName]:e.pitchName),null!=e.voice&&e.hasOwnProperty("voice")&&(n.voice=e.voice),null!=e.quantizedStartStep&&e.hasOwnProperty("quantizedStartStep")&&("number"==typeof e.quantizedStartStep?n.quantizedStartStep=t.longs===String?String(e.quantizedStartStep):e.quantizedStartStep:n.quantizedStartStep=t.longs===String?u.Long.prototype.toString.call(e.quantizedStartStep):t.longs===Number?new u.LongBits(e.quantizedStartStep.low>>>0,e.quantizedStartStep.high>>>0).toNumber():e.quantizedStartStep),null!=e.quantizedEndStep&&e.hasOwnProperty("quantizedEndStep")&&("number"==typeof e.quantizedEndStep?n.quantizedEndStep=t.longs===String?String(e.quantizedEndStep):e.quantizedEndStep:n.quantizedEndStep=t.longs===String?u.Long.prototype.toString.call(e.quantizedEndStep):t.longs===Number?new u.LongBits(e.quantizedEndStep.low>>>0,e.quantizedEndStep.high>>>0).toNumber():e.quantizedEndStep),n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e}(),e.PitchName=(t={},(n=Object.create(t))[t[0]="UNKNOWN_PITCH_NAME"]=0,n[t[1]="F_FLAT_FLAT"]=1,n[t[2]="C_FLAT_FLAT"]=2,n[t[3]="G_FLAT_FLAT"]=3,n[t[4]="D_FLAT_FLAT"]=4,n[t[5]="A_FLAT_FLAT"]=5,n[t[6]="E_FLAT_FLAT"]=6,n[t[7]="B_FLAT_FLAT"]=7,n[t[8]="F_FLAT"]=8,n[t[9]="C_FLAT"]=9,n[t[10]="G_FLAT"]=10,n[t[11]="D_FLAT"]=11,n[t[12]="A_FLAT"]=12,n[t[13]="E_FLAT"]=13,n[t[14]="B_FLAT"]=14,n[t[15]="F"]=15,n[t[16]="C"]=16,n[t[17]="G"]=17,n[t[18]="D"]=18,n[t[19]="A"]=19,n[t[20]="E"]=20,n[t[21]="B"]=21,n[t[22]="F_SHARP"]=22,n[t[23]="C_SHARP"]=23,n[t[24]="G_SHARP"]=24,n[t[25]="D_SHARP"]=25,n[t[26]="A_SHARP"]=26,n[t[27]="E_SHARP"]=27,n[t[28]="B_SHARP"]=28,n[t[29]="F_SHARP_SHARP"]=29,n[t[30]="C_SHARP_SHARP"]=30,n[t[31]="G_SHARP_SHARP"]=31,n[t[32]="D_SHARP_SHARP"]=32,n[t[33]="A_SHARP_SHARP"]=33,n[t[34]="E_SHARP_SHARP"]=34,n[t[35]="B_SHARP_SHARP"]=35,n),e.TimeSignature=function(){function e(e){if(e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.time=0,e.prototype.numerator=0,e.prototype.denominator=0,e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=i.create()),null!=e.time&&e.hasOwnProperty("time")&&t.uint32(9).double(e.time),null!=e.numerator&&e.hasOwnProperty("numerator")&&t.uint32(16).int32(e.numerator),null!=e.denominator&&e.hasOwnProperty("denominator")&&t.uint32(24).int32(e.denominator),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof o||(e=o.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new l.tensorflow.magenta.NoteSequence.TimeSignature;e.pos<n;){var s=e.uint32();switch(s>>>3){case 1:r.time=e.double();break;case 2:r.numerator=e.int32();break;case 3:r.denominator=e.int32();break;default:e.skipType(7&s)}}return r},e.decodeDelimited=function(e){return e instanceof o||(e=new o(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!=typeof e||null===e?"object expected":null!=e.time&&e.hasOwnProperty("time")&&"number"!=typeof e.time?"time: number expected":null!=e.numerator&&e.hasOwnProperty("numerator")&&!u.isInteger(e.numerator)?"numerator: integer expected":null!=e.denominator&&e.hasOwnProperty("denominator")&&!u.isInteger(e.denominator)?"denominator: integer expected":null},e.fromObject=function(e){if(e instanceof l.tensorflow.magenta.NoteSequence.TimeSignature)return e;var t=new l.tensorflow.magenta.NoteSequence.TimeSignature;return null!=e.time&&(t.time=Number(e.time)),null!=e.numerator&&(t.numerator=0|e.numerator),null!=e.denominator&&(t.denominator=0|e.denominator),t},e.toObject=function(e,t){t||(t={});var n={};return t.defaults&&(n.time=0,n.numerator=0,n.denominator=0),null!=e.time&&e.hasOwnProperty("time")&&(n.time=t.json&&!isFinite(e.time)?String(e.time):e.time),null!=e.numerator&&e.hasOwnProperty("numerator")&&(n.numerator=e.numerator),null!=e.denominator&&e.hasOwnProperty("denominator")&&(n.denominator=e.denominator),n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e}(),e.KeySignature=function(){function e(e){if(e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.time=0,e.prototype.key=0,e.prototype.mode=0,e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=i.create()),null!=e.time&&e.hasOwnProperty("time")&&t.uint32(9).double(e.time),null!=e.key&&e.hasOwnProperty("key")&&t.uint32(16).int32(e.key),null!=e.mode&&e.hasOwnProperty("mode")&&t.uint32(24).int32(e.mode),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof o||(e=o.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new l.tensorflow.magenta.NoteSequence.KeySignature;e.pos<n;){var s=e.uint32();switch(s>>>3){case 1:r.time=e.double();break;case 2:r.key=e.int32();break;case 3:r.mode=e.int32();break;default:e.skipType(7&s)}}return r},e.decodeDelimited=function(e){return e instanceof o||(e=new o(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";if(null!=e.time&&e.hasOwnProperty("time")&&"number"!=typeof e.time)return"time: number expected";if(null!=e.key&&e.hasOwnProperty("key"))switch(e.key){default:return"key: enum value expected";case 0:case 1:case 1:case 2:case 3:case 3:case 4:case 5:case 6:case 6:case 7:case 8:case 8:case 9:case 10:case 10:case 11:}if(null!=e.mode&&e.hasOwnProperty("mode"))switch(e.mode){default:return"mode: enum value expected";case 0:case 1:case 2:case 3:case 4:case 5:case 6:case 7:}return null},e.fromObject=function(e){if(e instanceof l.tensorflow.magenta.NoteSequence.KeySignature)return e;var t=new l.tensorflow.magenta.NoteSequence.KeySignature;switch(null!=e.time&&(t.time=Number(e.time)),e.key){case"C":case 0:t.key=0;break;case"C_SHARP":case 1:t.key=1;break;case"D_FLAT":case 1:t.key=1;break;case"D":case 2:t.key=2;break;case"D_SHARP":case 3:t.key=3;break;case"E_FLAT":case 3:t.key=3;break;case"E":case 4:t.key=4;break;case"F":case 5:t.key=5;break;case"F_SHARP":case 6:t.key=6;break;case"G_FLAT":case 6:t.key=6;break;case"G":case 7:t.key=7;break;case"G_SHARP":case 8:t.key=8;break;case"A_FLAT":case 8:t.key=8;break;case"A":case 9:t.key=9;break;case"A_SHARP":case 10:t.key=10;break;case"B_FLAT":case 10:t.key=10;break;case"B":case 11:t.key=11}switch(e.mode){case"MAJOR":case 0:t.mode=0;break;case"MINOR":case 1:t.mode=1;break;case"NOT_SPECIFIED":case 2:t.mode=2;break;case"MIXOLYDIAN":case 3:t.mode=3;break;case"DORIAN":case 4:t.mode=4;break;case"PHRYGIAN":case 5:t.mode=5;break;case"LYDIAN":case 6:t.mode=6;break;case"LOCRIAN":case 7:t.mode=7}return t},e.toObject=function(e,t){t||(t={});var n={};return t.defaults&&(n.time=0,n.key=t.enums===String?"C":0,n.mode=t.enums===String?"MAJOR":0),null!=e.time&&e.hasOwnProperty("time")&&(n.time=t.json&&!isFinite(e.time)?String(e.time):e.time),null!=e.key&&e.hasOwnProperty("key")&&(n.key=t.enums===String?l.tensorflow.magenta.NoteSequence.KeySignature.Key[e.key]:e.key),null!=e.mode&&e.hasOwnProperty("mode")&&(n.mode=t.enums===String?l.tensorflow.magenta.NoteSequence.KeySignature.Mode[e.mode]:e.mode),n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e.Key=function(){var e={},t=Object.create(e);return t[e[0]="C"]=0,t[e[1]="C_SHARP"]=1,t.D_FLAT=1,t[e[2]="D"]=2,t[e[3]="D_SHARP"]=3,t.E_FLAT=3,t[e[4]="E"]=4,t[e[5]="F"]=5,t[e[6]="F_SHARP"]=6,t.G_FLAT=6,t[e[7]="G"]=7,t[e[8]="G_SHARP"]=8,t.A_FLAT=8,t[e[9]="A"]=9,t[e[10]="A_SHARP"]=10,t.B_FLAT=10,t[e[11]="B"]=11,t}(),e.Mode=function(){var e={},t=Object.create(e);return t[e[0]="MAJOR"]=0,t[e[1]="MINOR"]=1,t[e[2]="NOT_SPECIFIED"]=2,t[e[3]="MIXOLYDIAN"]=3,t[e[4]="DORIAN"]=4,t[e[5]="PHRYGIAN"]=5,t[e[6]="LYDIAN"]=6,t[e[7]="LOCRIAN"]=7,t}(),e}(),e.Tempo=function(){function e(e){if(e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.time=0,e.prototype.qpm=0,e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=i.create()),null!=e.time&&e.hasOwnProperty("time")&&t.uint32(9).double(e.time),null!=e.qpm&&e.hasOwnProperty("qpm")&&t.uint32(17).double(e.qpm),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof o||(e=o.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new l.tensorflow.magenta.NoteSequence.Tempo;e.pos<n;){var s=e.uint32();switch(s>>>3){case 1:r.time=e.double();break;case 2:r.qpm=e.double();break;default:e.skipType(7&s)}}return r},e.decodeDelimited=function(e){return e instanceof o||(e=new o(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!=typeof e||null===e?"object expected":null!=e.time&&e.hasOwnProperty("time")&&"number"!=typeof e.time?"time: number expected":null!=e.qpm&&e.hasOwnProperty("qpm")&&"number"!=typeof e.qpm?"qpm: number expected":null},e.fromObject=function(e){if(e instanceof l.tensorflow.magenta.NoteSequence.Tempo)return e;var t=new l.tensorflow.magenta.NoteSequence.Tempo;return null!=e.time&&(t.time=Number(e.time)),null!=e.qpm&&(t.qpm=Number(e.qpm)),t},e.toObject=function(e,t){t||(t={});var n={};return t.defaults&&(n.time=0,n.qpm=0),null!=e.time&&e.hasOwnProperty("time")&&(n.time=t.json&&!isFinite(e.time)?String(e.time):e.time),null!=e.qpm&&e.hasOwnProperty("qpm")&&(n.qpm=t.json&&!isFinite(e.qpm)?String(e.qpm):e.qpm),n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e}(),e.PitchBend=function(){function e(e){if(e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.time=0,e.prototype.bend=0,e.prototype.instrument=0,e.prototype.program=0,e.prototype.isDrum=!1,e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=i.create()),null!=e.time&&e.hasOwnProperty("time")&&t.uint32(9).double(e.time),null!=e.bend&&e.hasOwnProperty("bend")&&t.uint32(16).int32(e.bend),null!=e.instrument&&e.hasOwnProperty("instrument")&&t.uint32(24).int32(e.instrument),null!=e.program&&e.hasOwnProperty("program")&&t.uint32(32).int32(e.program),null!=e.isDrum&&e.hasOwnProperty("isDrum")&&t.uint32(40).bool(e.isDrum),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof o||(e=o.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new l.tensorflow.magenta.NoteSequence.PitchBend;e.pos<n;){var s=e.uint32();switch(s>>>3){case 1:r.time=e.double();break;case 2:r.bend=e.int32();break;case 3:r.instrument=e.int32();break;case 4:r.program=e.int32();break;case 5:r.isDrum=e.bool();break;default:e.skipType(7&s)}}return r},e.decodeDelimited=function(e){return e instanceof o||(e=new o(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!=typeof e||null===e?"object expected":null!=e.time&&e.hasOwnProperty("time")&&"number"!=typeof e.time?"time: number expected":null!=e.bend&&e.hasOwnProperty("bend")&&!u.isInteger(e.bend)?"bend: integer expected":null!=e.instrument&&e.hasOwnProperty("instrument")&&!u.isInteger(e.instrument)?"instrument: integer expected":null!=e.program&&e.hasOwnProperty("program")&&!u.isInteger(e.program)?"program: integer expected":null!=e.isDrum&&e.hasOwnProperty("isDrum")&&"boolean"!=typeof e.isDrum?"isDrum: boolean expected":null},e.fromObject=function(e){if(e instanceof l.tensorflow.magenta.NoteSequence.PitchBend)return e;var t=new l.tensorflow.magenta.NoteSequence.PitchBend;return null!=e.time&&(t.time=Number(e.time)),null!=e.bend&&(t.bend=0|e.bend),null!=e.instrument&&(t.instrument=0|e.instrument),null!=e.program&&(t.program=0|e.program),null!=e.isDrum&&(t.isDrum=Boolean(e.isDrum)),t},e.toObject=function(e,t){t||(t={});var n={};return t.defaults&&(n.time=0,n.bend=0,n.instrument=0,n.program=0,n.isDrum=!1),null!=e.time&&e.hasOwnProperty("time")&&(n.time=t.json&&!isFinite(e.time)?String(e.time):e.time),null!=e.bend&&e.hasOwnProperty("bend")&&(n.bend=e.bend),null!=e.instrument&&e.hasOwnProperty("instrument")&&(n.instrument=e.instrument),null!=e.program&&e.hasOwnProperty("program")&&(n.program=e.program),null!=e.isDrum&&e.hasOwnProperty("isDrum")&&(n.isDrum=e.isDrum),n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e}(),e.ControlChange=function(){function e(e){if(e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.time=0,e.prototype.quantizedStep=u.Long?u.Long.fromBits(0,0,!1):0,e.prototype.controlNumber=0,e.prototype.controlValue=0,e.prototype.instrument=0,e.prototype.program=0,e.prototype.isDrum=!1,e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=i.create()),null!=e.time&&e.hasOwnProperty("time")&&t.uint32(9).double(e.time),null!=e.controlNumber&&e.hasOwnProperty("controlNumber")&&t.uint32(16).int32(e.controlNumber),null!=e.controlValue&&e.hasOwnProperty("controlValue")&&t.uint32(24).int32(e.controlValue),null!=e.instrument&&e.hasOwnProperty("instrument")&&t.uint32(32).int32(e.instrument),null!=e.program&&e.hasOwnProperty("program")&&t.uint32(40).int32(e.program),null!=e.isDrum&&e.hasOwnProperty("isDrum")&&t.uint32(48).bool(e.isDrum),null!=e.quantizedStep&&e.hasOwnProperty("quantizedStep")&&t.uint32(56).int64(e.quantizedStep),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof o||(e=o.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new l.tensorflow.magenta.NoteSequence.ControlChange;e.pos<n;){var s=e.uint32();switch(s>>>3){case 1:r.time=e.double();break;case 7:r.quantizedStep=u.Long?e.int64().toNumber():e.int64();break;case 2:r.controlNumber=e.int32();break;case 3:r.controlValue=e.int32();break;case 4:r.instrument=e.int32();break;case 5:r.program=e.int32();break;case 6:r.isDrum=e.bool();break;default:e.skipType(7&s)}}return r},e.decodeDelimited=function(e){return e instanceof o||(e=new o(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!=typeof e||null===e?"object expected":null!=e.time&&e.hasOwnProperty("time")&&"number"!=typeof e.time?"time: number expected":null!=e.quantizedStep&&e.hasOwnProperty("quantizedStep")&&!(u.isInteger(e.quantizedStep)||e.quantizedStep&&u.isInteger(e.quantizedStep.low)&&u.isInteger(e.quantizedStep.high))?"quantizedStep: integer|Long expected":null!=e.controlNumber&&e.hasOwnProperty("controlNumber")&&!u.isInteger(e.controlNumber)?"controlNumber: integer expected":null!=e.controlValue&&e.hasOwnProperty("controlValue")&&!u.isInteger(e.controlValue)?"controlValue: integer expected":null!=e.instrument&&e.hasOwnProperty("instrument")&&!u.isInteger(e.instrument)?"instrument: integer expected":null!=e.program&&e.hasOwnProperty("program")&&!u.isInteger(e.program)?"program: integer expected":null!=e.isDrum&&e.hasOwnProperty("isDrum")&&"boolean"!=typeof e.isDrum?"isDrum: boolean expected":null},e.fromObject=function(e){if(e instanceof l.tensorflow.magenta.NoteSequence.ControlChange)return e;var t=new l.tensorflow.magenta.NoteSequence.ControlChange;return null!=e.time&&(t.time=Number(e.time)),null!=e.quantizedStep&&(u.Long?(t.quantizedStep=u.Long.fromValue(e.quantizedStep)).unsigned=!1:"string"==typeof e.quantizedStep?t.quantizedStep=parseInt(e.quantizedStep,10):"number"==typeof e.quantizedStep?t.quantizedStep=e.quantizedStep:"object"==typeof e.quantizedStep&&(t.quantizedStep=new u.LongBits(e.quantizedStep.low>>>0,e.quantizedStep.high>>>0).toNumber())),null!=e.controlNumber&&(t.controlNumber=0|e.controlNumber),null!=e.controlValue&&(t.controlValue=0|e.controlValue),null!=e.instrument&&(t.instrument=0|e.instrument),null!=e.program&&(t.program=0|e.program),null!=e.isDrum&&(t.isDrum=Boolean(e.isDrum)),t},e.toObject=function(e,t){t||(t={});var n={};if(t.defaults)if(n.time=0,n.controlNumber=0,n.controlValue=0,n.instrument=0,n.program=0,n.isDrum=!1,u.Long){var r=new u.Long(0,0,!1);n.quantizedStep=t.longs===String?r.toString():t.longs===Number?r.toNumber():r}else n.quantizedStep=t.longs===String?"0":0;return null!=e.time&&e.hasOwnProperty("time")&&(n.time=t.json&&!isFinite(e.time)?String(e.time):e.time),null!=e.controlNumber&&e.hasOwnProperty("controlNumber")&&(n.controlNumber=e.controlNumber),null!=e.controlValue&&e.hasOwnProperty("controlValue")&&(n.controlValue=e.controlValue),null!=e.instrument&&e.hasOwnProperty("instrument")&&(n.instrument=e.instrument),null!=e.program&&e.hasOwnProperty("program")&&(n.program=e.program),null!=e.isDrum&&e.hasOwnProperty("isDrum")&&(n.isDrum=e.isDrum),null!=e.quantizedStep&&e.hasOwnProperty("quantizedStep")&&("number"==typeof e.quantizedStep?n.quantizedStep=t.longs===String?String(e.quantizedStep):e.quantizedStep:n.quantizedStep=t.longs===String?u.Long.prototype.toString.call(e.quantizedStep):t.longs===Number?new u.LongBits(e.quantizedStep.low>>>0,e.quantizedStep.high>>>0).toNumber():e.quantizedStep),n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e}(),e.PartInfo=function(){function e(e){if(e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.part=0,e.prototype.name="",e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=i.create()),null!=e.part&&e.hasOwnProperty("part")&&t.uint32(8).int32(e.part),null!=e.name&&e.hasOwnProperty("name")&&t.uint32(18).string(e.name),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof o||(e=o.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new l.tensorflow.magenta.NoteSequence.PartInfo;e.pos<n;){var s=e.uint32();switch(s>>>3){case 1:r.part=e.int32();break;case 2:r.name=e.string();break;default:e.skipType(7&s)}}return r},e.decodeDelimited=function(e){return e instanceof o||(e=new o(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!=typeof e||null===e?"object expected":null!=e.part&&e.hasOwnProperty("part")&&!u.isInteger(e.part)?"part: integer expected":null!=e.name&&e.hasOwnProperty("name")&&!u.isString(e.name)?"name: string expected":null},e.fromObject=function(e){if(e instanceof l.tensorflow.magenta.NoteSequence.PartInfo)return e;var t=new l.tensorflow.magenta.NoteSequence.PartInfo;return null!=e.part&&(t.part=0|e.part),null!=e.name&&(t.name=String(e.name)),t},e.toObject=function(e,t){t||(t={});var n={};return t.defaults&&(n.part=0,n.name=""),null!=e.part&&e.hasOwnProperty("part")&&(n.part=e.part),null!=e.name&&e.hasOwnProperty("name")&&(n.name=e.name),n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e}(),e.SourceInfo=function(){function e(e){if(e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.sourceType=0,e.prototype.encodingType=0,e.prototype.parser=0,e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=i.create()),null!=e.sourceType&&e.hasOwnProperty("sourceType")&&t.uint32(8).int32(e.sourceType),null!=e.encodingType&&e.hasOwnProperty("encodingType")&&t.uint32(16).int32(e.encodingType),null!=e.parser&&e.hasOwnProperty("parser")&&t.uint32(24).int32(e.parser),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof o||(e=o.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new l.tensorflow.magenta.NoteSequence.SourceInfo;e.pos<n;){var s=e.uint32();switch(s>>>3){case 1:r.sourceType=e.int32();break;case 2:r.encodingType=e.int32();break;case 3:r.parser=e.int32();break;default:e.skipType(7&s)}}return r},e.decodeDelimited=function(e){return e instanceof o||(e=new o(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";if(null!=e.sourceType&&e.hasOwnProperty("sourceType"))switch(e.sourceType){default:return"sourceType: enum value expected";case 0:case 1:case 2:}if(null!=e.encodingType&&e.hasOwnProperty("encodingType"))switch(e.encodingType){default:return"encodingType: enum value expected";case 0:case 1:case 2:case 3:case 4:}if(null!=e.parser&&e.hasOwnProperty("parser"))switch(e.parser){default:return"parser: enum value expected";case 0:case 1:case 2:case 3:case 4:case 5:case 6:}return null},e.fromObject=function(e){if(e instanceof l.tensorflow.magenta.NoteSequence.SourceInfo)return e;var t=new l.tensorflow.magenta.NoteSequence.SourceInfo;switch(e.sourceType){case"UNKNOWN_SOURCE_TYPE":case 0:t.sourceType=0;break;case"SCORE_BASED":case 1:t.sourceType=1;break;case"PERFORMANCE_BASED":case 2:t.sourceType=2}switch(e.encodingType){case"UNKNOWN_ENCODING_TYPE":case 0:t.encodingType=0;break;case"MUSIC_XML":case 1:t.encodingType=1;break;case"ABC":case 2:t.encodingType=2;break;case"MIDI":case 3:t.encodingType=3;break;case"MUSICNET":case 4:t.encodingType=4}switch(e.parser){case"UNKNOWN_PARSER":case 0:t.parser=0;break;case"MUSIC21":case 1:t.parser=1;break;case"PRETTY_MIDI":case 2:t.parser=2;break;case"MAGENTA_MUSIC_XML":case 3:t.parser=3;break;case"MAGENTA_MUSICNET":case 4:t.parser=4;break;case"MAGENTA_ABC":case 5:t.parser=5;break;case"TONEJS_MIDI_CONVERT":case 6:t.parser=6}return t},e.toObject=function(e,t){t||(t={});var n={};return t.defaults&&(n.sourceType=t.enums===String?"UNKNOWN_SOURCE_TYPE":0,n.encodingType=t.enums===String?"UNKNOWN_ENCODING_TYPE":0,n.parser=t.enums===String?"UNKNOWN_PARSER":0),null!=e.sourceType&&e.hasOwnProperty("sourceType")&&(n.sourceType=t.enums===String?l.tensorflow.magenta.NoteSequence.SourceInfo.SourceType[e.sourceType]:e.sourceType),null!=e.encodingType&&e.hasOwnProperty("encodingType")&&(n.encodingType=t.enums===String?l.tensorflow.magenta.NoteSequence.SourceInfo.EncodingType[e.encodingType]:e.encodingType),null!=e.parser&&e.hasOwnProperty("parser")&&(n.parser=t.enums===String?l.tensorflow.magenta.NoteSequence.SourceInfo.Parser[e.parser]:e.parser),n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e.SourceType=function(){var e={},t=Object.create(e);return t[e[0]="UNKNOWN_SOURCE_TYPE"]=0,t[e[1]="SCORE_BASED"]=1,t[e[2]="PERFORMANCE_BASED"]=2,t}(),e.EncodingType=function(){var e={},t=Object.create(e);return t[e[0]="UNKNOWN_ENCODING_TYPE"]=0,t[e[1]="MUSIC_XML"]=1,t[e[2]="ABC"]=2,t[e[3]="MIDI"]=3,t[e[4]="MUSICNET"]=4,t}(),e.Parser=function(){var e={},t=Object.create(e);return t[e[0]="UNKNOWN_PARSER"]=0,t[e[1]="MUSIC21"]=1,t[e[2]="PRETTY_MIDI"]=2,t[e[3]="MAGENTA_MUSIC_XML"]=3,t[e[4]="MAGENTA_MUSICNET"]=4,t[e[5]="MAGENTA_ABC"]=5,t[e[6]="TONEJS_MIDI_CONVERT"]=6,t}(),e}(),e.TextAnnotation=function(){function e(e){if(e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.time=0,e.prototype.quantizedStep=u.Long?u.Long.fromBits(0,0,!1):0,e.prototype.text="",e.prototype.annotationType=0,e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=i.create()),null!=e.time&&e.hasOwnProperty("time")&&t.uint32(9).double(e.time),null!=e.text&&e.hasOwnProperty("text")&&t.uint32(18).string(e.text),null!=e.annotationType&&e.hasOwnProperty("annotationType")&&t.uint32(24).int32(e.annotationType),null!=e.quantizedStep&&e.hasOwnProperty("quantizedStep")&&t.uint32(32).int64(e.quantizedStep),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof o||(e=o.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new l.tensorflow.magenta.NoteSequence.TextAnnotation;e.pos<n;){var s=e.uint32();switch(s>>>3){case 1:r.time=e.double();break;case 4:r.quantizedStep=u.Long?e.int64().toNumber():e.int64();break;case 2:r.text=e.string();break;case 3:r.annotationType=e.int32();break;default:e.skipType(7&s)}}return r},e.decodeDelimited=function(e){return e instanceof o||(e=new o(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";if(null!=e.time&&e.hasOwnProperty("time")&&"number"!=typeof e.time)return"time: number expected";if(null!=e.quantizedStep&&e.hasOwnProperty("quantizedStep")&&!(u.isInteger(e.quantizedStep)||e.quantizedStep&&u.isInteger(e.quantizedStep.low)&&u.isInteger(e.quantizedStep.high)))return"quantizedStep: integer|Long expected";if(null!=e.text&&e.hasOwnProperty("text")&&!u.isString(e.text))return"text: string expected";if(null!=e.annotationType&&e.hasOwnProperty("annotationType"))switch(e.annotationType){default:return"annotationType: enum value expected";case 0:case 1:case 2:}return null},e.fromObject=function(e){if(e instanceof l.tensorflow.magenta.NoteSequence.TextAnnotation)return e;var t=new l.tensorflow.magenta.NoteSequence.TextAnnotation;switch(null!=e.time&&(t.time=Number(e.time)),null!=e.quantizedStep&&(u.Long?(t.quantizedStep=u.Long.fromValue(e.quantizedStep)).unsigned=!1:"string"==typeof e.quantizedStep?t.quantizedStep=parseInt(e.quantizedStep,10):"number"==typeof e.quantizedStep?t.quantizedStep=e.quantizedStep:"object"==typeof e.quantizedStep&&(t.quantizedStep=new u.LongBits(e.quantizedStep.low>>>0,e.quantizedStep.high>>>0).toNumber())),null!=e.text&&(t.text=String(e.text)),e.annotationType){case"UNKNOWN":case 0:t.annotationType=0;break;case"CHORD_SYMBOL":case 1:t.annotationType=1;break;case"BEAT":case 2:t.annotationType=2}return t},e.toObject=function(e,t){t||(t={});var n={};if(t.defaults)if(n.time=0,n.text="",n.annotationType=t.enums===String?"UNKNOWN":0,u.Long){var r=new u.Long(0,0,!1);n.quantizedStep=t.longs===String?r.toString():t.longs===Number?r.toNumber():r}else n.quantizedStep=t.longs===String?"0":0;return null!=e.time&&e.hasOwnProperty("time")&&(n.time=t.json&&!isFinite(e.time)?String(e.time):e.time),null!=e.text&&e.hasOwnProperty("text")&&(n.text=e.text),null!=e.annotationType&&e.hasOwnProperty("annotationType")&&(n.annotationType=t.enums===String?l.tensorflow.magenta.NoteSequence.TextAnnotation.TextAnnotationType[e.annotationType]:e.annotationType),null!=e.quantizedStep&&e.hasOwnProperty("quantizedStep")&&("number"==typeof e.quantizedStep?n.quantizedStep=t.longs===String?String(e.quantizedStep):e.quantizedStep:n.quantizedStep=t.longs===String?u.Long.prototype.toString.call(e.quantizedStep):t.longs===Number?new u.LongBits(e.quantizedStep.low>>>0,e.quantizedStep.high>>>0).toNumber():e.quantizedStep),n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e.TextAnnotationType=function(){var e={},t=Object.create(e);return t[e[0]="UNKNOWN"]=0,t[e[1]="CHORD_SYMBOL"]=1,t[e[2]="BEAT"]=2,t}(),e}(),e.QuantizationInfo=function(){function e(e){if(e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}var t;return e.prototype.stepsPerQuarter=0,e.prototype.stepsPerSecond=0,Object.defineProperty(e.prototype,"resolution",{get:u.oneOfGetter(t=["stepsPerQuarter","stepsPerSecond"]),set:u.oneOfSetter(t)}),e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=i.create()),null!=e.stepsPerQuarter&&e.hasOwnProperty("stepsPerQuarter")&&t.uint32(8).int32(e.stepsPerQuarter),null!=e.stepsPerSecond&&e.hasOwnProperty("stepsPerSecond")&&t.uint32(16).int32(e.stepsPerSecond),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof o||(e=o.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new l.tensorflow.magenta.NoteSequence.QuantizationInfo;e.pos<n;){var s=e.uint32();switch(s>>>3){case 1:r.stepsPerQuarter=e.int32();break;case 2:r.stepsPerSecond=e.int32();break;default:e.skipType(7&s)}}return r},e.decodeDelimited=function(e){return e instanceof o||(e=new o(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";var t={};if(null!=e.stepsPerQuarter&&e.hasOwnProperty("stepsPerQuarter")&&(t.resolution=1,!u.isInteger(e.stepsPerQuarter)))return"stepsPerQuarter: integer expected";if(null!=e.stepsPerSecond&&e.hasOwnProperty("stepsPerSecond")){if(1===t.resolution)return"resolution: multiple values";if(t.resolution=1,!u.isInteger(e.stepsPerSecond))return"stepsPerSecond: integer expected"}return null},e.fromObject=function(e){if(e instanceof l.tensorflow.magenta.NoteSequence.QuantizationInfo)return e;var t=new l.tensorflow.magenta.NoteSequence.QuantizationInfo;return null!=e.stepsPerQuarter&&(t.stepsPerQuarter=0|e.stepsPerQuarter),null!=e.stepsPerSecond&&(t.stepsPerSecond=0|e.stepsPerSecond),t},e.toObject=function(e,t){t||(t={});var n={};return null!=e.stepsPerQuarter&&e.hasOwnProperty("stepsPerQuarter")&&(n.stepsPerQuarter=e.stepsPerQuarter,t.oneofs&&(n.resolution="stepsPerQuarter")),null!=e.stepsPerSecond&&e.hasOwnProperty("stepsPerSecond")&&(n.stepsPerSecond=e.stepsPerSecond,t.oneofs&&(n.resolution="stepsPerSecond")),n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e}(),e.SubsequenceInfo=function(){function e(e){if(e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.startTimeOffset=0,e.prototype.endTimeOffset=0,e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=i.create()),null!=e.startTimeOffset&&e.hasOwnProperty("startTimeOffset")&&t.uint32(9).double(e.startTimeOffset),null!=e.endTimeOffset&&e.hasOwnProperty("endTimeOffset")&&t.uint32(17).double(e.endTimeOffset),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof o||(e=o.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new l.tensorflow.magenta.NoteSequence.SubsequenceInfo;e.pos<n;){var s=e.uint32();switch(s>>>3){case 1:r.startTimeOffset=e.double();break;case 2:r.endTimeOffset=e.double();break;default:e.skipType(7&s)}}return r},e.decodeDelimited=function(e){return e instanceof o||(e=new o(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!=typeof e||null===e?"object expected":null!=e.startTimeOffset&&e.hasOwnProperty("startTimeOffset")&&"number"!=typeof e.startTimeOffset?"startTimeOffset: number expected":null!=e.endTimeOffset&&e.hasOwnProperty("endTimeOffset")&&"number"!=typeof e.endTimeOffset?"endTimeOffset: number expected":null},e.fromObject=function(e){if(e instanceof l.tensorflow.magenta.NoteSequence.SubsequenceInfo)return e;var t=new l.tensorflow.magenta.NoteSequence.SubsequenceInfo;return null!=e.startTimeOffset&&(t.startTimeOffset=Number(e.startTimeOffset)),null!=e.endTimeOffset&&(t.endTimeOffset=Number(e.endTimeOffset)),t},e.toObject=function(e,t){t||(t={});var n={};return t.defaults&&(n.startTimeOffset=0,n.endTimeOffset=0),null!=e.startTimeOffset&&e.hasOwnProperty("startTimeOffset")&&(n.startTimeOffset=t.json&&!isFinite(e.startTimeOffset)?String(e.startTimeOffset):e.startTimeOffset),null!=e.endTimeOffset&&e.hasOwnProperty("endTimeOffset")&&(n.endTimeOffset=t.json&&!isFinite(e.endTimeOffset)?String(e.endTimeOffset):e.endTimeOffset),n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e}(),e.SectionAnnotation=function(){function e(e){if(e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.time=0,e.prototype.sectionId=u.Long?u.Long.fromBits(0,0,!1):0,e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=i.create()),null!=e.time&&e.hasOwnProperty("time")&&t.uint32(9).double(e.time),null!=e.sectionId&&e.hasOwnProperty("sectionId")&&t.uint32(32).int64(e.sectionId),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof o||(e=o.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new l.tensorflow.magenta.NoteSequence.SectionAnnotation;e.pos<n;){var s=e.uint32();switch(s>>>3){case 1:r.time=e.double();break;case 4:r.sectionId=u.Long?e.int64().toNumber():e.int64();break;default:e.skipType(7&s)}}return r},e.decodeDelimited=function(e){return e instanceof o||(e=new o(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!=typeof e||null===e?"object expected":null!=e.time&&e.hasOwnProperty("time")&&"number"!=typeof e.time?"time: number expected":null!=e.sectionId&&e.hasOwnProperty("sectionId")&&!(u.isInteger(e.sectionId)||e.sectionId&&u.isInteger(e.sectionId.low)&&u.isInteger(e.sectionId.high))?"sectionId: integer|Long expected":null},e.fromObject=function(e){if(e instanceof l.tensorflow.magenta.NoteSequence.SectionAnnotation)return e;var t=new l.tensorflow.magenta.NoteSequence.SectionAnnotation;return null!=e.time&&(t.time=Number(e.time)),null!=e.sectionId&&(u.Long?(t.sectionId=u.Long.fromValue(e.sectionId)).unsigned=!1:"string"==typeof e.sectionId?t.sectionId=parseInt(e.sectionId,10):"number"==typeof e.sectionId?t.sectionId=e.sectionId:"object"==typeof e.sectionId&&(t.sectionId=new u.LongBits(e.sectionId.low>>>0,e.sectionId.high>>>0).toNumber())),t},e.toObject=function(e,t){t||(t={});var n={};if(t.defaults)if(n.time=0,u.Long){var r=new u.Long(0,0,!1);n.sectionId=t.longs===String?r.toString():t.longs===Number?r.toNumber():r}else n.sectionId=t.longs===String?"0":0;return null!=e.time&&e.hasOwnProperty("time")&&(n.time=t.json&&!isFinite(e.time)?String(e.time):e.time),null!=e.sectionId&&e.hasOwnProperty("sectionId")&&("number"==typeof e.sectionId?n.sectionId=t.longs===String?String(e.sectionId):e.sectionId:n.sectionId=t.longs===String?u.Long.prototype.toString.call(e.sectionId):t.longs===Number?new u.LongBits(e.sectionId.low>>>0,e.sectionId.high>>>0).toNumber():e.sectionId),n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e}(),e.Section=function(){function e(e){if(e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}var t;return e.prototype.sectionId=u.Long?u.Long.fromBits(0,0,!1):0,e.prototype.sectionGroup=null,Object.defineProperty(e.prototype,"sectionType",{get:u.oneOfGetter(t=["sectionId","sectionGroup"]),set:u.oneOfSetter(t)}),e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=i.create()),null!=e.sectionId&&e.hasOwnProperty("sectionId")&&t.uint32(8).int64(e.sectionId),null!=e.sectionGroup&&e.hasOwnProperty("sectionGroup")&&l.tensorflow.magenta.NoteSequence.SectionGroup.encode(e.sectionGroup,t.uint32(18).fork()).ldelim(),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof o||(e=o.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new l.tensorflow.magenta.NoteSequence.Section;e.pos<n;){var s=e.uint32();switch(s>>>3){case 1:r.sectionId=u.Long?e.int64().toNumber():e.int64();break;case 2:r.sectionGroup=l.tensorflow.magenta.NoteSequence.SectionGroup.decode(e,e.uint32());break;default:e.skipType(7&s)}}return r},e.decodeDelimited=function(e){return e instanceof o||(e=new o(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";var t={};if(null!=e.sectionId&&e.hasOwnProperty("sectionId")&&(t.sectionType=1,!(u.isInteger(e.sectionId)||e.sectionId&&u.isInteger(e.sectionId.low)&&u.isInteger(e.sectionId.high))))return"sectionId: integer|Long expected";if(null!=e.sectionGroup&&e.hasOwnProperty("sectionGroup")){if(1===t.sectionType)return"sectionType: multiple values";t.sectionType=1;var n=l.tensorflow.magenta.NoteSequence.SectionGroup.verify(e.sectionGroup);if(n)return"sectionGroup."+n}return null},e.fromObject=function(e){if(e instanceof l.tensorflow.magenta.NoteSequence.Section)return e;var t=new l.tensorflow.magenta.NoteSequence.Section;if(null!=e.sectionId&&(u.Long?(t.sectionId=u.Long.fromValue(e.sectionId)).unsigned=!1:"string"==typeof e.sectionId?t.sectionId=parseInt(e.sectionId,10):"number"==typeof e.sectionId?t.sectionId=e.sectionId:"object"==typeof e.sectionId&&(t.sectionId=new u.LongBits(e.sectionId.low>>>0,e.sectionId.high>>>0).toNumber())),null!=e.sectionGroup){if("object"!=typeof e.sectionGroup)throw TypeError(".tensorflow.magenta.NoteSequence.Section.sectionGroup: object expected");t.sectionGroup=l.tensorflow.magenta.NoteSequence.SectionGroup.fromObject(e.sectionGroup)}return t},e.toObject=function(e,t){t||(t={});var n={};return null!=e.sectionId&&e.hasOwnProperty("sectionId")&&("number"==typeof e.sectionId?n.sectionId=t.longs===String?String(e.sectionId):e.sectionId:n.sectionId=t.longs===String?u.Long.prototype.toString.call(e.sectionId):t.longs===Number?new u.LongBits(e.sectionId.low>>>0,e.sectionId.high>>>0).toNumber():e.sectionId,t.oneofs&&(n.sectionType="sectionId")),null!=e.sectionGroup&&e.hasOwnProperty("sectionGroup")&&(n.sectionGroup=l.tensorflow.magenta.NoteSequence.SectionGroup.toObject(e.sectionGroup,t),t.oneofs&&(n.sectionType="sectionGroup")),n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e}(),e.SectionGroup=function(){function e(e){if(this.sections=[],e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.sections=u.emptyArray,e.prototype.numTimes=0,e.create=function(t){return new e(t)},e.encode=function(e,t){if(t||(t=i.create()),null!=e.sections&&e.sections.length)for(var n=0;n<e.sections.length;++n)l.tensorflow.magenta.NoteSequence.Section.encode(e.sections[n],t.uint32(10).fork()).ldelim();return null!=e.numTimes&&e.hasOwnProperty("numTimes")&&t.uint32(16).int32(e.numTimes),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof o||(e=o.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new l.tensorflow.magenta.NoteSequence.SectionGroup;e.pos<n;){var s=e.uint32();switch(s>>>3){case 1:r.sections&&r.sections.length||(r.sections=[]),r.sections.push(l.tensorflow.magenta.NoteSequence.Section.decode(e,e.uint32()));break;case 2:r.numTimes=e.int32();break;default:e.skipType(7&s)}}return r},e.decodeDelimited=function(e){return e instanceof o||(e=new o(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";if(null!=e.sections&&e.hasOwnProperty("sections")){if(!Array.isArray(e.sections))return"sections: array expected";for(var t=0;t<e.sections.length;++t){var n=l.tensorflow.magenta.NoteSequence.Section.verify(e.sections[t]);if(n)return"sections."+n}}return null!=e.numTimes&&e.hasOwnProperty("numTimes")&&!u.isInteger(e.numTimes)?"numTimes: integer expected":null},e.fromObject=function(e){if(e instanceof l.tensorflow.magenta.NoteSequence.SectionGroup)return e;var t=new l.tensorflow.magenta.NoteSequence.SectionGroup;if(e.sections){if(!Array.isArray(e.sections))throw TypeError(".tensorflow.magenta.NoteSequence.SectionGroup.sections: array expected");t.sections=[];for(var n=0;n<e.sections.length;++n){if("object"!=typeof e.sections[n])throw TypeError(".tensorflow.magenta.NoteSequence.SectionGroup.sections: object expected");t.sections[n]=l.tensorflow.magenta.NoteSequence.Section.fromObject(e.sections[n])}}return null!=e.numTimes&&(t.numTimes=0|e.numTimes),t},e.toObject=function(e,t){t||(t={});var n={};if((t.arrays||t.defaults)&&(n.sections=[]),t.defaults&&(n.numTimes=0),e.sections&&e.sections.length){n.sections=[];for(var r=0;r<e.sections.length;++r)n.sections[r]=l.tensorflow.magenta.NoteSequence.Section.toObject(e.sections[r],t)}return null!=e.numTimes&&e.hasOwnProperty("numTimes")&&(n.numTimes=e.numTimes),n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e}(),e}(),r.SequenceMetadata=function(){function e(e){if(this.genre=[],this.composers=[],e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.title="",e.prototype.artist="",e.prototype.genre=u.emptyArray,e.prototype.composers=u.emptyArray,e.create=function(t){return new e(t)},e.encode=function(e,t){if(t||(t=i.create()),null!=e.title&&e.hasOwnProperty("title")&&t.uint32(10).string(e.title),null!=e.artist&&e.hasOwnProperty("artist")&&t.uint32(18).string(e.artist),null!=e.genre&&e.genre.length)for(var n=0;n<e.genre.length;++n)t.uint32(26).string(e.genre[n]);if(null!=e.composers&&e.composers.length)for(n=0;n<e.composers.length;++n)t.uint32(34).string(e.composers[n]);return t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof o||(e=o.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new l.tensorflow.magenta.SequenceMetadata;e.pos<n;){var s=e.uint32();switch(s>>>3){case 1:r.title=e.string();break;case 2:r.artist=e.string();break;case 3:r.genre&&r.genre.length||(r.genre=[]),r.genre.push(e.string());break;case 4:r.composers&&r.composers.length||(r.composers=[]),r.composers.push(e.string());break;default:e.skipType(7&s)}}return r},e.decodeDelimited=function(e){return e instanceof o||(e=new o(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";if(null!=e.title&&e.hasOwnProperty("title")&&!u.isString(e.title))return"title: string expected";if(null!=e.artist&&e.hasOwnProperty("artist")&&!u.isString(e.artist))return"artist: string expected";if(null!=e.genre&&e.hasOwnProperty("genre")){if(!Array.isArray(e.genre))return"genre: array expected";for(var t=0;t<e.genre.length;++t)if(!u.isString(e.genre[t]))return"genre: string[] expected"}if(null!=e.composers&&e.hasOwnProperty("composers")){if(!Array.isArray(e.composers))return"composers: array expected";for(t=0;t<e.composers.length;++t)if(!u.isString(e.composers[t]))return"composers: string[] expected"}return null},e.fromObject=function(e){if(e instanceof l.tensorflow.magenta.SequenceMetadata)return e;var t=new l.tensorflow.magenta.SequenceMetadata;if(null!=e.title&&(t.title=String(e.title)),null!=e.artist&&(t.artist=String(e.artist)),e.genre){if(!Array.isArray(e.genre))throw TypeError(".tensorflow.magenta.SequenceMetadata.genre: array expected");t.genre=[];for(var n=0;n<e.genre.length;++n)t.genre[n]=String(e.genre[n])}if(e.composers){if(!Array.isArray(e.composers))throw TypeError(".tensorflow.magenta.SequenceMetadata.composers: array expected");for(t.composers=[],n=0;n<e.composers.length;++n)t.composers[n]=String(e.composers[n])}return t},e.toObject=function(e,t){t||(t={});var n={};if((t.arrays||t.defaults)&&(n.genre=[],n.composers=[]),t.defaults&&(n.title="",n.artist=""),null!=e.title&&e.hasOwnProperty("title")&&(n.title=e.title),null!=e.artist&&e.hasOwnProperty("artist")&&(n.artist=e.artist),e.genre&&e.genre.length){n.genre=[];for(var r=0;r<e.genre.length;++r)n.genre[r]=e.genre[r]}if(e.composers&&e.composers.length)for(n.composers=[],r=0;r<e.composers.length;++r)n.composers[r]=e.composers[r];return n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e}(),r.VelocityRange=function(){function e(e){if(e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.min=0,e.prototype.max=0,e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=i.create()),null!=e.min&&e.hasOwnProperty("min")&&t.uint32(8).int32(e.min),null!=e.max&&e.hasOwnProperty("max")&&t.uint32(16).int32(e.max),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof o||(e=o.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new l.tensorflow.magenta.VelocityRange;e.pos<n;){var s=e.uint32();switch(s>>>3){case 1:r.min=e.int32();break;case 2:r.max=e.int32();break;default:e.skipType(7&s)}}return r},e.decodeDelimited=function(e){return e instanceof o||(e=new o(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!=typeof e||null===e?"object expected":null!=e.min&&e.hasOwnProperty("min")&&!u.isInteger(e.min)?"min: integer expected":null!=e.max&&e.hasOwnProperty("max")&&!u.isInteger(e.max)?"max: integer expected":null},e.fromObject=function(e){if(e instanceof l.tensorflow.magenta.VelocityRange)return e;var t=new l.tensorflow.magenta.VelocityRange;return null!=e.min&&(t.min=0|e.min),null!=e.max&&(t.max=0|e.max),t},e.toObject=function(e,t){t||(t={});var n={};return t.defaults&&(n.min=0,n.max=0),null!=e.min&&e.hasOwnProperty("min")&&(n.min=e.min),null!=e.max&&e.hasOwnProperty("max")&&(n.max=e.max),n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e}(),r),s),e.exports=l},42:function(e,t,n){"use strict";n.r(t),n.d(t,"ChordQuality",(function(){return me})),n.d(t,"ChordSymbolException",(function(){return ge})),n.d(t,"ChordEncodingException",(function(){return ye})),n.d(t,"ChordSymbols",(function(){return be})),n.d(t,"ChordEncoder",(function(){return we})),n.d(t,"chordEncoderFromType",(function(){return xe})),n.d(t,"MajorMinorChordEncoder",(function(){return Se})),n.d(t,"TriadChordEncoder",(function(){return ve})),n.d(t,"PitchChordEncoder",(function(){return ke}));var r={};n.r(r),n.d(r,"names",(function(){return i})),n.d(r,"tokenize",(function(){return p})),n.d(r,"props",(function(){return f})),n.d(r,"name",(function(){return m})),n.d(r,"pc",(function(){return g})),n.d(r,"midi",(function(){return y})),n.d(r,"midiToFreq",(function(){return b})),n.d(r,"freq",(function(){return w})),n.d(r,"freqToMidi",(function(){return v})),n.d(r,"chroma",(function(){return k})),n.d(r,"oct",(function(){return N})),n.d(r,"stepToLetter",(function(){return I})),n.d(r,"altToAcc",(function(){return C})),n.d(r,"from",(function(){return A})),n.d(r,"build",(function(){return E})),n.d(r,"fromMidi",(function(){return P})),n.d(r,"simplify",(function(){return $})),n.d(r,"enharmonic",(function(){return M}));var s={};n.r(s),n.d(s,"names",(function(){return re})),n.d(s,"props",(function(){return ae})),n.d(s,"intervals",(function(){return oe})),n.d(s,"notes",(function(){return ie})),n.d(s,"exists",(function(){return ue})),n.d(s,"supersets",(function(){return le})),n.d(s,"subsets",(function(){return ce})),n.d(s,"tokenize",(function(){return he}));var a=n(2),o="C C# Db D D# Eb E F F# Gb G G# Ab A A# Bb B".split(" "),i=function(e){return"string"!=typeof e?o.slice():o.filter((function(t){var n=t[1]||" ";return-1!==e.indexOf(n)}))},u=i(" #"),l=i(" b"),c=/^([a-gA-G]?)(#{1,}|b{1,}|x{1,}|)(-?\d*)\s*(.*)$/;function p(e){"string"!=typeof e&&(e="");var t=c.exec(e);return[t[1].toUpperCase(),t[2].replace(/x/g,"##"),t[3],t[4]]}var h=Object.freeze({pc:null,name:null,step:null,alt:null,oct:null,octStr:null,chroma:null,midi:null,freq:null}),d=[0,2,4,5,7,9,11],f=function(e,t){return void 0===t&&(t={}),function(e){return t[e]||(t[e]=function(e){var t=p(e);if(""===t[0]||""!==t[3])return h;var n=t[0],r=t[1],s=t[2],a={letter:n,acc:r,octStr:s,pc:n+r,name:n+r+s,step:(n.charCodeAt(0)+3)%7,alt:"b"===r[0]?-r.length:r.length,oct:s.length?+s:null,chroma:0,midi:null,freq:null};return a.chroma=(d[a.step]+a.alt+120)%12,a.midi=null!==a.oct?d[a.step]+a.alt+12*(a.oct+1):null,a.freq=b(a.midi),Object.freeze(a)}(e))}}(),m=function(e){return f(e).name},g=function(e){return f(e).pc},y=function(e){if("number"!=typeof e&&"string"!=typeof e)return null;var t,n=f(e).midi,r=n||0===n?n:+e;return(t=r)>=0&&t<=127?r:null},b=function(e,t){return void 0===t&&(t=440),"number"==typeof e?Math.pow(2,(e-69)/12)*t:null},w=function(e){return f(e).freq||b(e)},x=Math.log(2),S=Math.log(440),v=function(e){var t=12*(Math.log(e)-S)/x+69;return Math.round(100*t)/100},k=function(e){return f(e).chroma},N=function(e){return f(e).oct},I=function(e){return"CDEFGAB"[e]},T=function(e,t){return Array(t+1).join(e)},C=function(e){return function(e,t){return"number"!=typeof e?"":function(e){return e<0?T("b",-e):T("#",e)}(e)}(e)},A=function(e,t){void 0===e&&(e={}),void 0===t&&(t=null);var n=t?Object.assign({},f(t),e):e,r=n.step,s=n.alt,a=n.oct;if("number"!=typeof r)return null;var o=I(r);if(!o)return null;var i=o+C(s);return a||0===a?i+a:i},E=A;function P(e,t){return void 0===t&&(t=!1),e=Math.round(e),(!0===t?u:l)[e%12]+(Math.floor(e/12)-1)}var $=function(e,t){void 0===t&&(t=!0);var n=f(e),r=n.alt,s=n.chroma,a=n.midi;if(null===s)return null;var o=!1===t?r<0:r>0;return null===a?g(P(s,o)):P(a,o)},M=function(e){return $(e,!1)},O=new RegExp("^([-+]?\\d+)(d{1,4}|m|M|P|A{1,4})|(AA|A|P|M|m|d|dd)([-+]?\\d+)$"),_=[0,2,4,5,7,9,11],D=("1P 2m 2M 3m 3M 4P 5P 6m 6M 7m 7M 8P".split(" "),Object.freeze({name:null,num:null,q:null,step:null,alt:null,dir:null,type:null,simple:null,semitones:null,chroma:null,oct:null})),R={};function z(e){return"string"!=typeof e?D:R[e]||(R[e]=function(e){var t=function(e){var t=O.exec(""+e);return null===t?null:t[1]?[t[1],t[2]]:[t[4],t[3]]}(e);if(null===t)return D;var n,r,s={num:0,q:"d",name:"",type:"M",step:0,dir:-1,simple:1,alt:0,oct:0,semitones:0,chroma:0,ic:0};return s.num=+t[0],s.q=t[1],s.step=function(e){return(Math.abs(e)-1)%7}(s.num),s.type="PMMPPMM"[s.step],"M"===s.type&&"P"===s.q?D:(s.name=""+s.num+s.q,s.dir=s.num<0?-1:1,s.simple=8===s.num||-8===s.num?s.num:s.dir*(s.step+1),s.alt=(n=s.type,"M"===(r=s.q)&&"M"===n||"P"===r&&"P"===n?0:"m"===r&&"M"===n?-1:/^A+$/.test(r)?r.length:/^d+$/.test(r)?"P"===n?-r.length:-r.length-1:null),s.oct=Math.floor((Math.abs(s.num)-1)/7),s.semitones=s.dir*(_[s.step]+s.alt+12*s.oct),s.chroma=(s.dir*(_[s.step]+s.alt)%12+12)%12,Object.freeze(s))}(e))}"P m M m M P d P m M m M".split(" ");var F=[0,2,4,-1,1,3,5],L=F.map((function(e){return Math.floor(7*e/12)})),q=[3,0,4,1,5,2,6],B=function(e,t,n){var r=q[function(e){var t=(e+1)%7;return t<0?7+t:t}(e)],s=Math.floor((e+1)/7);return void 0===t?{step:r,alt:s,dir:n}:{step:r,alt:s,oct:t+4*s+L[r],dir:n}},W=function(e){return function(e,t){return void 0===t&&(t={}),function(n){return t[n]||(t[n]=e(n))}}((function(t){var n=e(t);return null===n.name?null:function(e){var t=e.step,n=e.alt,r=e.oct,s=e.dir;void 0===s&&(s=1);var a=F[t]+7*n;return null===r?[s*a]:[s*a,s*(r-L[t]-4*n)]}(n)}))},V=W(f),j=W(z);function U(e,t){if(1===arguments.length)return function(t){return U(e,t)};var n=V(e),r=j(t);if(null===n||null===r)return null;var s=1===n.length?[n[0]+r[0]]:[n[0]+r[0],n[1]+r[1]];return E(B(s[0],s[1]))}var G=n(69),H=n(70),K=function(e){return k(e)||function(e){return z(e).chroma}(e)||0},Q=function(e){return parseInt(X(e),2)};function X(e){if(function(e){return J.test(e)}(e))return e;if(!Array.isArray(e))return"";var t=[0,0,0,0,0,0,0,0,0,0,0,0];return e.map(K).forEach((function(e){t[e]=1})),t.join("")}var J=/^[01]{12}$/;function Y(e,t){return arguments.length>1?Y(e)(t):(e=Q(e),function(t){return(t=Q(t))!==e&&(t&e)===t})}function Z(e,t){return arguments.length>1?Z(e)(t):(e=Q(e),function(t){return(t=Q(t))!==e&&(t|e)===t})}"1P 2m 2M 3m 3M 4P 5d 5P 6m 6M 7m 7M".split(" ");var ee=function(e){var t=Object.keys(e).sort(),n=[],r=[],s=function(e,t,s){n[e]=t,r[s]=r[s]||[],r[s].push(e)};t.forEach((function(t){var n=e[t][0].split(" "),r=e[t][1],a=X(n);s(t,n,a),r&&r.forEach((function(e){return s(e,n,a)}))}));var a=Object.keys(n).sort(),o=function(e){return n[e]};return o.names=function(e){return"string"==typeof e?(r[e]||[]).slice():(!0===e?a:t).slice()},o},te=ee(G),ne=ee(H);Object.freeze({name:null,intervals:[],names:[],chroma:null,setnum:null}),te.names;var re=ne.names,se=Object.freeze({name:null,names:[],intervals:[],chroma:null,setnum:null}),ae=function(e,t){return void 0===t&&(t={}),function(e){return t[e]||(t[e]=function(e){var t=ne(e);if(!t)return se;var n={intervals:t,name:e};return n.chroma=X(t),n.setnum=parseInt(n.chroma,2),n.names=ne.names(n.chroma),n}(e))}}(),oe=function(e){return ae(he(e)[1]).intervals};function ie(e,t){if(t)return ae(t).intervals.map(U(e));var n=he(e),r=n[0],s=n[1];return ae(s).intervals.map(U(r))}var ue=function(e){return void 0!==ne(he(e)[1])},le=function(e){if(!oe(e).length)return[];var t=Z(oe(e));return ne.names().filter((function(e){return t(ne(e))}))},ce=function(e){var t=Y(oe(e));return ne.names().filter((function(e){return t(ne(e))}))},pe=/^(6|64|7|9|11|13)$/;function he(e){var t=p(e);return""===t[0]?["",e]:"A"===t[0]&&"ug"===t[3]?["","aug"]:pe.test(t[2])?[t[0]+t[1],t[2]+t[3]]:[t[0]+t[1]+t[2],t[3]]}var de=n(8);const fe=[["1P","3M","5P"],["1P","3m","5P"],["1P","3M","5A"],["1P","3m","5d"]];var me;!function(e){e[e.Major=0]="Major",e[e.Minor=1]="Minor",e[e.Augmented=2]="Augmented",e[e.Diminished=3]="Diminished",e[e.Other=4]="Other"}(me||(me={}));class ge extends Error{constructor(e){super(e),Object.setPrototypeOf(this,new.target.prototype)}}class ye extends Error{constructor(e){super(e),Object.setPrototypeOf(this,new.target.prototype)}}class be{static pitches(e){if(!s.tokenize(e)[0]||!s.exists(e))throw new ge("Unrecognized chord symbol: "+e);return s.notes(e).map(r.chroma)}static root(e){const t=s.tokenize(e)[0];if(!t)throw new ge("Chord symbol has unknown root: "+e);return r.chroma(t)}static quality(e){if(!s.exists(e))throw new ge("Unrecognized chord symbol: "+e);const t=s.intervals(e),n=fe.map((e=>e.every((e=>t.includes(e))))),r=n.indexOf(!0),a=n.lastIndexOf(!0);return r>=0&&r===a?r:me.Other}}class we{encodeProgression(e,t){const n=e.map((e=>this.encode(e))),r=Array.from(Array(t).keys()).map((e=>Math.floor(e*n.length/t)));return a.stack(r.map((e=>n[e])))}}function xe(e){switch(e){case"MajorMinorChordEncoder":return new Se;case"TriadChordEncoder":return new ve;case"PitchChordEncoder":return new ke;default:throw new Error("Unknown chord encoder type: "+e)}}class Se extends we{constructor(){super(...arguments),this.depth=1+2*de.NUM_PITCH_CLASSES}index(e){if(e===de.NO_CHORD)return 0;const t=be.root(e),n=1+be.quality(e)*de.NUM_PITCH_CLASSES+t;if(n>=this.depth)throw new ye("Chord is neither major nor minor: "+e);return n}encode(e){return a.tidy((()=>a.oneHot(a.tensor1d([this.index(e)],"int32"),this.depth).as1D()))}}class ve extends we{constructor(){super(...arguments),this.depth=1+4*de.NUM_PITCH_CLASSES}index(e){if(e===de.NO_CHORD)return 0;const t=be.root(e),n=1+be.quality(e)*de.NUM_PITCH_CLASSES+t;if(n>=this.depth)throw new ye("Chord is not a standard triad: "+e);return n}encode(e){return a.tidy((()=>a.oneHot(a.tensor1d([this.index(e)],"int32"),this.depth).as1D()))}}class ke extends we{constructor(){super(...arguments),this.depth=1+3*de.NUM_PITCH_CLASSES}encode(e){return a.tidy((()=>{if(e===de.NO_CHORD)return a.oneHot(a.tensor1d([0],"int32"),this.depth).as1D();const t=be.root(e),n=a.oneHot(a.tensor1d([t],"int32"),de.NUM_PITCH_CLASSES).as1D(),r=a.buffer([de.NUM_PITCH_CLASSES]);be.pitches(e).forEach((e=>r.set(1,e)));const s=r.toTensor().as1D(),o=n;return a.concat1d([a.tensor1d([0]),n,s,o])}))}}},48:function(e,t,n){"use strict";e.exports=n(49)},49:function(e,t,n){"use strict";var r=t;function s(){r.util._configure(),r.Writer._configure(r.BufferWriter),r.Reader._configure(r.BufferReader)}r.build="minimal",r.Writer=n(35),r.BufferWriter=n(58),r.Reader=n(36),r.BufferReader=n(59),r.util=n(18),r.rpc=n(60),r.roots=n(62),r.configure=s,s()},50:function(e,t,n){"use strict";e.exports=function(e,t){for(var n=new Array(arguments.length-1),r=0,s=2,a=!0;s<arguments.length;)n[r++]=arguments[s++];return new Promise((function(s,o){n[r]=function(e){if(a)if(a=!1,e)o(e);else{for(var t=new Array(arguments.length-1),n=0;n<t.length;)t[n++]=arguments[n];s.apply(null,t)}};try{e.apply(t||null,n)}catch(e){a&&(a=!1,o(e))}}))}},51:function(e,t,n){"use strict";var r=t;r.length=function(e){var t=e.length;if(!t)return 0;for(var n=0;--t%4>1&&"="===e.charAt(t);)++n;return Math.ceil(3*e.length)/4-n};for(var s=new Array(64),a=new Array(123),o=0;o<64;)a[s[o]=o<26?o+65:o<52?o+71:o<62?o-4:o-59|43]=o++;r.encode=function(e,t,n){for(var r,a=null,o=[],i=0,u=0;t<n;){var l=e[t++];switch(u){case 0:o[i++]=s[l>>2],r=(3&l)<<4,u=1;break;case 1:o[i++]=s[r|l>>4],r=(15&l)<<2,u=2;break;case 2:o[i++]=s[r|l>>6],o[i++]=s[63&l],u=0}i>8191&&((a||(a=[])).push(String.fromCharCode.apply(String,o)),i=0)}return u&&(o[i++]=s[r],o[i++]=61,1===u&&(o[i++]=61)),a?(i&&a.push(String.fromCharCode.apply(String,o.slice(0,i))),a.join("")):String.fromCharCode.apply(String,o.slice(0,i))},r.decode=function(e,t,n){for(var r,s=n,o=0,i=0;i<e.length;){var u=e.charCodeAt(i++);if(61===u&&o>1)break;if(void 0===(u=a[u]))throw Error("invalid encoding");switch(o){case 0:r=u,o=1;break;case 1:t[n++]=r<<2|(48&u)>>4,r=u,o=2;break;case 2:t[n++]=(15&r)<<4|(60&u)>>2,r=u,o=3;break;case 3:t[n++]=(3&r)<<6|u,o=0}}if(1===o)throw Error("invalid encoding");return n-s},r.test=function(e){return/^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(e)}},52:function(e,t,n){"use strict";function r(){this._listeners={}}e.exports=r,r.prototype.on=function(e,t,n){return(this._listeners[e]||(this._listeners[e]=[])).push({fn:t,ctx:n||this}),this},r.prototype.off=function(e,t){if(void 0===e)this._listeners={};else if(void 0===t)this._listeners[e]=[];else for(var n=this._listeners[e],r=0;r<n.length;)n[r].fn===t?n.splice(r,1):++r;return this},r.prototype.emit=function(e){var t=this._listeners[e];if(t){for(var n=[],r=1;r<arguments.length;)n.push(arguments[r++]);for(r=0;r<t.length;)t[r].fn.apply(t[r++].ctx,n)}return this}},53:function(e,t,n){"use strict";function r(e){return"undefined"!=typeof Float32Array?function(){var t=new Float32Array([-0]),n=new Uint8Array(t.buffer),r=128===n[3];function s(e,r,s){t[0]=e,r[s]=n[0],r[s+1]=n[1],r[s+2]=n[2],r[s+3]=n[3]}function a(e,r,s){t[0]=e,r[s]=n[3],r[s+1]=n[2],r[s+2]=n[1],r[s+3]=n[0]}function o(e,r){return n[0]=e[r],n[1]=e[r+1],n[2]=e[r+2],n[3]=e[r+3],t[0]}function i(e,r){return n[3]=e[r],n[2]=e[r+1],n[1]=e[r+2],n[0]=e[r+3],t[0]}e.writeFloatLE=r?s:a,e.writeFloatBE=r?a:s,e.readFloatLE=r?o:i,e.readFloatBE=r?i:o}():function(){function t(e,t,n,r){var s=t<0?1:0;if(s&&(t=-t),0===t)e(1/t>0?0:2147483648,n,r);else if(isNaN(t))e(2143289344,n,r);else if(t>34028234663852886e22)e((s<<31|2139095040)>>>0,n,r);else if(t<11754943508222875e-54)e((s<<31|Math.round(t/1401298464324817e-60))>>>0,n,r);else{var a=Math.floor(Math.log(t)/Math.LN2);e((s<<31|a+127<<23|8388607&Math.round(t*Math.pow(2,-a)*8388608))>>>0,n,r)}}function n(e,t,n){var r=e(t,n),s=2*(r>>31)+1,a=r>>>23&255,o=8388607&r;return 255===a?o?NaN:s*(1/0):0===a?1401298464324817e-60*s*o:s*Math.pow(2,a-150)*(o+8388608)}e.writeFloatLE=t.bind(null,s),e.writeFloatBE=t.bind(null,a),e.readFloatLE=n.bind(null,o),e.readFloatBE=n.bind(null,i)}(),"undefined"!=typeof Float64Array?function(){var t=new Float64Array([-0]),n=new Uint8Array(t.buffer),r=128===n[7];function s(e,r,s){t[0]=e,r[s]=n[0],r[s+1]=n[1],r[s+2]=n[2],r[s+3]=n[3],r[s+4]=n[4],r[s+5]=n[5],r[s+6]=n[6],r[s+7]=n[7]}function a(e,r,s){t[0]=e,r[s]=n[7],r[s+1]=n[6],r[s+2]=n[5],r[s+3]=n[4],r[s+4]=n[3],r[s+5]=n[2],r[s+6]=n[1],r[s+7]=n[0]}function o(e,r){return n[0]=e[r],n[1]=e[r+1],n[2]=e[r+2],n[3]=e[r+3],n[4]=e[r+4],n[5]=e[r+5],n[6]=e[r+6],n[7]=e[r+7],t[0]}function i(e,r){return n[7]=e[r],n[6]=e[r+1],n[5]=e[r+2],n[4]=e[r+3],n[3]=e[r+4],n[2]=e[r+5],n[1]=e[r+6],n[0]=e[r+7],t[0]}e.writeDoubleLE=r?s:a,e.writeDoubleBE=r?a:s,e.readDoubleLE=r?o:i,e.readDoubleBE=r?i:o}():function(){function t(e,t,n,r,s,a){var o=r<0?1:0;if(o&&(r=-r),0===r)e(0,s,a+t),e(1/r>0?0:2147483648,s,a+n);else if(isNaN(r))e(0,s,a+t),e(2146959360,s,a+n);else if(r>17976931348623157e292)e(0,s,a+t),e((o<<31|2146435072)>>>0,s,a+n);else{var i;if(r<22250738585072014e-324)e((i=r/5e-324)>>>0,s,a+t),e((o<<31|i/4294967296)>>>0,s,a+n);else{var u=Math.floor(Math.log(r)/Math.LN2);1024===u&&(u=1023),e(4503599627370496*(i=r*Math.pow(2,-u))>>>0,s,a+t),e((o<<31|u+1023<<20|1048576*i&1048575)>>>0,s,a+n)}}}function n(e,t,n,r,s){var a=e(r,s+t),o=e(r,s+n),i=2*(o>>31)+1,u=o>>>20&2047,l=4294967296*(1048575&o)+a;return 2047===u?l?NaN:i*(1/0):0===u?5e-324*i*l:i*Math.pow(2,u-1075)*(l+4503599627370496)}e.writeDoubleLE=t.bind(null,s,0,4),e.writeDoubleBE=t.bind(null,a,4,0),e.readDoubleLE=n.bind(null,o,0,4),e.readDoubleBE=n.bind(null,i,4,0)}(),e}function s(e,t,n){t[n]=255&e,t[n+1]=e>>>8&255,t[n+2]=e>>>16&255,t[n+3]=e>>>24}function a(e,t,n){t[n]=e>>>24,t[n+1]=e>>>16&255,t[n+2]=e>>>8&255,t[n+3]=255&e}function o(e,t){return(e[t]|e[t+1]<<8|e[t+2]<<16|e[t+3]<<24)>>>0}function i(e,t){return(e[t]<<24|e[t+1]<<16|e[t+2]<<8|e[t+3])>>>0}e.exports=r(r)},54:function(module,exports,__webpack_require__){"use strict";function inquire(moduleName){try{var mod=eval("quire".replace(/^/,"re"))(moduleName);if(mod&&(mod.length||Object.keys(mod).length))return mod}catch(e){}return null}module.exports=inquire},55:function(e,t,n){"use strict";var r=t;r.length=function(e){for(var t=0,n=0,r=0;r<e.length;++r)(n=e.charCodeAt(r))<128?t+=1:n<2048?t+=2:55296==(64512&n)&&56320==(64512&e.charCodeAt(r+1))?(++r,t+=4):t+=3;return t},r.read=function(e,t,n){if(n-t<1)return"";for(var r,s=null,a=[],o=0;t<n;)(r=e[t++])<128?a[o++]=r:r>191&&r<224?a[o++]=(31&r)<<6|63&e[t++]:r>239&&r<365?(r=((7&r)<<18|(63&e[t++])<<12|(63&e[t++])<<6|63&e[t++])-65536,a[o++]=55296+(r>>10),a[o++]=56320+(1023&r)):a[o++]=(15&r)<<12|(63&e[t++])<<6|63&e[t++],o>8191&&((s||(s=[])).push(String.fromCharCode.apply(String,a)),o=0);return s?(o&&s.push(String.fromCharCode.apply(String,a.slice(0,o))),s.join("")):String.fromCharCode.apply(String,a.slice(0,o))},r.write=function(e,t,n){for(var r,s,a=n,o=0;o<e.length;++o)(r=e.charCodeAt(o))<128?t[n++]=r:r<2048?(t[n++]=r>>6|192,t[n++]=63&r|128):55296==(64512&r)&&56320==(64512&(s=e.charCodeAt(o+1)))?(r=65536+((1023&r)<<10)+(1023&s),++o,t[n++]=r>>18|240,t[n++]=r>>12&63|128,t[n++]=r>>6&63|128,t[n++]=63&r|128):(t[n++]=r>>12|224,t[n++]=r>>6&63|128,t[n++]=63&r|128);return n-a}},56:function(e,t,n){"use strict";e.exports=function(e,t,n){var r=n||8192,s=r>>>1,a=null,o=r;return function(n){if(n<1||n>s)return e(n);o+n>r&&(a=e(r),o=0);var i=t.call(a,o,o+=n);return 7&o&&(o=1+(7|o)),i}}},57:function(e,t,n){"use strict";e.exports=s;var r=n(18);function s(e,t){this.lo=e>>>0,this.hi=t>>>0}var a=s.zero=new s(0,0);a.toNumber=function(){return 0},a.zzEncode=a.zzDecode=function(){return this},a.length=function(){return 1};var o=s.zeroHash="\0\0\0\0\0\0\0\0";s.fromNumber=function(e){if(0===e)return a;var t=e<0;t&&(e=-e);var n=e>>>0,r=(e-n)/4294967296>>>0;return t&&(r=~r>>>0,n=~n>>>0,++n>4294967295&&(n=0,++r>4294967295&&(r=0))),new s(n,r)},s.from=function(e){if("number"==typeof e)return s.fromNumber(e);if(r.isString(e)){if(!r.Long)return s.fromNumber(parseInt(e,10));e=r.Long.fromString(e)}return e.low||e.high?new s(e.low>>>0,e.high>>>0):a},s.prototype.toNumber=function(e){if(!e&&this.hi>>>31){var t=1+~this.lo>>>0,n=~this.hi>>>0;return t||(n=n+1>>>0),-(t+4294967296*n)}return this.lo+4294967296*this.hi},s.prototype.toLong=function(e){return r.Long?new r.Long(0|this.lo,0|this.hi,Boolean(e)):{low:0|this.lo,high:0|this.hi,unsigned:Boolean(e)}};var i=String.prototype.charCodeAt;s.fromHash=function(e){return e===o?a:new s((i.call(e,0)|i.call(e,1)<<8|i.call(e,2)<<16|i.call(e,3)<<24)>>>0,(i.call(e,4)|i.call(e,5)<<8|i.call(e,6)<<16|i.call(e,7)<<24)>>>0)},s.prototype.toHash=function(){return String.fromCharCode(255&this.lo,this.lo>>>8&255,this.lo>>>16&255,this.lo>>>24,255&this.hi,this.hi>>>8&255,this.hi>>>16&255,this.hi>>>24)},s.prototype.zzEncode=function(){var e=this.hi>>31;return this.hi=((this.hi<<1|this.lo>>>31)^e)>>>0,this.lo=(this.lo<<1^e)>>>0,this},s.prototype.zzDecode=function(){var e=-(1&this.lo);return this.lo=((this.lo>>>1|this.hi<<31)^e)>>>0,this.hi=(this.hi>>>1^e)>>>0,this},s.prototype.length=function(){var e=this.lo,t=(this.lo>>>28|this.hi<<4)>>>0,n=this.hi>>>24;return 0===n?0===t?e<16384?e<128?1:2:e<2097152?3:4:t<16384?t<128?5:6:t<2097152?7:8:n<128?9:10}},58:function(e,t,n){"use strict";e.exports=a;var r=n(35);(a.prototype=Object.create(r.prototype)).constructor=a;var s=n(18);function a(){r.call(this)}function o(e,t,n){e.length<40?s.utf8.write(e,t,n):t.utf8Write?t.utf8Write(e,n):t.write(e,n)}a._configure=function(){a.alloc=s._Buffer_allocUnsafe,a.writeBytesBuffer=s.Buffer&&s.Buffer.prototype instanceof Uint8Array&&"set"===s.Buffer.prototype.set.name?function(e,t,n){t.set(e,n)}:function(e,t,n){if(e.copy)e.copy(t,n,0,e.length);else for(var r=0;r<e.length;)t[n++]=e[r++]}},a.prototype.bytes=function(e){s.isString(e)&&(e=s._Buffer_from(e,"base64"));var t=e.length>>>0;return this.uint32(t),t&&this._push(a.writeBytesBuffer,t,e),this},a.prototype.string=function(e){var t=s.Buffer.byteLength(e);return this.uint32(t),t&&this._push(o,t,e),this},a._configure()},59:function(e,t,n){"use strict";e.exports=a;var r=n(36);(a.prototype=Object.create(r.prototype)).constructor=a;var s=n(18);function a(e){r.call(this,e)}a._configure=function(){s.Buffer&&(a.prototype._slice=s.Buffer.prototype.slice)},a.prototype.string=function(){var e=this.uint32();return this.buf.utf8Slice?this.buf.utf8Slice(this.pos,this.pos=Math.min(this.pos+e,this.len)):this.buf.toString("utf-8",this.pos,this.pos=Math.min(this.pos+e,this.len))},a._configure()},60:function(e,t,n){"use strict";t.Service=n(61)},61:function(e,t,n){"use strict";e.exports=s;var r=n(18);function s(e,t,n){if("function"!=typeof e)throw TypeError("rpcImpl must be a function");r.EventEmitter.call(this),this.rpcImpl=e,this.requestDelimited=Boolean(t),this.responseDelimited=Boolean(n)}(s.prototype=Object.create(r.EventEmitter.prototype)).constructor=s,s.prototype.rpcCall=function e(t,n,s,a,o){if(!a)throw TypeError("request must be specified");var i=this;if(!o)return r.asPromise(e,i,t,n,s,a);if(i.rpcImpl)try{return i.rpcImpl(t,n[i.requestDelimited?"encodeDelimited":"encode"](a).finish(),(function(e,n){if(e)return i.emit("error",e,t),o(e);if(null!==n){if(!(n instanceof s))try{n=s[i.responseDelimited?"decodeDelimited":"decode"](n)}catch(e){return i.emit("error",e,t),o(e)}return i.emit("data",n,t),o(null,n)}i.end(!0)}))}catch(e){return i.emit("error",e,t),void setTimeout((function(){o(e)}),0)}else setTimeout((function(){o(Error("already ended"))}),0)},s.prototype.end=function(e){return this.rpcImpl&&(e||this.rpcImpl(null,null,null),this.rpcImpl=null,this.emit("end").off()),this}},62:function(e,t,n){"use strict";e.exports={}},63:function(e,t,n){"use strict";n.r(t),n.d(t,"auxiliaryInputFromSpec",(function(){return s})),n.d(t,"AuxiliaryInput",(function(){return a})),n.d(t,"BinaryCounter",(function(){return o}));var r=n(2);function s(e){switch(e.type){case"BinaryCounter":return new o(e.args);default:throw new Error("Unknown auxiliary input: "+e)}}class a{constructor(e){this.depth=e}}class o extends a{constructor(e){super(e.numBits)}getTensors(e){const t=r.buffer([e,this.depth]);for(let n=0;n<e;++n)for(let e=0;e<this.depth;++e)t.set(Math.floor((n+1)/Math.pow(2,e))%2?1:-1,n,e);return t.toTensor().as2D(e,this.depth)}}},69:function(e){e.exports=JSON.parse('{"chromatic":["1P 2m 2M 3m 3M 4P 4A 5P 6m 6M 7m 7M"],"lydian":["1P 2M 3M 4A 5P 6M 7M"],"major":["1P 2M 3M 4P 5P 6M 7M",["ionian"]],"mixolydian":["1P 2M 3M 4P 5P 6M 7m",["dominant"]],"dorian":["1P 2M 3m 4P 5P 6M 7m"],"aeolian":["1P 2M 3m 4P 5P 6m 7m",["minor"]],"phrygian":["1P 2m 3m 4P 5P 6m 7m"],"locrian":["1P 2m 3m 4P 5d 6m 7m"],"melodic minor":["1P 2M 3m 4P 5P 6M 7M"],"melodic minor second mode":["1P 2m 3m 4P 5P 6M 7m"],"lydian augmented":["1P 2M 3M 4A 5A 6M 7M"],"lydian dominant":["1P 2M 3M 4A 5P 6M 7m",["lydian b7"]],"melodic minor fifth mode":["1P 2M 3M 4P 5P 6m 7m",["hindu","mixolydian b6M"]],"locrian #2":["1P 2M 3m 4P 5d 6m 7m",["half-diminished"]],"altered":["1P 2m 3m 3M 5d 6m 7m",["super locrian","diminished whole tone","pomeroy"]],"harmonic minor":["1P 2M 3m 4P 5P 6m 7M"],"phrygian dominant":["1P 2m 3M 4P 5P 6m 7m",["spanish","phrygian major"]],"half-whole diminished":["1P 2m 3m 3M 4A 5P 6M 7m",["dominant diminished"]],"diminished":["1P 2M 3m 4P 5d 6m 6M 7M",["whole-half diminished"]],"major pentatonic":["1P 2M 3M 5P 6M",["pentatonic"]],"lydian pentatonic":["1P 3M 4A 5P 7M",["chinese"]],"mixolydian pentatonic":["1P 3M 4P 5P 7m",["indian"]],"locrian pentatonic":["1P 3m 4P 5d 7m",["minor seven flat five pentatonic"]],"minor pentatonic":["1P 3m 4P 5P 7m"],"minor six pentatonic":["1P 3m 4P 5P 6M"],"minor hexatonic":["1P 2M 3m 4P 5P 7M"],"flat three pentatonic":["1P 2M 3m 5P 6M",["kumoi"]],"flat six pentatonic":["1P 2M 3M 5P 6m"],"major flat two pentatonic":["1P 2m 3M 5P 6M"],"whole tone pentatonic":["1P 3M 5d 6m 7m"],"ionian pentatonic":["1P 3M 4P 5P 7M"],"lydian #5P pentatonic":["1P 3M 4A 5A 7M"],"lydian dominant pentatonic":["1P 3M 4A 5P 7m"],"minor #7M pentatonic":["1P 3m 4P 5P 7M"],"super locrian pentatonic":["1P 3m 4d 5d 7m"],"in-sen":["1P 2m 4P 5P 7m"],"iwato":["1P 2m 4P 5d 7m"],"hirajoshi":["1P 2M 3m 5P 6m"],"kumoijoshi":["1P 2m 4P 5P 6m"],"pelog":["1P 2m 3m 5P 6m"],"vietnamese 1":["1P 3m 4P 5P 6m"],"vietnamese 2":["1P 3m 4P 5P 7m"],"prometheus":["1P 2M 3M 4A 6M 7m"],"prometheus neopolitan":["1P 2m 3M 4A 6M 7m"],"ritusen":["1P 2M 4P 5P 6M"],"scriabin":["1P 2m 3M 5P 6M"],"piongio":["1P 2M 4P 5P 6M 7m"],"major blues":["1P 2M 3m 3M 5P 6M"],"minor blues":["1P 3m 4P 5d 5P 7m",["blues"]],"composite blues":["1P 2M 3m 3M 4P 5d 5P 6M 7m"],"augmented":["1P 2A 3M 5P 5A 7M"],"augmented heptatonic":["1P 2A 3M 4P 5P 5A 7M"],"dorian #4":["1P 2M 3m 4A 5P 6M 7m"],"lydian diminished":["1P 2M 3m 4A 5P 6M 7M"],"whole tone":["1P 2M 3M 4A 5A 7m"],"leading whole tone":["1P 2M 3M 4A 5A 7m 7M"],"lydian minor":["1P 2M 3M 4A 5P 6m 7m"],"locrian major":["1P 2M 3M 4P 5d 6m 7m",["arabian"]],"neopolitan":["1P 2m 3m 4P 5P 6m 7M"],"neopolitan minor":["1P 2m 3m 4P 5P 6m 7M"],"neopolitan major":["1P 2m 3m 4P 5P 6M 7M",["dorian b2"]],"neopolitan major pentatonic":["1P 3M 4P 5d 7m"],"romanian minor":["1P 2M 3m 5d 5P 6M 7m"],"double harmonic lydian":["1P 2m 3M 4A 5P 6m 7M"],"harmonic major":["1P 2M 3M 4P 5P 6m 7M"],"double harmonic major":["1P 2m 3M 4P 5P 6m 7M",["gypsy"]],"egyptian":["1P 2M 4P 5P 7m"],"hungarian minor":["1P 2M 3m 4A 5P 6m 7M"],"hungarian major":["1P 2A 3M 4A 5P 6M 7m"],"oriental":["1P 2m 3M 4P 5d 6M 7m"],"spanish heptatonic":["1P 2m 3m 3M 4P 5P 6m 7m"],"flamenco":["1P 2m 3m 3M 4A 5P 7m"],"balinese":["1P 2m 3m 4P 5P 6m 7M"],"todi raga":["1P 2m 3m 4A 5P 6m 7M"],"malkos raga":["1P 3m 4P 6m 7m"],"kafi raga":["1P 3m 3M 4P 5P 6M 7m 7M"],"purvi raga":["1P 2m 3M 4P 4A 5P 6m 7M"],"persian":["1P 2m 3M 4P 5d 6m 7M"],"bebop":["1P 2M 3M 4P 5P 6M 7m 7M"],"bebop dominant":["1P 2M 3M 4P 5P 6M 7m 7M"],"bebop minor":["1P 2M 3m 3M 4P 5P 6M 7m"],"bebop major":["1P 2M 3M 4P 5P 5A 6M 7M"],"bebop locrian":["1P 2m 3m 4P 5d 5P 6m 7m"],"minor bebop":["1P 2M 3m 4P 5P 6m 7m 7M"],"mystery #1":["1P 2m 3M 5d 6m 7m"],"enigmatic":["1P 2m 3M 5d 6m 7m 7M"],"minor six diminished":["1P 2M 3m 4P 5P 6m 6M 7M"],"ionian augmented":["1P 2M 3M 4P 5A 6M 7M"],"lydian #9":["1P 2m 3M 4A 5P 6M 7M"],"ichikosucho":["1P 2M 3M 4P 5d 5P 6M 7M"],"six tone symmetric":["1P 2m 3M 4P 5A 6M"]}')},70:function(e){e.exports=JSON.parse('{"4":["1P 4P 7m 10m",["quartal"]],"5":["1P 5P"],"7":["1P 3M 5P 7m",["Dominant","Dom"]],"9":["1P 3M 5P 7m 9M",["79"]],"11":["1P 5P 7m 9M 11P"],"13":["1P 3M 5P 7m 9M 13M",["13_"]],"64":["5P 8P 10M"],"M":["1P 3M 5P",["Major",""]],"M#5":["1P 3M 5A",["augmented","maj#5","Maj#5","+","aug"]],"M#5add9":["1P 3M 5A 9M",["+add9"]],"M13":["1P 3M 5P 7M 9M 13M",["maj13","Maj13"]],"M13#11":["1P 3M 5P 7M 9M 11A 13M",["maj13#11","Maj13#11","M13+4","M13#4"]],"M6":["1P 3M 5P 13M",["6"]],"M6#11":["1P 3M 5P 6M 11A",["M6b5","6#11","6b5"]],"M69":["1P 3M 5P 6M 9M",["69"]],"M69#11":["1P 3M 5P 6M 9M 11A"],"M7#11":["1P 3M 5P 7M 11A",["maj7#11","Maj7#11","M7+4","M7#4"]],"M7#5":["1P 3M 5A 7M",["maj7#5","Maj7#5","maj9#5","M7+"]],"M7#5sus4":["1P 4P 5A 7M"],"M7#9#11":["1P 3M 5P 7M 9A 11A"],"M7add13":["1P 3M 5P 6M 7M 9M"],"M7b5":["1P 3M 5d 7M"],"M7b6":["1P 3M 6m 7M"],"M7b9":["1P 3M 5P 7M 9m"],"M7sus4":["1P 4P 5P 7M"],"M9":["1P 3M 5P 7M 9M",["maj9","Maj9"]],"M9#11":["1P 3M 5P 7M 9M 11A",["maj9#11","Maj9#11","M9+4","M9#4"]],"M9#5":["1P 3M 5A 7M 9M",["Maj9#5"]],"M9#5sus4":["1P 4P 5A 7M 9M"],"M9b5":["1P 3M 5d 7M 9M"],"M9sus4":["1P 4P 5P 7M 9M"],"Madd9":["1P 3M 5P 9M",["2","add9","add2"]],"Maj7":["1P 3M 5P 7M",["maj7","M7"]],"Mb5":["1P 3M 5d"],"Mb6":["1P 3M 13m"],"Msus2":["1P 2M 5P",["add9no3","sus2"]],"Msus4":["1P 4P 5P",["sus","sus4"]],"Maddb9":["1P 3M 5P 9m"],"11b9":["1P 5P 7m 9m 11P"],"13#11":["1P 3M 5P 7m 9M 11A 13M",["13+4","13#4"]],"13#9":["1P 3M 5P 7m 9A 13M",["13#9_"]],"13#9#11":["1P 3M 5P 7m 9A 11A 13M"],"13b5":["1P 3M 5d 6M 7m 9M"],"13b9":["1P 3M 5P 7m 9m 13M"],"13b9#11":["1P 3M 5P 7m 9m 11A 13M"],"13no5":["1P 3M 7m 9M 13M"],"13sus4":["1P 4P 5P 7m 9M 13M",["13sus"]],"69#11":["1P 3M 5P 6M 9M 11A"],"7#11":["1P 3M 5P 7m 11A",["7+4","7#4","7#11_","7#4_"]],"7#11b13":["1P 3M 5P 7m 11A 13m",["7b5b13"]],"7#5":["1P 3M 5A 7m",["+7","7aug","aug7"]],"7#5#9":["1P 3M 5A 7m 9A",["7alt","7#5#9_","7#9b13_"]],"7#5b9":["1P 3M 5A 7m 9m"],"7#5b9#11":["1P 3M 5A 7m 9m 11A"],"7#5sus4":["1P 4P 5A 7m"],"7#9":["1P 3M 5P 7m 9A",["7#9_"]],"7#9#11":["1P 3M 5P 7m 9A 11A",["7b5#9"]],"7#9#11b13":["1P 3M 5P 7m 9A 11A 13m"],"7#9b13":["1P 3M 5P 7m 9A 13m"],"7add6":["1P 3M 5P 7m 13M",["67","7add13"]],"7b13":["1P 3M 7m 13m"],"7b5":["1P 3M 5d 7m"],"7b6":["1P 3M 5P 6m 7m"],"7b9":["1P 3M 5P 7m 9m"],"7b9#11":["1P 3M 5P 7m 9m 11A",["7b5b9"]],"7b9#9":["1P 3M 5P 7m 9m 9A"],"7b9b13":["1P 3M 5P 7m 9m 13m"],"7b9b13#11":["1P 3M 5P 7m 9m 11A 13m",["7b9#11b13","7b5b9b13"]],"7no5":["1P 3M 7m"],"7sus4":["1P 4P 5P 7m",["7sus"]],"7sus4b9":["1P 4P 5P 7m 9m",["susb9","7susb9","7b9sus","7b9sus4","phryg"]],"7sus4b9b13":["1P 4P 5P 7m 9m 13m",["7b9b13sus4"]],"9#11":["1P 3M 5P 7m 9M 11A",["9+4","9#4","9#11_","9#4_"]],"9#11b13":["1P 3M 5P 7m 9M 11A 13m",["9b5b13"]],"9#5":["1P 3M 5A 7m 9M",["9+"]],"9#5#11":["1P 3M 5A 7m 9M 11A"],"9b13":["1P 3M 7m 9M 13m"],"9b5":["1P 3M 5d 7m 9M"],"9no5":["1P 3M 7m 9M"],"9sus4":["1P 4P 5P 7m 9M",["9sus"]],"m":["1P 3m 5P"],"m#5":["1P 3m 5A",["m+","mb6"]],"m11":["1P 3m 5P 7m 9M 11P",["_11"]],"m11A 5":["1P 3m 6m 7m 9M 11P"],"m11b5":["1P 3m 7m 12d 2M 4P",["h11","_11b5"]],"m13":["1P 3m 5P 7m 9M 11P 13M",["_13"]],"m6":["1P 3m 4P 5P 13M",["_6"]],"m69":["1P 3m 5P 6M 9M",["_69"]],"m7":["1P 3m 5P 7m",["minor7","_","_7"]],"m7#5":["1P 3m 6m 7m"],"m7add11":["1P 3m 5P 7m 11P",["m7add4"]],"m7b5":["1P 3m 5d 7m",["half-diminished","h7","_7b5"]],"m9":["1P 3m 5P 7m 9M",["_9"]],"m9#5":["1P 3m 6m 7m 9M"],"m9b5":["1P 3m 7m 12d 2M",["h9","-9b5"]],"mMaj7":["1P 3m 5P 7M",["mM7","_M7"]],"mMaj7b6":["1P 3m 5P 6m 7M",["mM7b6"]],"mM9":["1P 3m 5P 7M 9M",["mMaj9","-M9"]],"mM9b6":["1P 3m 5P 6m 7M 9M",["mMaj9b6"]],"mb6M7":["1P 3m 6m 7M"],"mb6b9":["1P 3m 6m 9m"],"o":["1P 3m 5d",["mb5","dim"]],"o7":["1P 3m 5d 13M",["diminished","m6b5","dim7"]],"o7M7":["1P 3m 5d 6M 7M"],"oM7":["1P 3m 5d 7M"],"sus24":["1P 2M 4P 5P",["sus4add9"]],"+add#9":["1P 3M 5A 9A"],"madd4":["1P 3m 4P 5P"],"madd9":["1P 3m 5P 9M"]}')},8:function(e,t,n){"use strict";n.r(t),n.d(t,"DEFAULT_QUARTERS_PER_MINUTE",(function(){return r})),n.d(t,"DEFAULT_STEPS_PER_BAR",(function(){return s})),n.d(t,"DEFAULT_STEPS_PER_QUARTER",(function(){return a})),n.d(t,"DEFAULT_STEPS_PER_SECOND",(function(){return o})),n.d(t,"DEFAULT_VELOCITY",(function(){return i})),n.d(t,"DEFAULT_PROGRAM",(function(){return u})),n.d(t,"DEFAULT_TICKS_PER_QUARTER",(function(){return l})),n.d(t,"DEFAULT_CHANNEL",(function(){return c})),n.d(t,"DRUM_CHANNEL",(function(){return p})),n.d(t,"NON_DRUM_CHANNELS",(function(){return h})),n.d(t,"MIN_MIDI_VELOCITY",(function(){return d})),n.d(t,"MAX_MIDI_VELOCITY",(function(){return f})),n.d(t,"MIDI_VELOCITIES",(function(){return m})),n.d(t,"NO_CHORD",(function(){return g})),n.d(t,"NUM_PITCH_CLASSES",(function(){return y})),n.d(t,"MIN_MIDI_PITCH",(function(){return b})),n.d(t,"MAX_MIDI_PITCH",(function(){return w})),n.d(t,"MIDI_PITCHES",(function(){return x})),n.d(t,"MIN_PIANO_PITCH",(function(){return S})),n.d(t,"MAX_PIANO_PITCH",(function(){return v})),n.d(t,"MIN_DRUM_PITCH",(function(){return k})),n.d(t,"MAX_DRUM_PITCH",(function(){return N})),n.d(t,"MIN_MIDI_PROGRAM",(function(){return I})),n.d(t,"MAX_MIDI_PROGRAM",(function(){return T})),n.d(t,"LO_CLICK_PITCH",(function(){return C})),n.d(t,"HI_CLICK_PITCH",(function(){return A})),n.d(t,"LO_CLICK_CLASS",(function(){return E})),n.d(t,"HI_CLICK_CLASS",(function(){return P}));const r=120,s=16,a=4,o=100,i=80,u=0,l=220,c=0,p=9,h=[0,1,2,3,4,5,6,7,8,10,11,12,13,14,15],d=0,f=127,m=f-d+1,g="N.C.",y=12,b=0,w=127,x=w-b+1,S=21,v=108,k=35,N=81,I=0,T=127,C=89,A=90,E=9,P=10},9:function(e,t,n){"use strict";n.d(t,"a",(function(){return r}));var r=n(38).tensorflow.magenta.NoteSequence}})},module.exports=t(__webpack_require__(563))},371:(module,__unused_webpack_exports,__webpack_require__)=>{var t;self,t=function(__WEBPACK_EXTERNAL_MODULE__2__){return function(e){var t={};function n(r){if(t[r])return t[r].exports;var s=t[r]={i:r,l:!1,exports:{}};return e[r].call(s.exports,s,s.exports,n),s.l=!0,s.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var s in e)n.d(r,s,function(t){return e[t]}.bind(null,s));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=178)}({13:function(e,t,n){"use strict";n.r(t),n.d(t,"Level",(function(){return r})),n.d(t,"verbosity",(function(){return a})),n.d(t,"setVerbosity",(function(){return o})),n.d(t,"log",(function(){return i})),n.d(t,"logWithDuration",(function(){return u}));var r,s=n(14);!function(e){e[e.NONE=0]="NONE",e[e.WARN=5]="WARN",e[e.INFO=10]="INFO",e[e.DEBUG=20]="DEBUG"}(r||(r={}));let a=10;function o(e){e=e}function i(e,t="Magenta.js",n=10){if(0===n)throw Error("Logging level cannot be NONE.");a>=n&&(5===n?console.warn:console.log)(`%c ${t} `,"background:magenta; color:white",e)}function u(e,t,n="Magenta.js",r=10){i(`${e} in ${((s.d.now()-t)/1e3).toPrecision(3)}s`,n,r)}},14:function(e,t,n){"use strict";(function(e){n.d(t,"a",(function(){return s})),n.d(t,"d",(function(){return a})),n.d(t,"c",(function(){return o})),n.d(t,"b",(function(){return u}));const r=function(){if("undefined"!=typeof globalThis)return globalThis;if("undefined"!=typeof self)return self;if("undefined"!=typeof window)return window;if(void 0!==e)return e;throw new Error("cannot find the global object")}(),s=r.fetch.bind(r),a=r.performance,o=(r.navigator,!!r.webkitOfflineAudioContext),i=void 0!==r.WorkerGlobalScope;function u(e){if(e=o?44100:e,i)throw new Error("Cannot use offline audio context in a web worker.");const t=r.webkitOfflineAudioContext;return o?new t(1,e,e):new r.OfflineAudioContext(1,e,e)}}).call(this,n(21))},15:function(e,t,n){"use strict";n.r(t),n.d(t,"MultipleTimeSignatureException",(function(){return a})),n.d(t,"BadTimeSignatureException",(function(){return o})),n.d(t,"NegativeTimeException",(function(){return i})),n.d(t,"MultipleTempoException",(function(){return u})),n.d(t,"QuantizationStatusException",(function(){return l})),n.d(t,"clone",(function(){return c})),n.d(t,"stepsPerQuarterToStepsPerSecond",(function(){return p})),n.d(t,"quantizeToStep",(function(){return h})),n.d(t,"quantizeNoteSequence",(function(){return m})),n.d(t,"isQuantizedSequence",(function(){return g})),n.d(t,"assertIsQuantizedSequence",(function(){return y})),n.d(t,"isRelativeQuantizedSequence",(function(){return b})),n.d(t,"assertIsRelativeQuantizedSequence",(function(){return w})),n.d(t,"isAbsoluteQuantizedSequence",(function(){return x})),n.d(t,"assertIsAbsoluteQuantizedSequence",(function(){return S})),n.d(t,"unquantizeSequence",(function(){return v})),n.d(t,"createQuantizedNoteSequence",(function(){return k})),n.d(t,"mergeInstruments",(function(){return N})),n.d(t,"replaceInstruments",(function(){return I})),n.d(t,"mergeConsecutiveNotes",(function(){return T})),n.d(t,"concatenate",(function(){return C})),n.d(t,"trim",(function(){return A})),n.d(t,"split",(function(){return $}));var r=n(9),s=n(8);class a extends Error{constructor(e){super(e),Object.setPrototypeOf(this,new.target.prototype)}}class o extends Error{constructor(e){super(e),Object.setPrototypeOf(this,new.target.prototype)}}class i extends Error{constructor(e){super(e),Object.setPrototypeOf(this,new.target.prototype)}}class u extends Error{constructor(e){super(e),Object.setPrototypeOf(this,new.target.prototype)}}class l extends Error{constructor(e){super(e),Object.setPrototypeOf(this,new.target.prototype)}}function c(e){return r.a.decode(r.a.encode(e).finish())}function p(e,t){return e*t/60}function h(e,t,n=.5){const r=e*t;return Math.floor(r+(1-n))}function d(e){return e.controlChanges.concat(e.textAnnotations)}function f(e){if(e.tempos&&0!==e.tempos.length){if(e.tempos.sort(((e,t)=>e.time-t.time)),0!==e.tempos[0].time&&e.tempos[0].qpm!==s.DEFAULT_QUARTERS_PER_MINUTE)throw new u("NoteSequence has an implicit tempo change from initial "+s.DEFAULT_QUARTERS_PER_MINUTE+" qpm to "+`${e.tempos[0].qpm} qpm at ${e.tempos[0].time} seconds.`);for(let t=1;t<e.tempos.length;t++)if(e.tempos[t].qpm!==e.tempos[0].qpm)throw new u(`NoteSequence has at least one tempo change from ${e.tempos[0].qpm} qpm to ${e.tempos[t].qpm}qpm at ${e.tempos[t].time} seconds.`)}}function m(e,t){const n=c(e);if(n.quantizationInfo=r.a.QuantizationInfo.create({stepsPerQuarter:t}),n.timeSignatures.length>0){if(n.timeSignatures.sort(((e,t)=>e.time-t.time)),0!==n.timeSignatures[0].time&&(4!==n.timeSignatures[0].numerator||4!==n.timeSignatures[0].denominator))throw new a(`NoteSequence has an implicit change from initial 4/4 time signature to ${n.timeSignatures[0].numerator}/`+n.timeSignatures[0].denominator+" at "+n.timeSignatures[0].time+" seconds.");for(let e=1;e<n.timeSignatures.length;e++){const t=n.timeSignatures[e];if(t.numerator!==n.timeSignatures[0].numerator||t.denominator!==n.timeSignatures[0].denominator)throw new a("NoteSequence has at least one time signature change from "+n.timeSignatures[0].numerator+"/"+n.timeSignatures[0].denominator+" to "+`${t.numerator}/${t.denominator} `+`at ${t.time} seconds`)}n.timeSignatures[0].time=0,n.timeSignatures=[n.timeSignatures[0]]}else{const e=r.a.TimeSignature.create({numerator:4,denominator:4,time:0});n.timeSignatures.push(e)}const u=n.timeSignatures[0];if(!(l=u.denominator)||0!=(l&l-1))throw new o(`Denominator is not a power of 2. Time signature: ${u.numerator}/${u.denominator}`);var l;if(0===u.numerator)throw new o(`Numerator is 0. Time signature: ${u.numerator}/${u.denominator}`);if(n.tempos.length>0)f(n),n.tempos[0].time=0,n.tempos=[n.tempos[0]];else{const e=r.a.Tempo.create({qpm:s.DEFAULT_QUARTERS_PER_MINUTE,time:0});n.tempos.push(e)}const m=p(t,n.tempos[0].qpm);return n.totalQuantizedSteps=h(e.totalTime,m),function(e,t){for(const n of e.notes){if(n.quantizedStartStep=h(n.startTime,t),n.quantizedEndStep=h(n.endTime,t),n.quantizedEndStep===n.quantizedStartStep&&(n.quantizedEndStep+=1),n.quantizedStartStep<0||n.quantizedEndStep<0)throw new i("Got negative note time: start_step = "+n.quantizedStartStep+", end_step = "+n.quantizedEndStep);n.quantizedEndStep>e.totalQuantizedSteps&&(e.totalQuantizedSteps=n.quantizedEndStep)}d(e).forEach((e=>{if(e.quantizedStep=h(e.time,t),e.quantizedStep<0)throw new i("Got negative event time: step = "+e.quantizedStep)}))}(n,m),n}function g(e){return e.quantizationInfo&&(e.quantizationInfo.stepsPerQuarter>0||e.quantizationInfo.stepsPerSecond>0)}function y(e){if(!g(e))throw new l(`NoteSequence ${e.id} is not quantized (missing quantizationInfo)`)}function b(e){return e.quantizationInfo&&e.quantizationInfo.stepsPerQuarter>0}function w(e){if(!b(e))throw new l(`NoteSequence ${e.id} is not quantized or is quantized based on absolute timing`)}function x(e){return e.quantizationInfo&&e.quantizationInfo.stepsPerSecond>0}function S(e){if(!x(e))throw new l(`NoteSequence ${e.id} is not quantized or is quantized based on relative timing`)}function v(e,t){w(e),f(e);const n=c(e);t?n.tempos&&n.tempos.length>0?n.tempos[0].qpm=t:n.tempos.push(r.a.Tempo.create({time:0,qpm:t})):t=e.tempos&&e.tempos.length>0?n.tempos[0].qpm:s.DEFAULT_QUARTERS_PER_MINUTE;const a=e=>e/n.quantizationInfo.stepsPerQuarter*(60/t);return n.totalTime=a(n.totalQuantizedSteps),n.notes.forEach((e=>{e.startTime=a(e.quantizedStartStep),e.endTime=a(e.quantizedEndStep),n.totalTime=Math.max(n.totalTime,e.endTime),delete e.quantizedStartStep,delete e.quantizedEndStep})),d(n).forEach((e=>{e.time=a(e.time)})),delete n.totalQuantizedSteps,delete n.quantizationInfo,n}function k(e=s.DEFAULT_STEPS_PER_QUARTER,t=s.DEFAULT_QUARTERS_PER_MINUTE){return r.a.create({quantizationInfo:{stepsPerQuarter:e},tempos:[{qpm:t}]})}function N(e){const t=c(e),n=t.notes.concat(t.pitchBends).concat(t.controlChanges),r=Array.from(new Set(n.filter((e=>!e.isDrum)).map((e=>e.program))));return n.forEach((e=>{e.isDrum?(e.program=0,e.instrument=r.length):e.instrument=r.indexOf(e.program)})),t}function I(e,t){const n=new Set(e.notes.map((e=>e.instrument))),s=new Set(t.notes.map((e=>e.instrument))),a=[];e.notes.forEach((e=>{s.has(e.instrument)||a.push(r.a.Note.create(e))})),t.notes.forEach((e=>{n.has(e.instrument)&&a.push(r.a.Note.create(e))}));const o=c(e);return o.notes=a.sort(((e,t)=>e.instrument-t.instrument||e.quantizedStartStep-t.quantizedStartStep)),o}function T(e){y(e);const t=c(e);t.notes=[];const n=e.notes.sort(((e,t)=>e.instrument-t.instrument||e.quantizedStartStep-t.quantizedStartStep)),s=new r.a.Note;s.pitch=n[0].pitch,s.instrument=n[0].instrument,s.quantizedStartStep=n[0].quantizedStartStep,s.quantizedEndStep=n[0].quantizedEndStep,t.notes.push(s);let a=0;for(let e=1;e<n.length;e++){const s=n[e],o=t.notes[a];if(o.instrument===s.instrument&&o.pitch===s.pitch&&s.quantizedStartStep===o.quantizedEndStep&&s.quantizedStartStep%16!=0)t.notes[a].quantizedEndStep+=s.quantizedEndStep-s.quantizedStartStep;else{const s=new r.a.Note;s.pitch=n[e].pitch,s.instrument=n[e].instrument,s.quantizedStartStep=n[e].quantizedStartStep,s.quantizedEndStep=n[e].quantizedEndStep,t.notes.push(s),a++}}return t}function C(e,t){if(t&&t.length!==e.length)throw new Error("Number of sequences to concatenate and their individual\n durations does not match.");if(g(e[0])){for(let t=0;t<e.length;++t)if(y(e[t]),e[t].quantizationInfo.stepsPerQuarter!==e[0].quantizationInfo.stepsPerQuarter)throw new Error("Not all sequences have the same quantizationInfo");return E(e,"totalQuantizedSteps","quantizedStartStep","quantizedEndStep",t)}return E(e,"totalTime","startTime","endTime",t)}function A(e,t,n,r){return g(e)?P(e,t,n,"totalQuantizedSteps","quantizedStartStep","quantizedEndStep",r):P(e,t,n,"totalTime","startTime","endTime",r)}function E(e,t,n,s,a){let o,i=0;for(let u=0;u<e.length;++u){const l=a?a[u]:e[u][t];if(0===l)throw Error(`Sequence ${e[u].id} has no ${t}, and no individual duration was provided.`);0===u?o=c(e[0]):Array.prototype.push.apply(o.notes,e[u].notes.map((e=>{const t=r.a.Note.create(e);return t[n]+=i,t[s]+=i,t}))),i+=l}return o[t]=i,o}function P(e,t,n,r,s,a,o){const i=c(e);i[r]=n,i.notes=i.notes.filter((e=>e[s]>=t&&e[s]<=n&&(o||e[a]<=n))),i[r]-=t;for(let e=0;e<i.notes.length;e++)i.notes[e][s]-=t,i.notes[e][a]-=t,o&&(i.notes[e][a]=Math.min(i.notes[e][a],i[r]));return i}function $(e,t){y(e);const n=c(e),s=n.notes.sort(((e,t)=>e.quantizedStartStep-t.quantizedStartStep)),a=[];let o=0,i=[];for(let e=0;e<s.length;e++){const u=s[e],l=u.quantizedStartStep,p=u.quantizedEndStep;if(u.quantizedStartStep-=o,u.quantizedEndStep-=o,!(u.quantizedStartStep<0))if(u.quantizedEndStep<=t)i.push(u);else{if(u.quantizedStartStep<t){const e=r.a.Note.create(u);e.quantizedEndStep=t,e.startTime=e.endTime=void 0,i.push(e),u.quantizedStartStep=o+t,u.quantizedEndStep=p}else u.quantizedStartStep=l,u.quantizedEndStep=p;if((u.quantizedEndStep>t||u.quantizedStartStep>t)&&(e-=1),0!==i.length){const e=c(n);e.notes=i,e.totalQuantizedSteps=t,a.push(e)}i=[],o+=t}}if(0!==i.length){const e=c(n);e.notes=i,e.totalQuantizedSteps=t,a.push(e)}return a}},178:function(e,t,n){"use strict";n.r(t),n.d(t,"MidiMe",(function(){return i})),n.d(t,"Decoder",(function(){return b})),n.d(t,"Encoder",(function(){return d})),n.d(t,"MusicVAE",(function(){return C}));var r=n(2),s=n(13),a=n(14);class o extends r.layers.Layer{constructor(){super({})}computeOutputShape(e){return e[0]}call(e){return r.tidy((()=>{const[t,n]=e;return r.add(r.mul(r.randomNormal(n.shape),n),t)}))}getClassName(){return"SamplingLayer"}}class i{constructor(e={}){this.trained=!1,this.initialized=!1,this.config={encoder_layers:e.encoder_layers||[1024,256,64],decoder_layers:e.decoder_layers||[64,256,1024],input_size:e.input_size||256,latent_size:e.latent_size||4,beta:e.beta||1,epochs:e.epochs||10}}dispose(){this.initialized&&(this.encoder.dispose(),this.decoder.dispose(),this.vae.dispose(),this.initialized=!1)}initialize(){this.dispose();const e=a.d.now(),t=r.input({shape:[this.config.input_size]});this.encoder=this.getEncoder(t);const[n,,]=this.encoder.apply(t);this.decoder=this.getDecoder(n.shape.slice(1));const o=this.decoder.apply(n);this.vae=r.model({inputs:t,outputs:o,name:"vae"}),this.initialized=!0,s.logWithDuration("Initialized model",e,"MidiMe")}async train(e,t){const n=a.d.now();this.trained=!1;let o=.001;!1===r.ENV.get("WEBGL_RENDER_FLOAT32_ENABLED")&&!1===r.ENV.get("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&1===r.ENV.get("WEBGL_VERSION")&&(o=5e-5);const i=r.train.adam(o);for(let n=0;n<this.config.epochs;n++)await r.nextFrame(),await i.minimize((()=>r.tidy((()=>{const[,r,s]=this.encoder.predict(e),a=this.vae.predict(e),o=this.loss(r,s,a,e);return t&&t(n,{y:a,total:o.totalLoss.arraySync(),losses:[o.reconLoss.arraySync(),o.latentLoss.arraySync()]}),o.totalLoss})))),await r.nextFrame();s.logWithDuration("Training finished",n,"MidiMe"),this.trained=!0,i.dispose()}async sample(e=1){return this.initialized||await this.initialize(),r.tidy((()=>{const t=r.randomNormal([e,this.config.latent_size]);return this.decoder.predict(t)}))}async decode(e){return this.initialized||await this.initialize(),this.decoder.predict(e)}async encode(e){this.initialized||await this.initialize();const[t,,]=this.encoder.predict(e);return t}predict(e){return this.vae.predict(e)}getEncoder(e){let t=e;for(let e=0;e<this.config.encoder_layers.length;e++)t=r.layers.dense({units:this.config.encoder_layers[e],activation:"relu"}).apply(t);const n=this.getAffineLayers(t,this.config.latent_size,e,!1),s=this.getAffineLayers(t,this.config.latent_size,e,!0),a=(new o).apply([n,s]);return r.model({inputs:e,outputs:[a,n,s],name:"encoder"})}getDecoder(e){const t=r.input({shape:e});let n=t;for(let e=0;e<this.config.decoder_layers.length;e++)n=r.layers.dense({units:this.config.decoder_layers[e],activation:"relu"}).apply(n);const s=this.getAffineLayers(n,this.config.input_size,t,!1);return r.model({inputs:t,outputs:s,name:"decoder"})}loss(e,t,n,s){return r.tidy((()=>{const a=this.klLoss(e,t),o=this.reconstructionLoss(s,n);return{latentLoss:a,reconLoss:o,totalLoss:r.add(o,r.mul(a,this.config.beta))}}))}reconstructionLoss(e,t){return r.tidy((()=>{const n=r.pow(r.sub(e,t),2),s=r.div(n,r.mul(2,r.pow(r.ones([1]),2)));return r.mean(r.sum(s,-1))}))}klLoss(e,t){return r.tidy((()=>{const n=r.pow(e,2),s=r.pow(t,2),a=r.add(1,r.log(s)),o=r.add(n,s),i=r.sub(a,o),u=r.div(r.mean(r.sum(i,-1)),2);return r.mul(-1,u)}))}getAffineLayers(e,t,n,s){const a=r.layers.dense({units:t}).apply(e);return s?r.layers.activation({activation:"softplus"}).apply(a):a}}var u=n(42),l=n(8),c=n(29);class p{constructor(e,t){if(void 0===e)throw Error("`kernel` is undefined.");if(void 0===t)throw Error("`bias` is undefined.");this.kernel=e,this.bias=t}}function h(e,t){return t.matMul(e.kernel).add(e.bias)}class d{}class f{constructor(e,t){this.lstmFwVars=e,this.lstmBwVars=t}process(e){return r.tidy((()=>[this.singleDirection(e,!0),this.singleDirection(e,!1)]))}singleDirection(e,t){const n=e.shape[0],s=e.shape[1],a=t?this.lstmFwVars:this.lstmBwVars;let o=[r.zeros([n,a.bias.shape[0]/4]),r.zeros([n,a.bias.shape[0]/4])];const i=r.scalar(1),u=(e,t)=>r.basicLSTMCell(i,a.kernel,a.bias,e,t[0],t[1]),l=r.split(e.toFloat(),s,1),c=[];for(const e of t?l:l.reverse())o=u(e.squeeze([1]),o),c.push(o[1]);return t?c:c.reverse()}}class m extends d{constructor(e,t,n){super(),this.bidirectionalLstm=new f(e,t),this.muVars=n,this.zDims=n?this.muVars.bias.shape[0]:null}encode(e,t){if(t)throw new Error("Variable-length segments not supported in flat encoder");return r.tidy((()=>{const[t,n]=this.bidirectionalLstm.process(e),s=r.concat([t[t.length-1],n[0]],1);return this.muVars?h(this.muVars,s):s}))}}class g extends d{constructor(e,t,n){super(),this.baseEncoders=e,this.numSteps=t,this.muVars=n,this.zDims=this.muVars.bias.shape[0]}encode(e,t){if(t){if(1!==e.shape[0])throw new Error("When using variable-length segments, batch size must be 1.");if(t.length!==this.numSteps[0])throw new Error("Must provide length for all variable-length segments.")}return r.tidy((()=>{let n=e;for(let e=0;e<this.baseEncoders.length;++e){const s=this.numSteps[e],a=r.split(n,s,1),o=[];for(let n=0;n<s;++n)o.push(this.baseEncoders[e].encode(0===e&&t?r.slice3d(a[n],[0,0,0],[1,t[n],-1]):a[n]));n=r.stack(o,1)}return h(this.muVars,n.squeeze([1]))}))}}function y(e,t,n){const s=[],a=[],o=[],i=r.split(h(n,e).tanh(),2*t.length,1);for(let e=0;e<t.length;++e){const n=t[e],u=r.scalar(1);s.push(((e,t,s)=>r.basicLSTMCell(u,n.kernel,n.bias,e,t,s))),a.push(i[2*e]),o.push(i[2*e+1])}return{cell:s,c:a,h:o}}class b{}class w extends b{constructor(e,t,n,r,s,a){super(),this.lstmCellVars=e,this.zToInitStateVars=t,this.outputProjectVars=n,this.zDims=this.zToInitStateVars.kernel.shape[0],this.outputDims=r||n.bias.shape[0],s&&a&&(this.controlBidirectionalLstm=new f(s,a))}decode(e,t,n,s,a){const o=e.shape[0];return r.tidy((()=>{const i=y(e,this.lstmCellVars,this.zToInitStateVars);let u=a?r.expandDims(a,0):void 0;const l=[];let c=n||r.zeros([o,this.outputDims]);if(this.controlBidirectionalLstm){const[e,t]=this.controlBidirectionalLstm.process(u);u=r.concat([r.stack(e,1),r.stack(t,1)],2)}const p=u?r.split(r.tile(u,[o,1,1]),a.shape[0],1):void 0;for(let n=0;n<t;++n){const t=p?[c,e,r.squeeze(p[n],[1])]:[c,e];[i.c,i.h]=r.multiRNNCell(i.cell,r.concat(t,1),i.c,i.h);const a=h(this.outputProjectVars,i.h[i.h.length-1]);c=this.sample(a,s),l.push(c)}return r.stack(l,1)}))}}class x extends w{sample(e,t){const n=e;return(t?r.greaterEqual(r.sigmoid(n.div(r.scalar(t))),r.randomUniform(n.shape)):r.greaterEqual(n,0)).toFloat()}}class S extends w{sample(e,t){const n=e,s=t?r.multinomial(n.div(r.scalar(t)),1).as1D():n.argMax(1).as1D();return r.oneHot(s,this.outputDims).toFloat()}}class v extends w{constructor(e,t,n,r,s,a){super(e,t,n,r.numDims,s,a),this.nade=r}sample(e,t){const[n,s]=r.split(e,[this.nade.numHidden,this.nade.numDims],1);return this.nade.sample(n,s)}}class k extends w{sample(e,t){let[n,s,a]=r.split(e,3,1);if(s=r.sigmoid(s),a=r.tanh(a),t){n=r.sigmoid(n.div(r.scalar(t)));const e=r.randomUniform(n.shape,0,1);n=r.greater(n,e).toFloat()}else n=r.greater(r.sigmoid(n),.5).toFloat();return r.concat([n,s,a],1)}}class N extends b{constructor(e){super(),this.coreDecoders=e,this.numDecoders=this.coreDecoders.length,this.zDims=this.coreDecoders[0].zDims,this.outputDims=this.coreDecoders.reduce(((e,t)=>e+t.outputDims),0)}decodeSeparately(e,t,n,r,s){const a=[];for(let o=0;o<this.coreDecoders.length;++o)a.push(this.coreDecoders[o].decode(e,t,n[o],r,s));return a}decode(e,t,n,s,a){return r.tidy((()=>{const o=this.decodeSeparately(e,t,this.coreDecoders.map((e=>n)),s,a);return r.concat(o,-1)}))}}class I extends b{constructor(e,t,n,r){super(),this.splitDecoder=new N(e),this.lstmCellVars=t,this.zToInitStateVars=n,this.numSteps=r,this.zDims=this.zToInitStateVars.kernel.shape[0],this.outputDims=this.splitDecoder.outputDims}decode(e,t,n,s,a){const o=e.shape[0];return r.tidy((()=>{const n=y(e,this.lstmCellVars,this.zToInitStateVars),i=[];let u=new Array(this.splitDecoder.numDecoders).fill(void 0);const l=r.zeros([o,1]),c=a?r.split(a,this.numSteps):void 0;for(let e=0;e<this.numSteps;++e){[n.c,n.h]=r.multiRNNCell(n.cell,l,n.c,n.h);const a=this.splitDecoder.decodeSeparately(n.h[n.h.length-1],t/this.numSteps,u,s,c?c[e]:void 0);i.push(r.concat(a,-1)),u=a.map((e=>e.slice([0,e.shape[1]-1,0],[o,1,e.shape[e.rank-1]]).squeeze([1]).toFloat()))}return r.concat(i,1)}))}}class T{constructor(e,t){this.numDims=e.shape[0],this.numHidden=e.shape[2],this.encWeights=e.as2D(this.numDims,this.numHidden),this.decWeightsT=t.as2D(this.numDims,this.numHidden)}sample(e,t){const n=e.shape[0];return r.tidy((()=>{const s=[];let a=e.clone();for(let e=0;e<this.numDims;e++){const o=r.sigmoid(a),i=this.encWeights.slice([e,0],[1,this.numHidden]).as1D(),u=this.decWeightsT.slice([e,0],[1,this.numHidden]),l=t.slice([0,e],[n,1]).add(r.matMul(o,u,!1,!0)).sigmoid().greaterEqual(r.scalar(.5)).toFloat().as1D();e<this.numDims-1&&(a=a.add(r.outerProduct(l.toFloat(),i))),s.push(l)}return r.stack(s,1)}))}}class C{constructor(e,t){this.initialized=!1,this.checkpointURL=e,this.spec=t}instantiateFromSpec(){this.dataConverter=c.converterFromSpec(this.spec.dataConverter),this.chordEncoder=this.spec.chordEncoder?u.chordEncoderFromType(this.spec.chordEncoder):void 0}dispose(){void 0!==this.rawVars&&Object.keys(this.rawVars).forEach((e=>this.rawVars[e].dispose())),this.encoder=void 0,this.decoder=void 0,this.initialized=!1}getLstmLayers(e,t){const n=[];let r=0;for(;;){const s=e.replace("%d",r.toString());if(!(s+"kernel"in t))break;n.push(new p(t[s+"kernel"],t[s+"bias"])),++r}return n}async initialize(){this.dispose();const e=a.d.now();this.spec||await Object(a.a)(this.checkpointURL+"/config.json").then((e=>e.json())).then((e=>{if("MusicVAE"!==e.type)throw new Error("Attempted to instantiate MusicVAE model with incorrect type:\n                  "+e.type);this.spec=e})),this.instantiateFromSpec();const t="cell_%d/bidirectional_rnn/%s/multi_rnn_cell/cell_0/lstm_cell/",n="encoder/"+t,o="encoder/hierarchical_level_%d/"+t.replace("%d","0"),i="control_preprocessing/"+t,u=await Object(a.a)(this.checkpointURL+"/weights_manifest.json").then((e=>e.json())).then((e=>r.io.loadWeights(e,this.checkpointURL)));this.rawVars=u;const l=new p(u["encoder/mu/kernel"],u["encoder/mu/bias"]);if(this.dataConverter.numSegments){const e=this.getLstmLayers(o.replace("%s","fw"),u),t=this.getLstmLayers(o.replace("%s","bw"),u);if(e.length!==t.length||2!==e.length)throw Error(`Only 2 hierarchical encoder levels are supported. Got ${e.length} forward and ${t.length} backward.`);const n=[0,1].map((n=>new m(e[n],t[n])));this.encoder=new g(n,[this.dataConverter.numSegments,1],l)}else{const e=this.getLstmLayers(n.replace("%s","fw"),u),t=this.getLstmLayers(n.replace("%s","bw"),u);if(e.length!==t.length||1!==e.length)throw Error(`Only single-layer bidirectional encoders are supported. Got ${e.length} forward and ${t.length} backward.`);this.encoder=new m(e[0],t[0],l)}const c=i.replace("%s","fw").replace("%d","0")+"kernel"in u,h=this.dataConverter.numSegments?"core_decoder/":"",d=[];if(this.dataConverter.NUM_SPLITS)for(let e=0;e<this.dataConverter.NUM_SPLITS;++e)d.push(`${h}core_decoder_${e}/decoder/`);else d.push(h+"decoder/");let f=[null],y=[null];if(c&&(f=this.getLstmLayers(i.replace("%s","fw"),u),y=this.getLstmLayers(i.replace("%s","bw"),u),f.length!==y.length||1!==f.length))throw Error(`Only single-layer bidirectional control preprocessing is supported. Got ${f.length} forward and ${y.length} backward.`);const b=d.map((e=>{const t=this.getLstmLayers(e+"multi_rnn_cell/cell_%d/lstm_cell/",u),n=new p(u[e+"z_to_initial_state/kernel"],u[e+"z_to_initial_state/bias"]),r=new p(u[e+"output_projection/kernel"],u[e+"output_projection/bias"]);return e+"nade/w_enc"in u?new v(t,n,r,new T(u[e+"nade/w_enc"],u[e+"nade/w_dec_t"]),f[0],y[0]):"GrooveConverter"===this.spec.dataConverter.type?new k(t,n,r,void 0,f[0],y[0]):this.spec.useBooleanDecoder?new x(t,n,r,void 0,f[0],y[0]):new S(t,n,r,void 0,f[0],y[0])}));if(this.dataConverter.numSegments){const e=this.getLstmLayers("decoder/hierarchical_level_0/cell_%d/lstm_cell/",u),t=new p(u["decoder/hierarchical_level_0/initial_state/kernel"],u["decoder/hierarchical_level_0/initial_state/bias"]);this.decoder=new I(b,e,t,this.dataConverter.numSegments)}else 1===b.length?this.decoder=b[0]:this.decoder=new N(b);this.zDims=this.decoder.zDims,this.initialized=!0,s.logWithDuration("Initialized model",e,"MusicVAE")}isInitialized(){return this.initialized}checkControlArgs(e){const t=(e=e||{}).extraControls||{};if(this.chordEncoder&&!e.chordProgression)throw new Error("Chord progression expected but not provided.");if(!this.chordEncoder&&e.chordProgression)throw new Error("Unexpected chord progression provided.");if(this.chordEncoder&&this.dataConverter.endTensor&&e.chordProgression.length>1)throw new Error("Multiple chords not supported when using variable-length segments.");if(this.spec.conditionOnKey&&null==e.key)throw new Error("Key expected but not provided.");if(!this.spec.conditionOnKey&&null!=e.key)throw new Error("Unexpected key provided.");if(this.spec.extraControls)for(const e of this.spec.extraControls){if(!(e.name in t))throw new Error("Missing control signal: "+e.name);if(t[e.name].shape[1]!==e.depth)throw new Error(`Control signal ${e.name} has invalid depth: ${t[e.name].shape[1]} != ${e.depth}`)}const n=this.spec.extraControls?new Set(this.spec.extraControls.map((e=>e.name))):new Set;for(const e in t)n.has(e)||s.log("Unspecified control signal provided: "+e,"MusicVAE",5)}controlArgsToTensor(e){return e=e||{},r.tidy((()=>{const t=[];if(e.chordProgression){const n=this.encodeChordProgression(e.chordProgression);t.push(n)}if(null!=e.key){const n=r.oneHot(r.fill([this.dataConverter.numSteps],e.key,"int32"),12);t.push(n)}if(e.extraControls)for(const n of this.spec.extraControls)t.push(e.extraControls[n.name]);return t.length?r.concat2d(t,1):void 0}))}async interpolateTensors(e,t,n,s){this.initialized||await this.initialize();const a=await this.encodeTensors(e,s),o=r.tidy((()=>this.getInterpolatedZs(a,t)));a.dispose();const i=await this.decodeTensors(o,n,s);return o.dispose(),i}async interpolate(e,t,n,a){this.checkControlArgs(a),this.initialized||await this.initialize();const o=await this.encode(e,a),i=r.tidy((()=>this.getInterpolatedZs(o,t)));o.dispose();const u=this.decode(i,n,a);return i.dispose(),u.then((()=>s.logWithDuration("Interpolation completed",0,"MusicVAE",20))),u}async getSegmentLengths(e){if(e.shape[0]>1)throw new Error("Variable-length segments not supported for batch size > 1.");const t=this.dataConverter.numSteps,n=this.dataConverter.numSegments,s=r.tidy((()=>r.min(r.equal(e.squeeze([0]),this.dataConverter.endTensor.expandDims(0)),1))),a=await s.data();s.dispose();const o=t/n,i=[];let u=0,l=a.indexOf(1);for(;-1!==l;)i.push(l-u+1),u+=o,l=a.indexOf(1,u);if(i.length!==n)throw new Error(`Incorrect number of segments: ${i.length} != ${n}`);return i}encodeChordProgression(e){const t=this.dataConverter.numSteps,n=this.dataConverter.numSegments,s=this.dataConverter.SEGMENTED_BY_TRACK?t/n:t,a=this.dataConverter.SEGMENTED_BY_TRACK?r.concat2d([this.chordEncoder.encode(l.NO_CHORD).expandDims(0),this.chordEncoder.encodeProgression(e,s-1)],0):this.chordEncoder.encodeProgression(e,s);return this.dataConverter.SEGMENTED_BY_TRACK?r.tile(a,[n,1]):a}async encodeTensors(e,t){this.checkControlArgs(t),this.initialized||await this.initialize();const n=this.dataConverter.endTensor?await this.getSegmentLengths(e):void 0;return r.tidy((()=>{const s=this.controlArgsToTensor(t),a=[e];if(s){const t=r.tile(r.expandDims(s,0),[e.shape[0],1,1]);a.push(t)}const o=r.concat3d(a,2);return this.encoder.encode(o,n)}))}async encode(e,t){this.initialized||await this.initialize();const n=a.d.now(),o=r.tidy((()=>r.stack(e.map((e=>this.dataConverter.toTensor(e)))))),i=await this.encodeTensors(o,t);return o.dispose(),s.logWithDuration("Encoding completed",n,"MusicVAE",20),i}async decodeTensors(e,t,n){return this.checkControlArgs(n),this.initialized||await this.initialize(),r.tidy((()=>{const r=this.controlArgsToTensor(n);return this.decoder.decode(e,this.dataConverter.numSteps,void 0,t,r)}))}async decode(e,t,n,o=l.DEFAULT_STEPS_PER_QUARTER,i=l.DEFAULT_QUARTERS_PER_MINUTE){this.initialized||await this.initialize();const u=a.d.now(),c=await this.decodeTensors(e,t,n),p=r.tidy((()=>r.split(c,c.shape[0]).map((e=>e.squeeze([0]))))),h=[];for(const e of p)h.push(await this.dataConverter.toNoteSequence(e,o,i)),e.dispose();return c.dispose(),s.logWithDuration("Decoding completed",u,"MusicVAE",20),h}getInterpolatedZs(e,t){if("number"==typeof t&&(t=[t]),2!==e.shape[0]&&4!==e.shape[0])throw new Error("Invalid number of input sequences. Requires length 2, or 4");if(1!==t.length&&2!==t.length)throw new Error("Invalid number of dimensions. Requires length 1, or 2.");const n=t[0],s=2===t.length?t[1]:n;return r.tidy((()=>{const t=r.linspace(0,1,n),a=e.slice([0,0],[1,e.shape[1]]).as1D(),o=e.slice([1,0],[1,e.shape[1]]).as1D();if(2===e.shape[0]){const e=o.sub(a);return r.outerProduct(t,e).add(a)}if(4===e.shape[0]){const i=r.linspace(0,1,s),u=e.slice([2,0],[1,e.shape[1]]).as1D(),l=e.slice([3,0],[1,e.shape[1]]).as1D(),c=r.scalar(1).sub(t),p=r.scalar(1).sub(i);let h=a.mul(r.outerProduct(p,c).as3D(s,n,1));return h=r.addStrict(h,o.mul(r.outerProduct(i,c).as3D(s,n,1))),h=r.addStrict(h,u.mul(r.outerProduct(p,t).as3D(s,n,1))),h=r.addStrict(h,l.mul(r.outerProduct(i,t).as3D(s,n,1))),h.as2D(n*s,e.shape[1])}throw new Error("Invalid number of note sequences. Requires length 2, or 4")}))}async sampleTensors(e,t=.5,n){this.checkControlArgs(n),this.initialized||await this.initialize();const s=r.tidy((()=>r.randomNormal([e,this.decoder.zDims]))),a=await this.decodeTensors(s,t,n);return s.dispose(),a}async sample(e,t=.5,n,o=l.DEFAULT_STEPS_PER_QUARTER,i=l.DEFAULT_QUARTERS_PER_MINUTE){this.checkControlArgs(n),this.initialized||await this.initialize();const u=a.d.now(),c=r.tidy((()=>r.randomNormal([e,this.decoder.zDims]))),p=this.decode(c,t,n,o,i);return c.dispose(),p.then((()=>s.logWithDuration("Sampling completed",u,"MusicVAE",20))),p}async similarTensors(e,t,n,s,a){if(n<0||n>1)throw new Error("Similarity must be between 0 and 1.");this.initialized||await this.initialize();const o=r.expandDims(e,0),i=await this.encodeTensors(o,a);o.dispose();const u=r.tidy((()=>{const e=r.randomNormal([t,this.decoder.zDims]);return r.add(i.mul(n),e.mul(1-n))}));i.dispose();const l=await this.decodeTensors(u,s,a);return u.dispose(),l}async similar(e,t,n,a,o){if(this.checkControlArgs(o),n<0||n>1)throw new Error("Similarity must be between 0 and 1.");this.initialized||await this.initialize();const i=await this.encode([e],o),u=r.tidy((()=>{const e=r.randomNormal([t,this.decoder.zDims]);return r.add(i.mul(n),e.mul(1-n))}));i.dispose();const l=this.decode(u,a,o);return u.dispose(),l.then((()=>s.logWithDuration("Similar sequence generation completed",0,"MusicVAE",20))),l}}},18:function(e,t,n){"use strict";(function(e){var r=t;function s(e,t,n){for(var r=Object.keys(t),s=0;s<r.length;++s)void 0!==e[r[s]]&&n||(e[r[s]]=t[r[s]]);return e}function a(e){function t(e,n){if(!(this instanceof t))return new t(e,n);Object.defineProperty(this,"message",{get:function(){return e}}),Error.captureStackTrace?Error.captureStackTrace(this,t):Object.defineProperty(this,"stack",{value:(new Error).stack||""}),n&&s(this,n)}return(t.prototype=Object.create(Error.prototype)).constructor=t,Object.defineProperty(t.prototype,"name",{get:function(){return e}}),t.prototype.toString=function(){return this.name+": "+this.message},t}r.asPromise=n(50),r.base64=n(51),r.EventEmitter=n(52),r.float=n(53),r.inquire=n(54),r.utf8=n(55),r.pool=n(56),r.LongBits=n(57),r.isNode=Boolean(void 0!==e&&e&&e.process&&e.process.versions&&e.process.versions.node),r.global=r.isNode&&e||"undefined"!=typeof window&&window||"undefined"!=typeof self&&self||this,r.emptyArray=Object.freeze?Object.freeze([]):[],r.emptyObject=Object.freeze?Object.freeze({}):{},r.isInteger=Number.isInteger||function(e){return"number"==typeof e&&isFinite(e)&&Math.floor(e)===e},r.isString=function(e){return"string"==typeof e||e instanceof String},r.isObject=function(e){return e&&"object"==typeof e},r.isset=r.isSet=function(e,t){var n=e[t];return!(null==n||!e.hasOwnProperty(t))&&("object"!=typeof n||(Array.isArray(n)?n.length:Object.keys(n).length)>0)},r.Buffer=function(){try{var e=r.inquire("buffer").Buffer;return e.prototype.utf8Write?e:null}catch(e){return null}}(),r._Buffer_from=null,r._Buffer_allocUnsafe=null,r.newBuffer=function(e){return"number"==typeof e?r.Buffer?r._Buffer_allocUnsafe(e):new r.Array(e):r.Buffer?r._Buffer_from(e):"undefined"==typeof Uint8Array?e:new Uint8Array(e)},r.Array="undefined"!=typeof Uint8Array?Uint8Array:Array,r.Long=r.global.dcodeIO&&r.global.dcodeIO.Long||r.global.Long||r.inquire("long"),r.key2Re=/^true|false|0|1$/,r.key32Re=/^-?(?:0|[1-9][0-9]*)$/,r.key64Re=/^(?:[\\x00-\\xff]{8}|-?(?:0|[1-9][0-9]*))$/,r.longToHash=function(e){return e?r.LongBits.from(e).toHash():r.LongBits.zeroHash},r.longFromHash=function(e,t){var n=r.LongBits.fromHash(e);return r.Long?r.Long.fromBits(n.lo,n.hi,t):n.toNumber(Boolean(t))},r.merge=s,r.lcFirst=function(e){return e.charAt(0).toLowerCase()+e.substring(1)},r.newError=a,r.ProtocolError=a("ProtocolError"),r.oneOfGetter=function(e){for(var t={},n=0;n<e.length;++n)t[e[n]]=1;return function(){for(var e=Object.keys(this),n=e.length-1;n>-1;--n)if(1===t[e[n]]&&void 0!==this[e[n]]&&null!==this[e[n]])return e[n]}},r.oneOfSetter=function(e){return function(t){for(var n=0;n<e.length;++n)e[n]!==t&&delete this[e[n]]}},r.toJSONOptions={longs:String,enums:String,bytes:String,json:!0},r._configure=function(){var e=r.Buffer;e?(r._Buffer_from=e.from!==Uint8Array.from&&e.from||function(t,n){return new e(t,n)},r._Buffer_allocUnsafe=e.allocUnsafe||function(t){return new e(t)}):r._Buffer_from=r._Buffer_allocUnsafe=null}}).call(this,n(21))},2:function(e,t){e.exports=__WEBPACK_EXTERNAL_MODULE__2__},21:function(e,t){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(e){"object"==typeof window&&(n=window)}e.exports=n},26:function(e,t,n){"use strict";n.r(t),n.d(t,"NO_EVENT",(function(){return o})),n.d(t,"NOTE_OFF",(function(){return i})),n.d(t,"Melody",(function(){return u})),n.d(t,"MelodyRhythm",(function(){return l})),n.d(t,"MelodyShape",(function(){return c})),n.d(t,"MelodyRegister",(function(){return p}));var r=n(2),s=n(9),a=n(15);const o=0,i=1;class u{constructor(e,t,n){this.events=e,this.minPitch=t,this.maxPitch=n}static fromNoteSequence(e,t,n,r=!0,s){a.assertIsQuantizedSequence(e);const o=e.notes.sort(((e,t)=>e.quantizedStartStep===t.quantizedStartStep?t.pitch-e.pitch:e.quantizedStartStep-t.quantizedStartStep)),l=new Int32Array(s||e.totalQuantizedSteps);let c=-1;return o.forEach((e=>{if(e.quantizedStartStep===c){if(r)return;throw new Error("`NoteSequence` is not monophonic.")}if(e.pitch<t||e.pitch>n)throw Error("`NoteSequence` has a pitch outside of the valid range: "+e.pitch);l[e.quantizedStartStep]=e.pitch-t+2,l[e.quantizedEndStep]=i,c=e.quantizedStartStep})),new u(l,t,n)}toNoteSequence(e,t){const n=a.createQuantizedNoteSequence(e,t);let r=null;for(let e=0;e<this.events.length;++e){const t=this.events[e];switch(t){case o:break;case i:r&&(r.quantizedEndStep=e,n.notes.push(r),r=null);break;default:r&&(r.quantizedEndStep=e,n.notes.push(r)),r=s.a.Note.create({pitch:t-2+this.minPitch,quantizedStartStep:e})}}return r&&(r.quantizedEndStep=this.events.length,n.notes.push(r)),n.totalQuantizedSteps=this.events.length,n}}class l{constructor(){this.depth=1}extract(e){const t=e.events.length,n=r.buffer([t,1]);for(let r=0;r<t;++r)n.set(e.events[r]>=2?1:0,r,0);return n.toTensor().as2D(t,1)}}class c{constructor(){this.depth=3}extract(e){const t=e.events.length,n=r.buffer([t,3]);let s=null,a=null;for(let r=0;r<t;++r)if(e.events[r]>=2){if(null!==s){let t;0===n.get(s,0)&&0===n.get(s,1)&&0===n.get(s,2)&&(s=-1),t=e.events[r]<a?0:e.events[r]>a?2:1;for(let e=r;e>s;--e)n.set(1,e,t)}s=r,a=e.events[r]}if(s!==t-1)if(null===s||0===n.get(s,0)&&0===n.get(s,1)&&0===n.get(s,2))for(let e=0;e<t;++e)n.set(1,e,1);else for(let e=t-1;e>s;--e)for(let t=0;t<3;t++)n.set(n.get(s,t),e,t);return n.toTensor().as2D(t,3)}}class p{constructor(e){this.boundaryPitches=e,this.depth=e.length+1}meanMelodyPitch(e){let t=0,n=0,r=null;for(let s=0;s<e.events.length;++s)e.events[s]===i?r=null:e.events[s]>=2&&(r=e.minPitch+e.events[s]-2),null!==r&&(t+=r,n+=1);return n?t/n:null}extract(e){const t=e.events.length,n=this.meanMelodyPitch(e);if(null===n)return r.zeros([t,this.depth]);let s=0;for(;s<this.boundaryPitches.length&&n>=this.boundaryPitches[s];)s++;const a=r.buffer([t,this.depth]);for(let e=0;e<t;++e)a.set(1,e,s);return a.toTensor().as2D(t,this.depth)}}},29:function(e,t,n){"use strict";n.r(t),n.d(t,"DEFAULT_DRUM_PITCH_CLASSES",(function(){return c})),n.d(t,"converterFromSpec",(function(){return p})),n.d(t,"DataConverter",(function(){return h})),n.d(t,"DrumsConverter",(function(){return d})),n.d(t,"DrumRollConverter",(function(){return f})),n.d(t,"DrumsOneHotConverter",(function(){return m})),n.d(t,"MelodyConverter",(function(){return g})),n.d(t,"MelodyRhythmConverter",(function(){return b})),n.d(t,"MelodyShapeConverter",(function(){return w})),n.d(t,"TrioConverter",(function(){return x})),n.d(t,"TrioRhythmConverter",(function(){return S})),n.d(t,"MultitrackConverter",(function(){return v})),n.d(t,"GrooveConverter",(function(){return k}));var r=n(2),s=n(9),a=n(8),o=n(13),i=n(26),u=n(33),l=n(15);const c=[[36,35],[38,27,28,31,32,33,34,37,39,40,56,65,66,75,85],[42,44,54,68,69,70,71,73,78,80],[46,67,72,74,79,81],[45,29,41,61,64,84],[48,47,60,63,77,86,87],[50,30,43,62,76,83],[49,55,57,58],[51,52,53,59,82]];function p(e){switch(e.type){case"MelodyConverter":return new g(e.args);case"MelodyRhythmConverter":return new b(e.args);case"MelodyShapeConverter":return new w(e.args);case"DrumsConverter":return new d(e.args);case"DrumRollConverter":return new f(e.args);case"TrioConverter":return new x(e.args);case"TrioRhythmConverter":return new S(e.args);case"DrumsOneHotConverter":return new m(e.args);case"MultitrackConverter":return new v(e.args);case"GrooveConverter":return new k(e.args);default:throw new Error("Unknown DataConverter type: "+e)}}class h{constructor(e){this.NUM_SPLITS=0,this.SEGMENTED_BY_TRACK=!1,this.numSteps=e.numSteps,this.numSegments=e.numSegments}tensorSteps(e){return r.scalar(e.shape[0],"int32")}}class d extends h{constructor(e){super(e),this.pitchClasses=e.pitchClasses||c,this.pitchToClass=new Map;for(let e=0;e<this.pitchClasses.length;++e)this.pitchClasses[e].forEach((t=>{this.pitchToClass.set(t,e)}));this.depth=this.pitchClasses.length+1}toTensor(e){l.assertIsQuantizedSequence(e);const t=this.numSteps||e.totalQuantizedSteps,n=r.buffer([t,this.pitchClasses.length+1],"int32");for(let e=0;e<t;++e)n.set(1,e,-1);return e.notes.forEach((e=>{n.set(1,e.quantizedStartStep,this.pitchToClass.get(e.pitch)),n.set(0,e.quantizedStartStep,-1)})),n.toTensor()}async toNoteSequence(e,t,n){const r=l.createQuantizedNoteSequence(t,n),a=e.argMax(1),o=await a.data();a.dispose();for(let e=0;e<o.length;++e)for(let t=0;t<this.pitchClasses.length;t++)o[e]>>t&1&&r.notes.push(s.a.Note.create({pitch:this.pitchClasses[t][0],quantizedStartStep:e,quantizedEndStep:e+1,isDrum:!0}));return r.totalQuantizedSteps=o.length,r}}class f extends d{async toNoteSequence(e,t,n){const r=l.createQuantizedNoteSequence(t,n),a=await e.data();for(let t=0;t<e.shape[0];++t){const e=a.slice(t*this.pitchClasses.length,(t+1)*this.pitchClasses.length);for(let n=0;n<e.length;++n)e[n]&&r.notes.push(s.a.Note.create({pitch:this.pitchClasses[n][0],quantizedStartStep:t,quantizedEndStep:t+1,isDrum:!0}))}return r.totalQuantizedSteps=e.shape[0],r}}class m extends d{constructor(e){super(e),this.depth=Math.pow(2,this.pitchClasses.length)}toTensor(e){l.assertIsRelativeQuantizedSequence(e);const t=this.numSteps||e.totalQuantizedSteps,n=Array(t).fill(0);for(const{pitch:t,quantizedStartStep:r}of e.notes)n[r]+=Math.pow(2,this.pitchToClass.get(t));return r.tidy((()=>r.oneHot(r.tensor1d(n,"int32"),this.depth)))}}class g extends h{constructor(e){super(e),this.NOTE_OFF=1,this.FIRST_PITCH=2,this.minPitch=e.minPitch,this.maxPitch=e.maxPitch,this.ignorePolyphony=e.ignorePolyphony,this.depth=e.maxPitch-e.minPitch+1+this.FIRST_PITCH}toTensor(e){const t=i.Melody.fromNoteSequence(e,this.minPitch,this.maxPitch,this.ignorePolyphony,this.numSteps);return r.tidy((()=>r.oneHot(r.tensor(t.events,[t.events.length],"int32"),this.depth)))}async toNoteSequence(e,t,n){const r=e.argMax(1),s=await r.data();return r.dispose(),new i.Melody(s,this.minPitch,this.maxPitch).toNoteSequence(t,n)}}class y extends h{constructor(e,t){super(e),this.minPitch=e.minPitch,this.maxPitch=e.maxPitch,this.ignorePolyphony=e.ignorePolyphony,this.melodyControl=t,this.depth=t.depth}toTensor(e){const t=i.Melody.fromNoteSequence(e,this.minPitch,this.maxPitch,this.ignorePolyphony,this.numSteps);return this.melodyControl.extract(t)}}class b extends y{constructor(e){super(e,new i.MelodyRhythm)}async toNoteSequence(e,t,n){const r=l.createQuantizedNoteSequence(t,n),a=await e.data();for(let e=0;e<a.length;++e)a[e]&&r.notes.push(s.a.Note.create({pitch:c[1][0],quantizedStartStep:e,quantizedEndStep:e+1,isDrum:!0}));return r.totalQuantizedSteps=a.length,r}}class w extends y{constructor(e){super(e,new i.MelodyShape)}async toNoteSequence(e,t,n){const r=l.createQuantizedNoteSequence(t,n),a=e.argMax(1),i=await a.data();a.dispose();let u=Math.round((this.maxPitch+this.minPitch)/2);for(let e=0;e<i.length;++e){switch(i[e]){case 0:u-=1,u<this.minPitch&&(u=this.minPitch,o.log("Pitch range exceeded when creating NoteSequence from shape.","MelodyShapeConverter"));break;case 2:u+=1,u>this.maxPitch&&(u=this.maxPitch,o.log("Pitch range exceeded when creating NoteSequence from shape.","MelodyShapeConverter"))}r.notes.push(s.a.Note.create({pitch:u,quantizedStartStep:e,quantizedEndStep:e+1}))}return r.totalQuantizedSteps=i.length,r}}class x extends h{constructor(e){super(e),this.NUM_SPLITS=3,this.MEL_PROG_RANGE=[0,31],this.BASS_PROG_RANGE=[32,39],e.melArgs.numSteps=e.numSteps,e.bassArgs.numSteps=e.numSteps,e.drumsArgs.numSteps=e.numSteps,this.melConverter=new g(e.melArgs),this.bassConverter=new g(e.bassArgs),this.drumsConverter=new m(e.drumsArgs),this.depth=this.melConverter.depth+this.bassConverter.depth+this.drumsConverter.depth}toTensor(e){l.assertIsQuantizedSequence(e);const t=l.clone(e),n=l.clone(e),s=l.clone(e);return t.notes=e.notes.filter((e=>!e.isDrum&&e.program>=this.MEL_PROG_RANGE[0]&&e.program<=this.MEL_PROG_RANGE[1])),n.notes=e.notes.filter((e=>!e.isDrum&&e.program>=this.BASS_PROG_RANGE[0]&&e.program<=this.BASS_PROG_RANGE[1])),s.notes=e.notes.filter((e=>e.isDrum)),r.tidy((()=>r.concat([this.melConverter.toTensor(t),this.bassConverter.toTensor(n),this.drumsConverter.toTensor(s)],-1)))}async toNoteSequence(e,t,n){const s=r.split(e,[this.melConverter.depth,this.bassConverter.depth,this.drumsConverter.depth],-1),a=await this.melConverter.toNoteSequence(s[0],t,n);a.notes.forEach((e=>{e.instrument=0,e.program=0}));const o=await this.bassConverter.toNoteSequence(s[1],t,n);a.notes.push(...o.notes.map((e=>(e.instrument=1,e.program=this.BASS_PROG_RANGE[0],e))));const i=await this.drumsConverter.toNoteSequence(s[2],t,n);return a.notes.push(...i.notes.map((e=>(e.instrument=2,e)))),s.forEach((e=>e.dispose())),a}}class S extends h{constructor(e){super(e),this.NUM_SPLITS=3,this.trioConverter=new x(e),this.depth=3}toTensor(e){return r.tidy((()=>{const t=this.trioConverter.toTensor(e),n=r.split(t,[this.trioConverter.melConverter.depth,this.trioConverter.bassConverter.depth,this.trioConverter.drumsConverter.depth],1),s=r.argMax(n[0],1),a=r.argMax(n[1],1),o=r.argMax(n[2],1),i=r.greater(s,1),u=r.greater(a,1),l=r.greater(o,0);return r.stack([i,u,l],1)}))}async toNoteSequence(e,t,n){const a=r.split(e,3,1),o=await Promise.all(a.map((e=>e.data()))),i=l.createQuantizedNoteSequence(t,n);for(let e=0;e<this.numSteps;++e)o[0][e]&&i.notes.push(s.a.Note.create({pitch:72,quantizedStartStep:e,quantizedEndStep:e+1,instrument:0,program:0})),o[1][e]&&i.notes.push(s.a.Note.create({pitch:36,quantizedStartStep:e,quantizedEndStep:e+1,instrument:1,program:32})),o[2][e]&&i.notes.push(s.a.Note.create({pitch:c[1][0],quantizedStartStep:e,quantizedEndStep:e+1,instrument:2,isDrum:!0}));return i.totalQuantizedSteps=this.numSteps,i}}class v extends h{constructor(e){super(e),this.SEGMENTED_BY_TRACK=!0,this.stepsPerQuarter=e.stepsPerQuarter,this.totalSteps=e.totalSteps,this.numVelocityBins=e.numVelocityBins,this.minPitch=e.minPitch?e.minPitch:a.MIN_MIDI_PITCH,this.maxPitch=e.maxPitch?e.maxPitch:a.MAX_MIDI_PITCH,this.numPitches=this.maxPitch-this.minPitch+1,this.performanceEventDepth=2*this.numPitches+this.totalSteps+this.numVelocityBins,this.numPrograms=a.MAX_MIDI_PROGRAM-a.MIN_MIDI_PROGRAM+2,this.endToken=this.performanceEventDepth+this.numPrograms,this.depth=this.endToken+1,this.endTensor=r.tidy((()=>r.oneHot(r.tensor1d([this.endToken],"int32"),this.depth).as1D()))}trackToTensor(e){const t=this.numSteps/this.numSegments;let n;if(e){for(;e.events.length>t-2;)e.events.pop();n=r.buffer([e.events.length+2],"int32"),n.set(this.performanceEventDepth+(e.isDrum?this.numPrograms-1:e.program),0),e.events.forEach(((e,t)=>{switch(e.type){case"note-on":n.set(e.pitch-this.minPitch,t+1);break;case"note-off":n.set(this.numPitches+e.pitch-this.minPitch,t+1);break;case"time-shift":n.set(2*this.numPitches+e.steps-1,t+1);break;case"velocity-change":n.set(2*this.numPitches+this.totalSteps+e.velocityBin-1,t+1);break;default:throw new Error("Unrecognized performance event: "+e)}})),n.set(this.endToken,e.events.length+1)}else n=r.buffer([1],"int32",new Int32Array([this.endToken]));return r.tidy((()=>{const e=r.oneHot(n.toTensor(),this.depth);return e.pad([[0,t-e.shape[0]],[0,0]])}))}toTensor(e){if(l.assertIsRelativeQuantizedSequence(e),e.quantizationInfo.stepsPerQuarter!==this.stepsPerQuarter)throw new Error(`Steps per quarter note mismatch: ${e.quantizationInfo.stepsPerQuarter} != ${this.stepsPerQuarter}`);const t=l.clone(e);t.notes=e.notes.filter((e=>e.pitch>=this.minPitch&&e.pitch<=this.maxPitch));const n=new Set(t.notes.map((e=>e.instrument))),s=Array.from(n).map((e=>u.Performance.fromNoteSequence(t,this.totalSteps,this.numVelocityBins,e))).sort(((e,t)=>t.isDrum?-1:e.isDrum?1:e.program-t.program));for(;s.length>this.numSegments;)s.pop();for(s.forEach((e=>e.setNumSteps(this.totalSteps)));s.length<this.numSegments;)s.push(void 0);return r.tidy((()=>r.concat(s.map((e=>this.trackToTensor(e))),0)))}tokensToTrack(e){const t=e.indexOf(this.endToken),n=t>=0?t:e.length,r=e.slice(0,n),s=r.filter((e=>e<this.performanceEventDepth)),a=r.filter((e=>e>=this.performanceEventDepth)),[o,i]=a.length?a[0]-this.performanceEventDepth<this.numPrograms-1?[a[0]-this.performanceEventDepth,!1]:[0,!0]:[0,!1],l=Array.from(s).map((e=>{if(e<this.numPitches)return{type:"note-on",pitch:this.minPitch+e};if(e<2*this.numPitches)return{type:"note-off",pitch:this.minPitch+e-this.numPitches};if(e<2*this.numPitches+this.totalSteps)return{type:"time-shift",steps:e-2*this.numPitches+1};if(e<2*this.numPitches+this.totalSteps+this.numVelocityBins)return{type:"velocity-change",velocityBin:e-2*this.numPitches-this.totalSteps+1};throw new Error("Invalid performance event token: "+e)}));return new u.Performance(l,this.totalSteps,this.numVelocityBins,o,i)}async toNoteSequence(e,t=this.stepsPerQuarter,n){const s=l.createQuantizedNoteSequence(t,n);s.totalQuantizedSteps=this.totalSteps;const a=r.tidy((()=>r.split(e.argMax(1),this.numSegments)));return(await Promise.all(a.map((async e=>{const t=await e.data(),n=this.tokensToTrack(t);return e.dispose(),n})))).forEach(((e,t)=>{e.setNumSteps(this.totalSteps),s.notes.push(...e.toNoteSequence(t).notes)})),s}}class k extends h{constructor(e){super(e),this.TAPIFY_CHANNEL=3,this.stepsPerQuarter=e.stepsPerQuarter||a.DEFAULT_STEPS_PER_QUARTER,this.pitchClasses=e.pitchClasses||c,this.pitchToClass=new Map;for(let e=0;e<this.pitchClasses.length;++e)this.pitchClasses[e].forEach((t=>{this.pitchToClass.set(t,e)}));this.humanize=e.humanize||!1,this.tapify=e.tapify||!1,this.splitInstruments=e.splitInstruments||!1,this.depth=3}toTensor(e){const t=l.isRelativeQuantizedSequence(e)?e:l.quantizeNoteSequence(e,this.stepsPerQuarter),n=this.numSteps,s=t.tempos&&t.tempos.length?t.tempos[0].qpm:a.DEFAULT_QUARTERS_PER_MINUTE,o=60/s/this.stepsPerQuarter,i=[];for(let e=0;e<n;++e)i.push(new Map);t.notes.forEach((e=>{if(!this.tapify&&!this.pitchToClass.has(e.pitch))return;const t=e.quantizedStartStep;if(t>=i.length)throw Error(`Model does not support sequences with more than ${n} steps (${n*o} seconds at qpm ${s}).`);const r=this.tapify?this.TAPIFY_CHANNEL:this.pitchToClass.get(e.pitch);(!i[t].has(r)||i[t].get(r).velocity<e.velocity)&&i[t].set(r,e)}));const u=this.pitchClasses.length,c=r.buffer([n,u]),p=r.buffer([n,u]),h=r.buffer([n,u]);function d(e){if(void 0===e.startTime)return 0;const t=e.startTime;return 2*(e.quantizedStartStep*o-t)/o}for(let e=0;e<n;++e)for(let t=0;t<u;++t){const n=i[e].get(t);c.set(n?1:0,e,t),this.humanize||this.tapify||p.set(n?n.velocity/a.MAX_MIDI_VELOCITY:0,e,t),this.humanize||h.set(n?d(n):0,e,t)}return r.tidy((()=>{const e=c.toTensor(),t=p.toTensor(),s=h.toTensor(),a=this.splitInstruments?n*u:n;return r.concat([e.as2D(a,-1),t.as2D(a,-1),s.as2D(a,-1)],1)}))}async toNoteSequence(e,t,n=a.DEFAULT_QUARTERS_PER_MINUTE){if(t&&t!==this.stepsPerQuarter)throw Error("`stepsPerQuarter` is set by the model.");t=this.stepsPerQuarter;const r=this.splitInstruments?e.shape[0]/this.pitchClasses.length:e.shape[0],o=60/n/this.stepsPerQuarter,i=s.a.create({totalTime:r*o,tempos:[{qpm:n}]}),u=await e.data();function l(e,t,n){return Math.min(Math.max(e,t),n)}const c=this.pitchClasses.length;for(let e=0;e<r;++e){const t=u.slice(e*c*this.depth,(e+1)*c*this.depth);for(let n=0;n<c;++n){const r=t[this.splitInstruments?n*this.depth:n],u=t[this.splitInstruments?n*this.depth+1:c+n],p=t[this.splitInstruments?n*this.depth+2:2*c+n];if(r>.5){const t=l(Math.round(u*a.MAX_MIDI_VELOCITY),a.MIN_MIDI_VELOCITY,a.MAX_MIDI_VELOCITY),r=l(p/2,-.5,.5);i.notes.push(s.a.Note.create({pitch:this.pitchClasses[n][0],startTime:(e-r)*o,endTime:(e-r+1)*o,velocity:t,isDrum:!0}))}}}return i}}},33:function(e,t,n){"use strict";n.r(t),n.d(t,"Performance",(function(){return i}));var r=n(9),s=n(8),a=n(15),o=n(13);class i{constructor(e,t,n,r,s){this.events=e,this.maxShiftSteps=t,this.numVelocityBins=n,this.program=r,this.isDrum=s}static fromNoteSequence(e,t,n,r){a.assertIsQuantizedSequence(e);const o=e.notes.filter(((e,t)=>void 0===r||e.instrument===r)),u=o.sort(((e,t)=>e.startTime===t.startTime?e.pitch-t.pitch:e.startTime-t.startTime)),l=u.map(((e,t)=>({step:e.quantizedStartStep,index:t,isOffset:0}))),c=u.map(((e,t)=>({step:e.quantizedEndStep,index:t,isOffset:1}))),p=l.concat(c).sort(((e,t)=>e.step===t.step?e.index===t.index?e.isOffset-t.isOffset:e.index-t.index:e.step-t.step)),h=n?Math.ceil((s.MIDI_VELOCITIES-1)/n):void 0,d=[];let f=0,m=n;for(const e of p){if(e.step>f){for(;e.step>f+t;)d.push({type:"time-shift",steps:t}),f+=t;d.push({type:"time-shift",steps:e.step-f}),f=e.step}if(e.isOffset)d.push({type:"note-off",pitch:u[e.index].pitch});else{if(h){const t=Math.floor((u[e.index].velocity-s.MIN_MIDI_VELOCITY-1)/h)+1;t!==m&&(d.push({type:"velocity-change",velocityBin:t}),m=t)}d.push({type:"note-on",pitch:u[e.index].pitch})}}const g=!!o.some((e=>e.isDrum))&&(!o.some((e=>!e.isDrum))||void 0),y=Array.from(new Set(o.map((e=>e.program)))),b=g||1!==y.length?void 0:y[0],w=new i(d,t,n,b,g);return w.setNumSteps(e.totalQuantizedSteps),w}getNumSteps(){return this.events.filter((e=>"time-shift"===e.type)).map((e=>e.steps)).reduce(((e,t)=>e+t),0)}setNumSteps(e){let t=this.getNumSteps();if(t<e){if(this.events.length){const n=this.events[this.events.length-1];if("time-shift"===n.type){const r=Math.min(e-t,this.maxShiftSteps-n.steps);n.steps+=r,t+=r}}for(;t<e;)t+this.maxShiftSteps>e?(this.events.push({type:"time-shift",steps:e-t}),t=e):(this.events.push({type:"time-shift",steps:this.maxShiftSteps}),t+=this.maxShiftSteps)}else if(t>e)for(;this.events.length&&t>e;){const n=this.events[this.events.length-1];"time-shift"===n.type?t-n.steps<e?(n.steps-=t-e,t=e):(this.events.pop(),t-=n.steps):this.events.pop()}}toNoteSequence(e){const t=this.numVelocityBins?Math.ceil((s.MIDI_VELOCITIES-1)/this.numVelocityBins):void 0,n=r.a.create();let a,i=0;const u=new Map;for(let e=s.MIN_MIDI_PITCH;e<=s.MAX_MIDI_PITCH;++e)u.set(e,[]);for(const l of this.events)switch(l.type){case"note-on":u.get(l.pitch).push([i,a]);break;case"note-off":const c=u.get(l.pitch);if(c.length){const[t,s]=c.shift();i>t?n.notes.push(r.a.Note.create({pitch:l.pitch,velocity:s,instrument:e,quantizedStartStep:t,quantizedEndStep:i,program:this.program,isDrum:this.isDrum})):o.log(`Ignoring zero-length note: (pitch = ${l.pitch}, step = ${i})`,"Performance")}else o.log(`Ignoring note-off with no previous note-on:(pitch = ${l.pitch}, step = ${i})`,"Performance");break;case"time-shift":i+=l.steps;break;case"velocity-change":if(!t)throw new Error("Unexpected velocity change event: "+l);a=s.MIN_MIDI_VELOCITY+(l.velocityBin-1)*t+1;break;default:throw new Error("Unrecognized performance event: "+l)}return u.forEach(((t,s)=>{for(const[a,u]of t)i>a?n.notes.push(r.a.Note.create({pitch:s,velocity:u,instrument:e,quantizedStartStep:a,quantizedEndStep:i,program:this.program,isDrum:this.isDrum})):o.log(`Ignoring zero-length note: (pitch = ${s}, step = ${i})`,"Performance")})),n.totalQuantizedSteps=i,n}}},35:function(e,t,n){"use strict";e.exports=p;var r,s=n(18),a=s.LongBits,o=s.base64,i=s.utf8;function u(e,t,n){this.fn=e,this.len=t,this.next=void 0,this.val=n}function l(){}function c(e){this.head=e.head,this.tail=e.tail,this.len=e.len,this.next=e.states}function p(){this.len=0,this.head=new u(l,0,0),this.tail=this.head,this.states=null}var h=function(){return s.Buffer?function(){return(p.create=function(){return new r})()}:function(){return new p}};function d(e,t,n){t[n]=255&e}function f(e,t){this.len=e,this.next=void 0,this.val=t}function m(e,t,n){for(;e.hi;)t[n++]=127&e.lo|128,e.lo=(e.lo>>>7|e.hi<<25)>>>0,e.hi>>>=7;for(;e.lo>127;)t[n++]=127&e.lo|128,e.lo=e.lo>>>7;t[n++]=e.lo}function g(e,t,n){t[n]=255&e,t[n+1]=e>>>8&255,t[n+2]=e>>>16&255,t[n+3]=e>>>24}p.create=h(),p.alloc=function(e){return new s.Array(e)},s.Array!==Array&&(p.alloc=s.pool(p.alloc,s.Array.prototype.subarray)),p.prototype._push=function(e,t,n){return this.tail=this.tail.next=new u(e,t,n),this.len+=t,this},f.prototype=Object.create(u.prototype),f.prototype.fn=function(e,t,n){for(;e>127;)t[n++]=127&e|128,e>>>=7;t[n]=e},p.prototype.uint32=function(e){return this.len+=(this.tail=this.tail.next=new f((e>>>=0)<128?1:e<16384?2:e<2097152?3:e<268435456?4:5,e)).len,this},p.prototype.int32=function(e){return e<0?this._push(m,10,a.fromNumber(e)):this.uint32(e)},p.prototype.sint32=function(e){return this.uint32((e<<1^e>>31)>>>0)},p.prototype.uint64=function(e){var t=a.from(e);return this._push(m,t.length(),t)},p.prototype.int64=p.prototype.uint64,p.prototype.sint64=function(e){var t=a.from(e).zzEncode();return this._push(m,t.length(),t)},p.prototype.bool=function(e){return this._push(d,1,e?1:0)},p.prototype.fixed32=function(e){return this._push(g,4,e>>>0)},p.prototype.sfixed32=p.prototype.fixed32,p.prototype.fixed64=function(e){var t=a.from(e);return this._push(g,4,t.lo)._push(g,4,t.hi)},p.prototype.sfixed64=p.prototype.fixed64,p.prototype.float=function(e){return this._push(s.float.writeFloatLE,4,e)},p.prototype.double=function(e){return this._push(s.float.writeDoubleLE,8,e)};var y=s.Array.prototype.set?function(e,t,n){t.set(e,n)}:function(e,t,n){for(var r=0;r<e.length;++r)t[n+r]=e[r]};p.prototype.bytes=function(e){var t=e.length>>>0;if(!t)return this._push(d,1,0);if(s.isString(e)){var n=p.alloc(t=o.length(e));o.decode(e,n,0),e=n}return this.uint32(t)._push(y,t,e)},p.prototype.string=function(e){var t=i.length(e);return t?this.uint32(t)._push(i.write,t,e):this._push(d,1,0)},p.prototype.fork=function(){return this.states=new c(this),this.head=this.tail=new u(l,0,0),this.len=0,this},p.prototype.reset=function(){return this.states?(this.head=this.states.head,this.tail=this.states.tail,this.len=this.states.len,this.states=this.states.next):(this.head=this.tail=new u(l,0,0),this.len=0),this},p.prototype.ldelim=function(){var e=this.head,t=this.tail,n=this.len;return this.reset().uint32(n),n&&(this.tail.next=e.next,this.tail=t,this.len+=n),this},p.prototype.finish=function(){for(var e=this.head.next,t=this.constructor.alloc(this.len),n=0;e;)e.fn(e.val,t,n),n+=e.len,e=e.next;return t},p._configure=function(e){r=e,p.create=h(),r._configure()}},36:function(e,t,n){"use strict";e.exports=u;var r,s=n(18),a=s.LongBits,o=s.utf8;function i(e,t){return RangeError("index out of range: "+e.pos+" + "+(t||1)+" > "+e.len)}function u(e){this.buf=e,this.pos=0,this.len=e.length}var l,c="undefined"!=typeof Uint8Array?function(e){if(e instanceof Uint8Array||Array.isArray(e))return new u(e);throw Error("illegal buffer")}:function(e){if(Array.isArray(e))return new u(e);throw Error("illegal buffer")},p=function(){return s.Buffer?function(e){return(u.create=function(e){return s.Buffer.isBuffer(e)?new r(e):c(e)})(e)}:c};function h(){var e=new a(0,0),t=0;if(!(this.len-this.pos>4)){for(;t<3;++t){if(this.pos>=this.len)throw i(this);if(e.lo=(e.lo|(127&this.buf[this.pos])<<7*t)>>>0,this.buf[this.pos++]<128)return e}return e.lo=(e.lo|(127&this.buf[this.pos++])<<7*t)>>>0,e}for(;t<4;++t)if(e.lo=(e.lo|(127&this.buf[this.pos])<<7*t)>>>0,this.buf[this.pos++]<128)return e;if(e.lo=(e.lo|(127&this.buf[this.pos])<<28)>>>0,e.hi=(e.hi|(127&this.buf[this.pos])>>4)>>>0,this.buf[this.pos++]<128)return e;if(t=0,this.len-this.pos>4){for(;t<5;++t)if(e.hi=(e.hi|(127&this.buf[this.pos])<<7*t+3)>>>0,this.buf[this.pos++]<128)return e}else for(;t<5;++t){if(this.pos>=this.len)throw i(this);if(e.hi=(e.hi|(127&this.buf[this.pos])<<7*t+3)>>>0,this.buf[this.pos++]<128)return e}throw Error("invalid varint encoding")}function d(e,t){return(e[t-4]|e[t-3]<<8|e[t-2]<<16|e[t-1]<<24)>>>0}function f(){if(this.pos+8>this.len)throw i(this,8);return new a(d(this.buf,this.pos+=4),d(this.buf,this.pos+=4))}u.create=p(),u.prototype._slice=s.Array.prototype.subarray||s.Array.prototype.slice,u.prototype.uint32=(l=4294967295,function(){if(l=(127&this.buf[this.pos])>>>0,this.buf[this.pos++]<128)return l;if(l=(l|(127&this.buf[this.pos])<<7)>>>0,this.buf[this.pos++]<128)return l;if(l=(l|(127&this.buf[this.pos])<<14)>>>0,this.buf[this.pos++]<128)return l;if(l=(l|(127&this.buf[this.pos])<<21)>>>0,this.buf[this.pos++]<128)return l;if(l=(l|(15&this.buf[this.pos])<<28)>>>0,this.buf[this.pos++]<128)return l;if((this.pos+=5)>this.len)throw this.pos=this.len,i(this,10);return l}),u.prototype.int32=function(){return 0|this.uint32()},u.prototype.sint32=function(){var e=this.uint32();return e>>>1^-(1&e)|0},u.prototype.bool=function(){return 0!==this.uint32()},u.prototype.fixed32=function(){if(this.pos+4>this.len)throw i(this,4);return d(this.buf,this.pos+=4)},u.prototype.sfixed32=function(){if(this.pos+4>this.len)throw i(this,4);return 0|d(this.buf,this.pos+=4)},u.prototype.float=function(){if(this.pos+4>this.len)throw i(this,4);var e=s.float.readFloatLE(this.buf,this.pos);return this.pos+=4,e},u.prototype.double=function(){if(this.pos+8>this.len)throw i(this,4);var e=s.float.readDoubleLE(this.buf,this.pos);return this.pos+=8,e},u.prototype.bytes=function(){var e=this.uint32(),t=this.pos,n=this.pos+e;if(n>this.len)throw i(this,e);return this.pos+=e,Array.isArray(this.buf)?this.buf.slice(t,n):t===n?new this.buf.constructor(0):this._slice.call(this.buf,t,n)},u.prototype.string=function(){var e=this.bytes();return o.read(e,0,e.length)},u.prototype.skip=function(e){if("number"==typeof e){if(this.pos+e>this.len)throw i(this,e);this.pos+=e}else do{if(this.pos>=this.len)throw i(this)}while(128&this.buf[this.pos++]);return this},u.prototype.skipType=function(e){switch(e){case 0:this.skip();break;case 1:this.skip(8);break;case 2:this.skip(this.uint32());break;case 3:for(;4!=(e=7&this.uint32());)this.skipType(e);break;case 5:this.skip(4);break;default:throw Error("invalid wire type "+e+" at offset "+this.pos)}return this},u._configure=function(e){r=e,u.create=p(),r._configure();var t=s.Long?"toLong":"toNumber";s.merge(u.prototype,{int64:function(){return h.call(this)[t](!1)},uint64:function(){return h.call(this)[t](!0)},sint64:function(){return h.call(this).zzDecode()[t](!1)},fixed64:function(){return f.call(this)[t](!0)},sfixed64:function(){return f.call(this)[t](!1)}})}},38:function(e,t,n){"use strict";var r,s,a=n(48),o=a.Reader,i=a.Writer,u=a.util,l=a.roots.default||(a.roots.default={});l.tensorflow=((s={}).magenta=((r={}).NoteSequence=function(){function e(e){if(this.timeSignatures=[],this.keySignatures=[],this.tempos=[],this.notes=[],this.pitchBends=[],this.controlChanges=[],this.partInfos=[],this.textAnnotations=[],this.sectionAnnotations=[],this.sectionGroups=[],e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}var t,n;return e.prototype.id="",e.prototype.filename="",e.prototype.referenceNumber=u.Long?u.Long.fromBits(0,0,!1):0,e.prototype.collectionName="",e.prototype.ticksPerQuarter=0,e.prototype.timeSignatures=u.emptyArray,e.prototype.keySignatures=u.emptyArray,e.prototype.tempos=u.emptyArray,e.prototype.notes=u.emptyArray,e.prototype.totalTime=0,e.prototype.totalQuantizedSteps=u.Long?u.Long.fromBits(0,0,!1):0,e.prototype.pitchBends=u.emptyArray,e.prototype.controlChanges=u.emptyArray,e.prototype.partInfos=u.emptyArray,e.prototype.sourceInfo=null,e.prototype.textAnnotations=u.emptyArray,e.prototype.sectionAnnotations=u.emptyArray,e.prototype.sectionGroups=u.emptyArray,e.prototype.quantizationInfo=null,e.prototype.subsequenceInfo=null,e.prototype.sequenceMetadata=null,e.create=function(t){return new e(t)},e.encode=function(e,t){if(t||(t=i.create()),null!=e.id&&e.hasOwnProperty("id")&&t.uint32(10).string(e.id),null!=e.filename&&e.hasOwnProperty("filename")&&t.uint32(18).string(e.filename),null!=e.collectionName&&e.hasOwnProperty("collectionName")&&t.uint32(26).string(e.collectionName),null!=e.ticksPerQuarter&&e.hasOwnProperty("ticksPerQuarter")&&t.uint32(32).int32(e.ticksPerQuarter),null!=e.timeSignatures&&e.timeSignatures.length)for(var n=0;n<e.timeSignatures.length;++n)l.tensorflow.magenta.NoteSequence.TimeSignature.encode(e.timeSignatures[n],t.uint32(42).fork()).ldelim();if(null!=e.keySignatures&&e.keySignatures.length)for(n=0;n<e.keySignatures.length;++n)l.tensorflow.magenta.NoteSequence.KeySignature.encode(e.keySignatures[n],t.uint32(50).fork()).ldelim();if(null!=e.tempos&&e.tempos.length)for(n=0;n<e.tempos.length;++n)l.tensorflow.magenta.NoteSequence.Tempo.encode(e.tempos[n],t.uint32(58).fork()).ldelim();if(null!=e.notes&&e.notes.length)for(n=0;n<e.notes.length;++n)l.tensorflow.magenta.NoteSequence.Note.encode(e.notes[n],t.uint32(66).fork()).ldelim();if(null!=e.totalTime&&e.hasOwnProperty("totalTime")&&t.uint32(73).double(e.totalTime),null!=e.pitchBends&&e.pitchBends.length)for(n=0;n<e.pitchBends.length;++n)l.tensorflow.magenta.NoteSequence.PitchBend.encode(e.pitchBends[n],t.uint32(82).fork()).ldelim();if(null!=e.controlChanges&&e.controlChanges.length)for(n=0;n<e.controlChanges.length;++n)l.tensorflow.magenta.NoteSequence.ControlChange.encode(e.controlChanges[n],t.uint32(90).fork()).ldelim();if(null!=e.partInfos&&e.partInfos.length)for(n=0;n<e.partInfos.length;++n)l.tensorflow.magenta.NoteSequence.PartInfo.encode(e.partInfos[n],t.uint32(98).fork()).ldelim();if(null!=e.sourceInfo&&e.hasOwnProperty("sourceInfo")&&l.tensorflow.magenta.NoteSequence.SourceInfo.encode(e.sourceInfo,t.uint32(106).fork()).ldelim(),null!=e.textAnnotations&&e.textAnnotations.length)for(n=0;n<e.textAnnotations.length;++n)l.tensorflow.magenta.NoteSequence.TextAnnotation.encode(e.textAnnotations[n],t.uint32(114).fork()).ldelim();if(null!=e.quantizationInfo&&e.hasOwnProperty("quantizationInfo")&&l.tensorflow.magenta.NoteSequence.QuantizationInfo.encode(e.quantizationInfo,t.uint32(122).fork()).ldelim(),null!=e.totalQuantizedSteps&&e.hasOwnProperty("totalQuantizedSteps")&&t.uint32(128).int64(e.totalQuantizedSteps),null!=e.subsequenceInfo&&e.hasOwnProperty("subsequenceInfo")&&l.tensorflow.magenta.NoteSequence.SubsequenceInfo.encode(e.subsequenceInfo,t.uint32(138).fork()).ldelim(),null!=e.referenceNumber&&e.hasOwnProperty("referenceNumber")&&t.uint32(144).int64(e.referenceNumber),null!=e.sequenceMetadata&&e.hasOwnProperty("sequenceMetadata")&&l.tensorflow.magenta.SequenceMetadata.encode(e.sequenceMetadata,t.uint32(154).fork()).ldelim(),null!=e.sectionAnnotations&&e.sectionAnnotations.length)for(n=0;n<e.sectionAnnotations.length;++n)l.tensorflow.magenta.NoteSequence.SectionAnnotation.encode(e.sectionAnnotations[n],t.uint32(162).fork()).ldelim();if(null!=e.sectionGroups&&e.sectionGroups.length)for(n=0;n<e.sectionGroups.length;++n)l.tensorflow.magenta.NoteSequence.SectionGroup.encode(e.sectionGroups[n],t.uint32(170).fork()).ldelim();return t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof o||(e=o.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new l.tensorflow.magenta.NoteSequence;e.pos<n;){var s=e.uint32();switch(s>>>3){case 1:r.id=e.string();break;case 2:r.filename=e.string();break;case 18:r.referenceNumber=u.Long?e.int64().toNumber():e.int64();break;case 3:r.collectionName=e.string();break;case 4:r.ticksPerQuarter=e.int32();break;case 5:r.timeSignatures&&r.timeSignatures.length||(r.timeSignatures=[]),r.timeSignatures.push(l.tensorflow.magenta.NoteSequence.TimeSignature.decode(e,e.uint32()));break;case 6:r.keySignatures&&r.keySignatures.length||(r.keySignatures=[]),r.keySignatures.push(l.tensorflow.magenta.NoteSequence.KeySignature.decode(e,e.uint32()));break;case 7:r.tempos&&r.tempos.length||(r.tempos=[]),r.tempos.push(l.tensorflow.magenta.NoteSequence.Tempo.decode(e,e.uint32()));break;case 8:r.notes&&r.notes.length||(r.notes=[]),r.notes.push(l.tensorflow.magenta.NoteSequence.Note.decode(e,e.uint32()));break;case 9:r.totalTime=e.double();break;case 16:r.totalQuantizedSteps=u.Long?e.int64().toNumber():e.int64();break;case 10:r.pitchBends&&r.pitchBends.length||(r.pitchBends=[]),r.pitchBends.push(l.tensorflow.magenta.NoteSequence.PitchBend.decode(e,e.uint32()));break;case 11:r.controlChanges&&r.controlChanges.length||(r.controlChanges=[]),r.controlChanges.push(l.tensorflow.magenta.NoteSequence.ControlChange.decode(e,e.uint32()));break;case 12:r.partInfos&&r.partInfos.length||(r.partInfos=[]),r.partInfos.push(l.tensorflow.magenta.NoteSequence.PartInfo.decode(e,e.uint32()));break;case 13:r.sourceInfo=l.tensorflow.magenta.NoteSequence.SourceInfo.decode(e,e.uint32());break;case 14:r.textAnnotations&&r.textAnnotations.length||(r.textAnnotations=[]),r.textAnnotations.push(l.tensorflow.magenta.NoteSequence.TextAnnotation.decode(e,e.uint32()));break;case 20:r.sectionAnnotations&&r.sectionAnnotations.length||(r.sectionAnnotations=[]),r.sectionAnnotations.push(l.tensorflow.magenta.NoteSequence.SectionAnnotation.decode(e,e.uint32()));break;case 21:r.sectionGroups&&r.sectionGroups.length||(r.sectionGroups=[]),r.sectionGroups.push(l.tensorflow.magenta.NoteSequence.SectionGroup.decode(e,e.uint32()));break;case 15:r.quantizationInfo=l.tensorflow.magenta.NoteSequence.QuantizationInfo.decode(e,e.uint32());break;case 17:r.subsequenceInfo=l.tensorflow.magenta.NoteSequence.SubsequenceInfo.decode(e,e.uint32());break;case 19:r.sequenceMetadata=l.tensorflow.magenta.SequenceMetadata.decode(e,e.uint32());break;default:e.skipType(7&s)}}return r},e.decodeDelimited=function(e){return e instanceof o||(e=new o(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";if(null!=e.id&&e.hasOwnProperty("id")&&!u.isString(e.id))return"id: string expected";if(null!=e.filename&&e.hasOwnProperty("filename")&&!u.isString(e.filename))return"filename: string expected";if(null!=e.referenceNumber&&e.hasOwnProperty("referenceNumber")&&!(u.isInteger(e.referenceNumber)||e.referenceNumber&&u.isInteger(e.referenceNumber.low)&&u.isInteger(e.referenceNumber.high)))return"referenceNumber: integer|Long expected";if(null!=e.collectionName&&e.hasOwnProperty("collectionName")&&!u.isString(e.collectionName))return"collectionName: string expected";if(null!=e.ticksPerQuarter&&e.hasOwnProperty("ticksPerQuarter")&&!u.isInteger(e.ticksPerQuarter))return"ticksPerQuarter: integer expected";if(null!=e.timeSignatures&&e.hasOwnProperty("timeSignatures")){if(!Array.isArray(e.timeSignatures))return"timeSignatures: array expected";for(var t=0;t<e.timeSignatures.length;++t)if(n=l.tensorflow.magenta.NoteSequence.TimeSignature.verify(e.timeSignatures[t]))return"timeSignatures."+n}if(null!=e.keySignatures&&e.hasOwnProperty("keySignatures")){if(!Array.isArray(e.keySignatures))return"keySignatures: array expected";for(t=0;t<e.keySignatures.length;++t)if(n=l.tensorflow.magenta.NoteSequence.KeySignature.verify(e.keySignatures[t]))return"keySignatures."+n}if(null!=e.tempos&&e.hasOwnProperty("tempos")){if(!Array.isArray(e.tempos))return"tempos: array expected";for(t=0;t<e.tempos.length;++t)if(n=l.tensorflow.magenta.NoteSequence.Tempo.verify(e.tempos[t]))return"tempos."+n}if(null!=e.notes&&e.hasOwnProperty("notes")){if(!Array.isArray(e.notes))return"notes: array expected";for(t=0;t<e.notes.length;++t)if(n=l.tensorflow.magenta.NoteSequence.Note.verify(e.notes[t]))return"notes."+n}if(null!=e.totalTime&&e.hasOwnProperty("totalTime")&&"number"!=typeof e.totalTime)return"totalTime: number expected";if(null!=e.totalQuantizedSteps&&e.hasOwnProperty("totalQuantizedSteps")&&!(u.isInteger(e.totalQuantizedSteps)||e.totalQuantizedSteps&&u.isInteger(e.totalQuantizedSteps.low)&&u.isInteger(e.totalQuantizedSteps.high)))return"totalQuantizedSteps: integer|Long expected";if(null!=e.pitchBends&&e.hasOwnProperty("pitchBends")){if(!Array.isArray(e.pitchBends))return"pitchBends: array expected";for(t=0;t<e.pitchBends.length;++t)if(n=l.tensorflow.magenta.NoteSequence.PitchBend.verify(e.pitchBends[t]))return"pitchBends."+n}if(null!=e.controlChanges&&e.hasOwnProperty("controlChanges")){if(!Array.isArray(e.controlChanges))return"controlChanges: array expected";for(t=0;t<e.controlChanges.length;++t)if(n=l.tensorflow.magenta.NoteSequence.ControlChange.verify(e.controlChanges[t]))return"controlChanges."+n}if(null!=e.partInfos&&e.hasOwnProperty("partInfos")){if(!Array.isArray(e.partInfos))return"partInfos: array expected";for(t=0;t<e.partInfos.length;++t)if(n=l.tensorflow.magenta.NoteSequence.PartInfo.verify(e.partInfos[t]))return"partInfos."+n}if(null!=e.sourceInfo&&e.hasOwnProperty("sourceInfo")&&(n=l.tensorflow.magenta.NoteSequence.SourceInfo.verify(e.sourceInfo)))return"sourceInfo."+n;if(null!=e.textAnnotations&&e.hasOwnProperty("textAnnotations")){if(!Array.isArray(e.textAnnotations))return"textAnnotations: array expected";for(t=0;t<e.textAnnotations.length;++t)if(n=l.tensorflow.magenta.NoteSequence.TextAnnotation.verify(e.textAnnotations[t]))return"textAnnotations."+n}if(null!=e.sectionAnnotations&&e.hasOwnProperty("sectionAnnotations")){if(!Array.isArray(e.sectionAnnotations))return"sectionAnnotations: array expected";for(t=0;t<e.sectionAnnotations.length;++t)if(n=l.tensorflow.magenta.NoteSequence.SectionAnnotation.verify(e.sectionAnnotations[t]))return"sectionAnnotations."+n}if(null!=e.sectionGroups&&e.hasOwnProperty("sectionGroups")){if(!Array.isArray(e.sectionGroups))return"sectionGroups: array expected";for(t=0;t<e.sectionGroups.length;++t){var n;if(n=l.tensorflow.magenta.NoteSequence.SectionGroup.verify(e.sectionGroups[t]))return"sectionGroups."+n}}return null!=e.quantizationInfo&&e.hasOwnProperty("quantizationInfo")&&(n=l.tensorflow.magenta.NoteSequence.QuantizationInfo.verify(e.quantizationInfo))?"quantizationInfo."+n:null!=e.subsequenceInfo&&e.hasOwnProperty("subsequenceInfo")&&(n=l.tensorflow.magenta.NoteSequence.SubsequenceInfo.verify(e.subsequenceInfo))?"subsequenceInfo."+n:null!=e.sequenceMetadata&&e.hasOwnProperty("sequenceMetadata")&&(n=l.tensorflow.magenta.SequenceMetadata.verify(e.sequenceMetadata))?"sequenceMetadata."+n:null},e.fromObject=function(e){if(e instanceof l.tensorflow.magenta.NoteSequence)return e;var t=new l.tensorflow.magenta.NoteSequence;if(null!=e.id&&(t.id=String(e.id)),null!=e.filename&&(t.filename=String(e.filename)),null!=e.referenceNumber&&(u.Long?(t.referenceNumber=u.Long.fromValue(e.referenceNumber)).unsigned=!1:"string"==typeof e.referenceNumber?t.referenceNumber=parseInt(e.referenceNumber,10):"number"==typeof e.referenceNumber?t.referenceNumber=e.referenceNumber:"object"==typeof e.referenceNumber&&(t.referenceNumber=new u.LongBits(e.referenceNumber.low>>>0,e.referenceNumber.high>>>0).toNumber())),null!=e.collectionName&&(t.collectionName=String(e.collectionName)),null!=e.ticksPerQuarter&&(t.ticksPerQuarter=0|e.ticksPerQuarter),e.timeSignatures){if(!Array.isArray(e.timeSignatures))throw TypeError(".tensorflow.magenta.NoteSequence.timeSignatures: array expected");t.timeSignatures=[];for(var n=0;n<e.timeSignatures.length;++n){if("object"!=typeof e.timeSignatures[n])throw TypeError(".tensorflow.magenta.NoteSequence.timeSignatures: object expected");t.timeSignatures[n]=l.tensorflow.magenta.NoteSequence.TimeSignature.fromObject(e.timeSignatures[n])}}if(e.keySignatures){if(!Array.isArray(e.keySignatures))throw TypeError(".tensorflow.magenta.NoteSequence.keySignatures: array expected");for(t.keySignatures=[],n=0;n<e.keySignatures.length;++n){if("object"!=typeof e.keySignatures[n])throw TypeError(".tensorflow.magenta.NoteSequence.keySignatures: object expected");t.keySignatures[n]=l.tensorflow.magenta.NoteSequence.KeySignature.fromObject(e.keySignatures[n])}}if(e.tempos){if(!Array.isArray(e.tempos))throw TypeError(".tensorflow.magenta.NoteSequence.tempos: array expected");for(t.tempos=[],n=0;n<e.tempos.length;++n){if("object"!=typeof e.tempos[n])throw TypeError(".tensorflow.magenta.NoteSequence.tempos: object expected");t.tempos[n]=l.tensorflow.magenta.NoteSequence.Tempo.fromObject(e.tempos[n])}}if(e.notes){if(!Array.isArray(e.notes))throw TypeError(".tensorflow.magenta.NoteSequence.notes: array expected");for(t.notes=[],n=0;n<e.notes.length;++n){if("object"!=typeof e.notes[n])throw TypeError(".tensorflow.magenta.NoteSequence.notes: object expected");t.notes[n]=l.tensorflow.magenta.NoteSequence.Note.fromObject(e.notes[n])}}if(null!=e.totalTime&&(t.totalTime=Number(e.totalTime)),null!=e.totalQuantizedSteps&&(u.Long?(t.totalQuantizedSteps=u.Long.fromValue(e.totalQuantizedSteps)).unsigned=!1:"string"==typeof e.totalQuantizedSteps?t.totalQuantizedSteps=parseInt(e.totalQuantizedSteps,10):"number"==typeof e.totalQuantizedSteps?t.totalQuantizedSteps=e.totalQuantizedSteps:"object"==typeof e.totalQuantizedSteps&&(t.totalQuantizedSteps=new u.LongBits(e.totalQuantizedSteps.low>>>0,e.totalQuantizedSteps.high>>>0).toNumber())),e.pitchBends){if(!Array.isArray(e.pitchBends))throw TypeError(".tensorflow.magenta.NoteSequence.pitchBends: array expected");for(t.pitchBends=[],n=0;n<e.pitchBends.length;++n){if("object"!=typeof e.pitchBends[n])throw TypeError(".tensorflow.magenta.NoteSequence.pitchBends: object expected");t.pitchBends[n]=l.tensorflow.magenta.NoteSequence.PitchBend.fromObject(e.pitchBends[n])}}if(e.controlChanges){if(!Array.isArray(e.controlChanges))throw TypeError(".tensorflow.magenta.NoteSequence.controlChanges: array expected");for(t.controlChanges=[],n=0;n<e.controlChanges.length;++n){if("object"!=typeof e.controlChanges[n])throw TypeError(".tensorflow.magenta.NoteSequence.controlChanges: object expected");t.controlChanges[n]=l.tensorflow.magenta.NoteSequence.ControlChange.fromObject(e.controlChanges[n])}}if(e.partInfos){if(!Array.isArray(e.partInfos))throw TypeError(".tensorflow.magenta.NoteSequence.partInfos: array expected");for(t.partInfos=[],n=0;n<e.partInfos.length;++n){if("object"!=typeof e.partInfos[n])throw TypeError(".tensorflow.magenta.NoteSequence.partInfos: object expected");t.partInfos[n]=l.tensorflow.magenta.NoteSequence.PartInfo.fromObject(e.partInfos[n])}}if(null!=e.sourceInfo){if("object"!=typeof e.sourceInfo)throw TypeError(".tensorflow.magenta.NoteSequence.sourceInfo: object expected");t.sourceInfo=l.tensorflow.magenta.NoteSequence.SourceInfo.fromObject(e.sourceInfo)}if(e.textAnnotations){if(!Array.isArray(e.textAnnotations))throw TypeError(".tensorflow.magenta.NoteSequence.textAnnotations: array expected");for(t.textAnnotations=[],n=0;n<e.textAnnotations.length;++n){if("object"!=typeof e.textAnnotations[n])throw TypeError(".tensorflow.magenta.NoteSequence.textAnnotations: object expected");t.textAnnotations[n]=l.tensorflow.magenta.NoteSequence.TextAnnotation.fromObject(e.textAnnotations[n])}}if(e.sectionAnnotations){if(!Array.isArray(e.sectionAnnotations))throw TypeError(".tensorflow.magenta.NoteSequence.sectionAnnotations: array expected");for(t.sectionAnnotations=[],n=0;n<e.sectionAnnotations.length;++n){if("object"!=typeof e.sectionAnnotations[n])throw TypeError(".tensorflow.magenta.NoteSequence.sectionAnnotations: object expected");t.sectionAnnotations[n]=l.tensorflow.magenta.NoteSequence.SectionAnnotation.fromObject(e.sectionAnnotations[n])}}if(e.sectionGroups){if(!Array.isArray(e.sectionGroups))throw TypeError(".tensorflow.magenta.NoteSequence.sectionGroups: array expected");for(t.sectionGroups=[],n=0;n<e.sectionGroups.length;++n){if("object"!=typeof e.sectionGroups[n])throw TypeError(".tensorflow.magenta.NoteSequence.sectionGroups: object expected");t.sectionGroups[n]=l.tensorflow.magenta.NoteSequence.SectionGroup.fromObject(e.sectionGroups[n])}}if(null!=e.quantizationInfo){if("object"!=typeof e.quantizationInfo)throw TypeError(".tensorflow.magenta.NoteSequence.quantizationInfo: object expected");t.quantizationInfo=l.tensorflow.magenta.NoteSequence.QuantizationInfo.fromObject(e.quantizationInfo)}if(null!=e.subsequenceInfo){if("object"!=typeof e.subsequenceInfo)throw TypeError(".tensorflow.magenta.NoteSequence.subsequenceInfo: object expected");t.subsequenceInfo=l.tensorflow.magenta.NoteSequence.SubsequenceInfo.fromObject(e.subsequenceInfo)}if(null!=e.sequenceMetadata){if("object"!=typeof e.sequenceMetadata)throw TypeError(".tensorflow.magenta.NoteSequence.sequenceMetadata: object expected");t.sequenceMetadata=l.tensorflow.magenta.SequenceMetadata.fromObject(e.sequenceMetadata)}return t},e.toObject=function(e,t){t||(t={});var n={};if((t.arrays||t.defaults)&&(n.timeSignatures=[],n.keySignatures=[],n.tempos=[],n.notes=[],n.pitchBends=[],n.controlChanges=[],n.partInfos=[],n.textAnnotations=[],n.sectionAnnotations=[],n.sectionGroups=[]),t.defaults){if(n.id="",n.filename="",n.collectionName="",n.ticksPerQuarter=0,n.totalTime=0,n.sourceInfo=null,n.quantizationInfo=null,u.Long){var r=new u.Long(0,0,!1);n.totalQuantizedSteps=t.longs===String?r.toString():t.longs===Number?r.toNumber():r}else n.totalQuantizedSteps=t.longs===String?"0":0;n.subsequenceInfo=null,u.Long?(r=new u.Long(0,0,!1),n.referenceNumber=t.longs===String?r.toString():t.longs===Number?r.toNumber():r):n.referenceNumber=t.longs===String?"0":0,n.sequenceMetadata=null}if(null!=e.id&&e.hasOwnProperty("id")&&(n.id=e.id),null!=e.filename&&e.hasOwnProperty("filename")&&(n.filename=e.filename),null!=e.collectionName&&e.hasOwnProperty("collectionName")&&(n.collectionName=e.collectionName),null!=e.ticksPerQuarter&&e.hasOwnProperty("ticksPerQuarter")&&(n.ticksPerQuarter=e.ticksPerQuarter),e.timeSignatures&&e.timeSignatures.length){n.timeSignatures=[];for(var s=0;s<e.timeSignatures.length;++s)n.timeSignatures[s]=l.tensorflow.magenta.NoteSequence.TimeSignature.toObject(e.timeSignatures[s],t)}if(e.keySignatures&&e.keySignatures.length)for(n.keySignatures=[],s=0;s<e.keySignatures.length;++s)n.keySignatures[s]=l.tensorflow.magenta.NoteSequence.KeySignature.toObject(e.keySignatures[s],t);if(e.tempos&&e.tempos.length)for(n.tempos=[],s=0;s<e.tempos.length;++s)n.tempos[s]=l.tensorflow.magenta.NoteSequence.Tempo.toObject(e.tempos[s],t);if(e.notes&&e.notes.length)for(n.notes=[],s=0;s<e.notes.length;++s)n.notes[s]=l.tensorflow.magenta.NoteSequence.Note.toObject(e.notes[s],t);if(null!=e.totalTime&&e.hasOwnProperty("totalTime")&&(n.totalTime=t.json&&!isFinite(e.totalTime)?String(e.totalTime):e.totalTime),e.pitchBends&&e.pitchBends.length)for(n.pitchBends=[],s=0;s<e.pitchBends.length;++s)n.pitchBends[s]=l.tensorflow.magenta.NoteSequence.PitchBend.toObject(e.pitchBends[s],t);if(e.controlChanges&&e.controlChanges.length)for(n.controlChanges=[],s=0;s<e.controlChanges.length;++s)n.controlChanges[s]=l.tensorflow.magenta.NoteSequence.ControlChange.toObject(e.controlChanges[s],t);if(e.partInfos&&e.partInfos.length)for(n.partInfos=[],s=0;s<e.partInfos.length;++s)n.partInfos[s]=l.tensorflow.magenta.NoteSequence.PartInfo.toObject(e.partInfos[s],t);if(null!=e.sourceInfo&&e.hasOwnProperty("sourceInfo")&&(n.sourceInfo=l.tensorflow.magenta.NoteSequence.SourceInfo.toObject(e.sourceInfo,t)),e.textAnnotations&&e.textAnnotations.length)for(n.textAnnotations=[],s=0;s<e.textAnnotations.length;++s)n.textAnnotations[s]=l.tensorflow.magenta.NoteSequence.TextAnnotation.toObject(e.textAnnotations[s],t);if(null!=e.quantizationInfo&&e.hasOwnProperty("quantizationInfo")&&(n.quantizationInfo=l.tensorflow.magenta.NoteSequence.QuantizationInfo.toObject(e.quantizationInfo,t)),null!=e.totalQuantizedSteps&&e.hasOwnProperty("totalQuantizedSteps")&&("number"==typeof e.totalQuantizedSteps?n.totalQuantizedSteps=t.longs===String?String(e.totalQuantizedSteps):e.totalQuantizedSteps:n.totalQuantizedSteps=t.longs===String?u.Long.prototype.toString.call(e.totalQuantizedSteps):t.longs===Number?new u.LongBits(e.totalQuantizedSteps.low>>>0,e.totalQuantizedSteps.high>>>0).toNumber():e.totalQuantizedSteps),null!=e.subsequenceInfo&&e.hasOwnProperty("subsequenceInfo")&&(n.subsequenceInfo=l.tensorflow.magenta.NoteSequence.SubsequenceInfo.toObject(e.subsequenceInfo,t)),null!=e.referenceNumber&&e.hasOwnProperty("referenceNumber")&&("number"==typeof e.referenceNumber?n.referenceNumber=t.longs===String?String(e.referenceNumber):e.referenceNumber:n.referenceNumber=t.longs===String?u.Long.prototype.toString.call(e.referenceNumber):t.longs===Number?new u.LongBits(e.referenceNumber.low>>>0,e.referenceNumber.high>>>0).toNumber():e.referenceNumber),null!=e.sequenceMetadata&&e.hasOwnProperty("sequenceMetadata")&&(n.sequenceMetadata=l.tensorflow.magenta.SequenceMetadata.toObject(e.sequenceMetadata,t)),e.sectionAnnotations&&e.sectionAnnotations.length)for(n.sectionAnnotations=[],s=0;s<e.sectionAnnotations.length;++s)n.sectionAnnotations[s]=l.tensorflow.magenta.NoteSequence.SectionAnnotation.toObject(e.sectionAnnotations[s],t);if(e.sectionGroups&&e.sectionGroups.length)for(n.sectionGroups=[],s=0;s<e.sectionGroups.length;++s)n.sectionGroups[s]=l.tensorflow.magenta.NoteSequence.SectionGroup.toObject(e.sectionGroups[s],t);return n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e.Note=function(){function e(e){if(e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.pitch=0,e.prototype.pitchName=0,e.prototype.velocity=0,e.prototype.startTime=0,e.prototype.quantizedStartStep=u.Long?u.Long.fromBits(0,0,!1):0,e.prototype.endTime=0,e.prototype.quantizedEndStep=u.Long?u.Long.fromBits(0,0,!1):0,e.prototype.numerator=0,e.prototype.denominator=0,e.prototype.instrument=0,e.prototype.program=0,e.prototype.isDrum=!1,e.prototype.part=0,e.prototype.voice=0,e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=i.create()),null!=e.pitch&&e.hasOwnProperty("pitch")&&t.uint32(8).int32(e.pitch),null!=e.velocity&&e.hasOwnProperty("velocity")&&t.uint32(16).int32(e.velocity),null!=e.startTime&&e.hasOwnProperty("startTime")&&t.uint32(25).double(e.startTime),null!=e.endTime&&e.hasOwnProperty("endTime")&&t.uint32(33).double(e.endTime),null!=e.numerator&&e.hasOwnProperty("numerator")&&t.uint32(40).int32(e.numerator),null!=e.denominator&&e.hasOwnProperty("denominator")&&t.uint32(48).int32(e.denominator),null!=e.instrument&&e.hasOwnProperty("instrument")&&t.uint32(56).int32(e.instrument),null!=e.program&&e.hasOwnProperty("program")&&t.uint32(64).int32(e.program),null!=e.isDrum&&e.hasOwnProperty("isDrum")&&t.uint32(72).bool(e.isDrum),null!=e.part&&e.hasOwnProperty("part")&&t.uint32(80).int32(e.part),null!=e.pitchName&&e.hasOwnProperty("pitchName")&&t.uint32(88).int32(e.pitchName),null!=e.voice&&e.hasOwnProperty("voice")&&t.uint32(96).int32(e.voice),null!=e.quantizedStartStep&&e.hasOwnProperty("quantizedStartStep")&&t.uint32(104).int64(e.quantizedStartStep),null!=e.quantizedEndStep&&e.hasOwnProperty("quantizedEndStep")&&t.uint32(112).int64(e.quantizedEndStep),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof o||(e=o.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new l.tensorflow.magenta.NoteSequence.Note;e.pos<n;){var s=e.uint32();switch(s>>>3){case 1:r.pitch=e.int32();break;case 11:r.pitchName=e.int32();break;case 2:r.velocity=e.int32();break;case 3:r.startTime=e.double();break;case 13:r.quantizedStartStep=u.Long?e.int64().toNumber():e.int64();break;case 4:r.endTime=e.double();break;case 14:r.quantizedEndStep=u.Long?e.int64().toNumber():e.int64();break;case 5:r.numerator=e.int32();break;case 6:r.denominator=e.int32();break;case 7:r.instrument=e.int32();break;case 8:r.program=e.int32();break;case 9:r.isDrum=e.bool();break;case 10:r.part=e.int32();break;case 12:r.voice=e.int32();break;default:e.skipType(7&s)}}return r},e.decodeDelimited=function(e){return e instanceof o||(e=new o(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";if(null!=e.pitch&&e.hasOwnProperty("pitch")&&!u.isInteger(e.pitch))return"pitch: integer expected";if(null!=e.pitchName&&e.hasOwnProperty("pitchName"))switch(e.pitchName){default:return"pitchName: enum value expected";case 0:case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:case 13:case 14:case 15:case 16:case 17:case 18:case 19:case 20:case 21:case 22:case 23:case 24:case 25:case 26:case 27:case 28:case 29:case 30:case 31:case 32:case 33:case 34:case 35:}return null!=e.velocity&&e.hasOwnProperty("velocity")&&!u.isInteger(e.velocity)?"velocity: integer expected":null!=e.startTime&&e.hasOwnProperty("startTime")&&"number"!=typeof e.startTime?"startTime: number expected":null!=e.quantizedStartStep&&e.hasOwnProperty("quantizedStartStep")&&!(u.isInteger(e.quantizedStartStep)||e.quantizedStartStep&&u.isInteger(e.quantizedStartStep.low)&&u.isInteger(e.quantizedStartStep.high))?"quantizedStartStep: integer|Long expected":null!=e.endTime&&e.hasOwnProperty("endTime")&&"number"!=typeof e.endTime?"endTime: number expected":null!=e.quantizedEndStep&&e.hasOwnProperty("quantizedEndStep")&&!(u.isInteger(e.quantizedEndStep)||e.quantizedEndStep&&u.isInteger(e.quantizedEndStep.low)&&u.isInteger(e.quantizedEndStep.high))?"quantizedEndStep: integer|Long expected":null!=e.numerator&&e.hasOwnProperty("numerator")&&!u.isInteger(e.numerator)?"numerator: integer expected":null!=e.denominator&&e.hasOwnProperty("denominator")&&!u.isInteger(e.denominator)?"denominator: integer expected":null!=e.instrument&&e.hasOwnProperty("instrument")&&!u.isInteger(e.instrument)?"instrument: integer expected":null!=e.program&&e.hasOwnProperty("program")&&!u.isInteger(e.program)?"program: integer expected":null!=e.isDrum&&e.hasOwnProperty("isDrum")&&"boolean"!=typeof e.isDrum?"isDrum: boolean expected":null!=e.part&&e.hasOwnProperty("part")&&!u.isInteger(e.part)?"part: integer expected":null!=e.voice&&e.hasOwnProperty("voice")&&!u.isInteger(e.voice)?"voice: integer expected":null},e.fromObject=function(e){if(e instanceof l.tensorflow.magenta.NoteSequence.Note)return e;var t=new l.tensorflow.magenta.NoteSequence.Note;switch(null!=e.pitch&&(t.pitch=0|e.pitch),e.pitchName){case"UNKNOWN_PITCH_NAME":case 0:t.pitchName=0;break;case"F_FLAT_FLAT":case 1:t.pitchName=1;break;case"C_FLAT_FLAT":case 2:t.pitchName=2;break;case"G_FLAT_FLAT":case 3:t.pitchName=3;break;case"D_FLAT_FLAT":case 4:t.pitchName=4;break;case"A_FLAT_FLAT":case 5:t.pitchName=5;break;case"E_FLAT_FLAT":case 6:t.pitchName=6;break;case"B_FLAT_FLAT":case 7:t.pitchName=7;break;case"F_FLAT":case 8:t.pitchName=8;break;case"C_FLAT":case 9:t.pitchName=9;break;case"G_FLAT":case 10:t.pitchName=10;break;case"D_FLAT":case 11:t.pitchName=11;break;case"A_FLAT":case 12:t.pitchName=12;break;case"E_FLAT":case 13:t.pitchName=13;break;case"B_FLAT":case 14:t.pitchName=14;break;case"F":case 15:t.pitchName=15;break;case"C":case 16:t.pitchName=16;break;case"G":case 17:t.pitchName=17;break;case"D":case 18:t.pitchName=18;break;case"A":case 19:t.pitchName=19;break;case"E":case 20:t.pitchName=20;break;case"B":case 21:t.pitchName=21;break;case"F_SHARP":case 22:t.pitchName=22;break;case"C_SHARP":case 23:t.pitchName=23;break;case"G_SHARP":case 24:t.pitchName=24;break;case"D_SHARP":case 25:t.pitchName=25;break;case"A_SHARP":case 26:t.pitchName=26;break;case"E_SHARP":case 27:t.pitchName=27;break;case"B_SHARP":case 28:t.pitchName=28;break;case"F_SHARP_SHARP":case 29:t.pitchName=29;break;case"C_SHARP_SHARP":case 30:t.pitchName=30;break;case"G_SHARP_SHARP":case 31:t.pitchName=31;break;case"D_SHARP_SHARP":case 32:t.pitchName=32;break;case"A_SHARP_SHARP":case 33:t.pitchName=33;break;case"E_SHARP_SHARP":case 34:t.pitchName=34;break;case"B_SHARP_SHARP":case 35:t.pitchName=35}return null!=e.velocity&&(t.velocity=0|e.velocity),null!=e.startTime&&(t.startTime=Number(e.startTime)),null!=e.quantizedStartStep&&(u.Long?(t.quantizedStartStep=u.Long.fromValue(e.quantizedStartStep)).unsigned=!1:"string"==typeof e.quantizedStartStep?t.quantizedStartStep=parseInt(e.quantizedStartStep,10):"number"==typeof e.quantizedStartStep?t.quantizedStartStep=e.quantizedStartStep:"object"==typeof e.quantizedStartStep&&(t.quantizedStartStep=new u.LongBits(e.quantizedStartStep.low>>>0,e.quantizedStartStep.high>>>0).toNumber())),null!=e.endTime&&(t.endTime=Number(e.endTime)),null!=e.quantizedEndStep&&(u.Long?(t.quantizedEndStep=u.Long.fromValue(e.quantizedEndStep)).unsigned=!1:"string"==typeof e.quantizedEndStep?t.quantizedEndStep=parseInt(e.quantizedEndStep,10):"number"==typeof e.quantizedEndStep?t.quantizedEndStep=e.quantizedEndStep:"object"==typeof e.quantizedEndStep&&(t.quantizedEndStep=new u.LongBits(e.quantizedEndStep.low>>>0,e.quantizedEndStep.high>>>0).toNumber())),null!=e.numerator&&(t.numerator=0|e.numerator),null!=e.denominator&&(t.denominator=0|e.denominator),null!=e.instrument&&(t.instrument=0|e.instrument),null!=e.program&&(t.program=0|e.program),null!=e.isDrum&&(t.isDrum=Boolean(e.isDrum)),null!=e.part&&(t.part=0|e.part),null!=e.voice&&(t.voice=0|e.voice),t},e.toObject=function(e,t){t||(t={});var n={};if(t.defaults){if(n.pitch=0,n.velocity=0,n.startTime=0,n.endTime=0,n.numerator=0,n.denominator=0,n.instrument=0,n.program=0,n.isDrum=!1,n.part=0,n.pitchName=t.enums===String?"UNKNOWN_PITCH_NAME":0,n.voice=0,u.Long){var r=new u.Long(0,0,!1);n.quantizedStartStep=t.longs===String?r.toString():t.longs===Number?r.toNumber():r}else n.quantizedStartStep=t.longs===String?"0":0;u.Long?(r=new u.Long(0,0,!1),n.quantizedEndStep=t.longs===String?r.toString():t.longs===Number?r.toNumber():r):n.quantizedEndStep=t.longs===String?"0":0}return null!=e.pitch&&e.hasOwnProperty("pitch")&&(n.pitch=e.pitch),null!=e.velocity&&e.hasOwnProperty("velocity")&&(n.velocity=e.velocity),null!=e.startTime&&e.hasOwnProperty("startTime")&&(n.startTime=t.json&&!isFinite(e.startTime)?String(e.startTime):e.startTime),null!=e.endTime&&e.hasOwnProperty("endTime")&&(n.endTime=t.json&&!isFinite(e.endTime)?String(e.endTime):e.endTime),null!=e.numerator&&e.hasOwnProperty("numerator")&&(n.numerator=e.numerator),null!=e.denominator&&e.hasOwnProperty("denominator")&&(n.denominator=e.denominator),null!=e.instrument&&e.hasOwnProperty("instrument")&&(n.instrument=e.instrument),null!=e.program&&e.hasOwnProperty("program")&&(n.program=e.program),null!=e.isDrum&&e.hasOwnProperty("isDrum")&&(n.isDrum=e.isDrum),null!=e.part&&e.hasOwnProperty("part")&&(n.part=e.part),null!=e.pitchName&&e.hasOwnProperty("pitchName")&&(n.pitchName=t.enums===String?l.tensorflow.magenta.NoteSequence.PitchName[e.pitchName]:e.pitchName),null!=e.voice&&e.hasOwnProperty("voice")&&(n.voice=e.voice),null!=e.quantizedStartStep&&e.hasOwnProperty("quantizedStartStep")&&("number"==typeof e.quantizedStartStep?n.quantizedStartStep=t.longs===String?String(e.quantizedStartStep):e.quantizedStartStep:n.quantizedStartStep=t.longs===String?u.Long.prototype.toString.call(e.quantizedStartStep):t.longs===Number?new u.LongBits(e.quantizedStartStep.low>>>0,e.quantizedStartStep.high>>>0).toNumber():e.quantizedStartStep),null!=e.quantizedEndStep&&e.hasOwnProperty("quantizedEndStep")&&("number"==typeof e.quantizedEndStep?n.quantizedEndStep=t.longs===String?String(e.quantizedEndStep):e.quantizedEndStep:n.quantizedEndStep=t.longs===String?u.Long.prototype.toString.call(e.quantizedEndStep):t.longs===Number?new u.LongBits(e.quantizedEndStep.low>>>0,e.quantizedEndStep.high>>>0).toNumber():e.quantizedEndStep),n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e}(),e.PitchName=(t={},(n=Object.create(t))[t[0]="UNKNOWN_PITCH_NAME"]=0,n[t[1]="F_FLAT_FLAT"]=1,n[t[2]="C_FLAT_FLAT"]=2,n[t[3]="G_FLAT_FLAT"]=3,n[t[4]="D_FLAT_FLAT"]=4,n[t[5]="A_FLAT_FLAT"]=5,n[t[6]="E_FLAT_FLAT"]=6,n[t[7]="B_FLAT_FLAT"]=7,n[t[8]="F_FLAT"]=8,n[t[9]="C_FLAT"]=9,n[t[10]="G_FLAT"]=10,n[t[11]="D_FLAT"]=11,n[t[12]="A_FLAT"]=12,n[t[13]="E_FLAT"]=13,n[t[14]="B_FLAT"]=14,n[t[15]="F"]=15,n[t[16]="C"]=16,n[t[17]="G"]=17,n[t[18]="D"]=18,n[t[19]="A"]=19,n[t[20]="E"]=20,n[t[21]="B"]=21,n[t[22]="F_SHARP"]=22,n[t[23]="C_SHARP"]=23,n[t[24]="G_SHARP"]=24,n[t[25]="D_SHARP"]=25,n[t[26]="A_SHARP"]=26,n[t[27]="E_SHARP"]=27,n[t[28]="B_SHARP"]=28,n[t[29]="F_SHARP_SHARP"]=29,n[t[30]="C_SHARP_SHARP"]=30,n[t[31]="G_SHARP_SHARP"]=31,n[t[32]="D_SHARP_SHARP"]=32,n[t[33]="A_SHARP_SHARP"]=33,n[t[34]="E_SHARP_SHARP"]=34,n[t[35]="B_SHARP_SHARP"]=35,n),e.TimeSignature=function(){function e(e){if(e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.time=0,e.prototype.numerator=0,e.prototype.denominator=0,e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=i.create()),null!=e.time&&e.hasOwnProperty("time")&&t.uint32(9).double(e.time),null!=e.numerator&&e.hasOwnProperty("numerator")&&t.uint32(16).int32(e.numerator),null!=e.denominator&&e.hasOwnProperty("denominator")&&t.uint32(24).int32(e.denominator),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof o||(e=o.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new l.tensorflow.magenta.NoteSequence.TimeSignature;e.pos<n;){var s=e.uint32();switch(s>>>3){case 1:r.time=e.double();break;case 2:r.numerator=e.int32();break;case 3:r.denominator=e.int32();break;default:e.skipType(7&s)}}return r},e.decodeDelimited=function(e){return e instanceof o||(e=new o(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!=typeof e||null===e?"object expected":null!=e.time&&e.hasOwnProperty("time")&&"number"!=typeof e.time?"time: number expected":null!=e.numerator&&e.hasOwnProperty("numerator")&&!u.isInteger(e.numerator)?"numerator: integer expected":null!=e.denominator&&e.hasOwnProperty("denominator")&&!u.isInteger(e.denominator)?"denominator: integer expected":null},e.fromObject=function(e){if(e instanceof l.tensorflow.magenta.NoteSequence.TimeSignature)return e;var t=new l.tensorflow.magenta.NoteSequence.TimeSignature;return null!=e.time&&(t.time=Number(e.time)),null!=e.numerator&&(t.numerator=0|e.numerator),null!=e.denominator&&(t.denominator=0|e.denominator),t},e.toObject=function(e,t){t||(t={});var n={};return t.defaults&&(n.time=0,n.numerator=0,n.denominator=0),null!=e.time&&e.hasOwnProperty("time")&&(n.time=t.json&&!isFinite(e.time)?String(e.time):e.time),null!=e.numerator&&e.hasOwnProperty("numerator")&&(n.numerator=e.numerator),null!=e.denominator&&e.hasOwnProperty("denominator")&&(n.denominator=e.denominator),n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e}(),e.KeySignature=function(){function e(e){if(e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.time=0,e.prototype.key=0,e.prototype.mode=0,e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=i.create()),null!=e.time&&e.hasOwnProperty("time")&&t.uint32(9).double(e.time),null!=e.key&&e.hasOwnProperty("key")&&t.uint32(16).int32(e.key),null!=e.mode&&e.hasOwnProperty("mode")&&t.uint32(24).int32(e.mode),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof o||(e=o.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new l.tensorflow.magenta.NoteSequence.KeySignature;e.pos<n;){var s=e.uint32();switch(s>>>3){case 1:r.time=e.double();break;case 2:r.key=e.int32();break;case 3:r.mode=e.int32();break;default:e.skipType(7&s)}}return r},e.decodeDelimited=function(e){return e instanceof o||(e=new o(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";if(null!=e.time&&e.hasOwnProperty("time")&&"number"!=typeof e.time)return"time: number expected";if(null!=e.key&&e.hasOwnProperty("key"))switch(e.key){default:return"key: enum value expected";case 0:case 1:case 1:case 2:case 3:case 3:case 4:case 5:case 6:case 6:case 7:case 8:case 8:case 9:case 10:case 10:case 11:}if(null!=e.mode&&e.hasOwnProperty("mode"))switch(e.mode){default:return"mode: enum value expected";case 0:case 1:case 2:case 3:case 4:case 5:case 6:case 7:}return null},e.fromObject=function(e){if(e instanceof l.tensorflow.magenta.NoteSequence.KeySignature)return e;var t=new l.tensorflow.magenta.NoteSequence.KeySignature;switch(null!=e.time&&(t.time=Number(e.time)),e.key){case"C":case 0:t.key=0;break;case"C_SHARP":case 1:t.key=1;break;case"D_FLAT":case 1:t.key=1;break;case"D":case 2:t.key=2;break;case"D_SHARP":case 3:t.key=3;break;case"E_FLAT":case 3:t.key=3;break;case"E":case 4:t.key=4;break;case"F":case 5:t.key=5;break;case"F_SHARP":case 6:t.key=6;break;case"G_FLAT":case 6:t.key=6;break;case"G":case 7:t.key=7;break;case"G_SHARP":case 8:t.key=8;break;case"A_FLAT":case 8:t.key=8;break;case"A":case 9:t.key=9;break;case"A_SHARP":case 10:t.key=10;break;case"B_FLAT":case 10:t.key=10;break;case"B":case 11:t.key=11}switch(e.mode){case"MAJOR":case 0:t.mode=0;break;case"MINOR":case 1:t.mode=1;break;case"NOT_SPECIFIED":case 2:t.mode=2;break;case"MIXOLYDIAN":case 3:t.mode=3;break;case"DORIAN":case 4:t.mode=4;break;case"PHRYGIAN":case 5:t.mode=5;break;case"LYDIAN":case 6:t.mode=6;break;case"LOCRIAN":case 7:t.mode=7}return t},e.toObject=function(e,t){t||(t={});var n={};return t.defaults&&(n.time=0,n.key=t.enums===String?"C":0,n.mode=t.enums===String?"MAJOR":0),null!=e.time&&e.hasOwnProperty("time")&&(n.time=t.json&&!isFinite(e.time)?String(e.time):e.time),null!=e.key&&e.hasOwnProperty("key")&&(n.key=t.enums===String?l.tensorflow.magenta.NoteSequence.KeySignature.Key[e.key]:e.key),null!=e.mode&&e.hasOwnProperty("mode")&&(n.mode=t.enums===String?l.tensorflow.magenta.NoteSequence.KeySignature.Mode[e.mode]:e.mode),n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e.Key=function(){var e={},t=Object.create(e);return t[e[0]="C"]=0,t[e[1]="C_SHARP"]=1,t.D_FLAT=1,t[e[2]="D"]=2,t[e[3]="D_SHARP"]=3,t.E_FLAT=3,t[e[4]="E"]=4,t[e[5]="F"]=5,t[e[6]="F_SHARP"]=6,t.G_FLAT=6,t[e[7]="G"]=7,t[e[8]="G_SHARP"]=8,t.A_FLAT=8,t[e[9]="A"]=9,t[e[10]="A_SHARP"]=10,t.B_FLAT=10,t[e[11]="B"]=11,t}(),e.Mode=function(){var e={},t=Object.create(e);return t[e[0]="MAJOR"]=0,t[e[1]="MINOR"]=1,t[e[2]="NOT_SPECIFIED"]=2,t[e[3]="MIXOLYDIAN"]=3,t[e[4]="DORIAN"]=4,t[e[5]="PHRYGIAN"]=5,t[e[6]="LYDIAN"]=6,t[e[7]="LOCRIAN"]=7,t}(),e}(),e.Tempo=function(){function e(e){if(e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.time=0,e.prototype.qpm=0,e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=i.create()),null!=e.time&&e.hasOwnProperty("time")&&t.uint32(9).double(e.time),null!=e.qpm&&e.hasOwnProperty("qpm")&&t.uint32(17).double(e.qpm),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof o||(e=o.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new l.tensorflow.magenta.NoteSequence.Tempo;e.pos<n;){var s=e.uint32();switch(s>>>3){case 1:r.time=e.double();break;case 2:r.qpm=e.double();break;default:e.skipType(7&s)}}return r},e.decodeDelimited=function(e){return e instanceof o||(e=new o(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!=typeof e||null===e?"object expected":null!=e.time&&e.hasOwnProperty("time")&&"number"!=typeof e.time?"time: number expected":null!=e.qpm&&e.hasOwnProperty("qpm")&&"number"!=typeof e.qpm?"qpm: number expected":null},e.fromObject=function(e){if(e instanceof l.tensorflow.magenta.NoteSequence.Tempo)return e;var t=new l.tensorflow.magenta.NoteSequence.Tempo;return null!=e.time&&(t.time=Number(e.time)),null!=e.qpm&&(t.qpm=Number(e.qpm)),t},e.toObject=function(e,t){t||(t={});var n={};return t.defaults&&(n.time=0,n.qpm=0),null!=e.time&&e.hasOwnProperty("time")&&(n.time=t.json&&!isFinite(e.time)?String(e.time):e.time),null!=e.qpm&&e.hasOwnProperty("qpm")&&(n.qpm=t.json&&!isFinite(e.qpm)?String(e.qpm):e.qpm),n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e}(),e.PitchBend=function(){function e(e){if(e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.time=0,e.prototype.bend=0,e.prototype.instrument=0,e.prototype.program=0,e.prototype.isDrum=!1,e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=i.create()),null!=e.time&&e.hasOwnProperty("time")&&t.uint32(9).double(e.time),null!=e.bend&&e.hasOwnProperty("bend")&&t.uint32(16).int32(e.bend),null!=e.instrument&&e.hasOwnProperty("instrument")&&t.uint32(24).int32(e.instrument),null!=e.program&&e.hasOwnProperty("program")&&t.uint32(32).int32(e.program),null!=e.isDrum&&e.hasOwnProperty("isDrum")&&t.uint32(40).bool(e.isDrum),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof o||(e=o.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new l.tensorflow.magenta.NoteSequence.PitchBend;e.pos<n;){var s=e.uint32();switch(s>>>3){case 1:r.time=e.double();break;case 2:r.bend=e.int32();break;case 3:r.instrument=e.int32();break;case 4:r.program=e.int32();break;case 5:r.isDrum=e.bool();break;default:e.skipType(7&s)}}return r},e.decodeDelimited=function(e){return e instanceof o||(e=new o(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!=typeof e||null===e?"object expected":null!=e.time&&e.hasOwnProperty("time")&&"number"!=typeof e.time?"time: number expected":null!=e.bend&&e.hasOwnProperty("bend")&&!u.isInteger(e.bend)?"bend: integer expected":null!=e.instrument&&e.hasOwnProperty("instrument")&&!u.isInteger(e.instrument)?"instrument: integer expected":null!=e.program&&e.hasOwnProperty("program")&&!u.isInteger(e.program)?"program: integer expected":null!=e.isDrum&&e.hasOwnProperty("isDrum")&&"boolean"!=typeof e.isDrum?"isDrum: boolean expected":null},e.fromObject=function(e){if(e instanceof l.tensorflow.magenta.NoteSequence.PitchBend)return e;var t=new l.tensorflow.magenta.NoteSequence.PitchBend;return null!=e.time&&(t.time=Number(e.time)),null!=e.bend&&(t.bend=0|e.bend),null!=e.instrument&&(t.instrument=0|e.instrument),null!=e.program&&(t.program=0|e.program),null!=e.isDrum&&(t.isDrum=Boolean(e.isDrum)),t},e.toObject=function(e,t){t||(t={});var n={};return t.defaults&&(n.time=0,n.bend=0,n.instrument=0,n.program=0,n.isDrum=!1),null!=e.time&&e.hasOwnProperty("time")&&(n.time=t.json&&!isFinite(e.time)?String(e.time):e.time),null!=e.bend&&e.hasOwnProperty("bend")&&(n.bend=e.bend),null!=e.instrument&&e.hasOwnProperty("instrument")&&(n.instrument=e.instrument),null!=e.program&&e.hasOwnProperty("program")&&(n.program=e.program),null!=e.isDrum&&e.hasOwnProperty("isDrum")&&(n.isDrum=e.isDrum),n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e}(),e.ControlChange=function(){function e(e){if(e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.time=0,e.prototype.quantizedStep=u.Long?u.Long.fromBits(0,0,!1):0,e.prototype.controlNumber=0,e.prototype.controlValue=0,e.prototype.instrument=0,e.prototype.program=0,e.prototype.isDrum=!1,e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=i.create()),null!=e.time&&e.hasOwnProperty("time")&&t.uint32(9).double(e.time),null!=e.controlNumber&&e.hasOwnProperty("controlNumber")&&t.uint32(16).int32(e.controlNumber),null!=e.controlValue&&e.hasOwnProperty("controlValue")&&t.uint32(24).int32(e.controlValue),null!=e.instrument&&e.hasOwnProperty("instrument")&&t.uint32(32).int32(e.instrument),null!=e.program&&e.hasOwnProperty("program")&&t.uint32(40).int32(e.program),null!=e.isDrum&&e.hasOwnProperty("isDrum")&&t.uint32(48).bool(e.isDrum),null!=e.quantizedStep&&e.hasOwnProperty("quantizedStep")&&t.uint32(56).int64(e.quantizedStep),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof o||(e=o.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new l.tensorflow.magenta.NoteSequence.ControlChange;e.pos<n;){var s=e.uint32();switch(s>>>3){case 1:r.time=e.double();break;case 7:r.quantizedStep=u.Long?e.int64().toNumber():e.int64();break;case 2:r.controlNumber=e.int32();break;case 3:r.controlValue=e.int32();break;case 4:r.instrument=e.int32();break;case 5:r.program=e.int32();break;case 6:r.isDrum=e.bool();break;default:e.skipType(7&s)}}return r},e.decodeDelimited=function(e){return e instanceof o||(e=new o(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!=typeof e||null===e?"object expected":null!=e.time&&e.hasOwnProperty("time")&&"number"!=typeof e.time?"time: number expected":null!=e.quantizedStep&&e.hasOwnProperty("quantizedStep")&&!(u.isInteger(e.quantizedStep)||e.quantizedStep&&u.isInteger(e.quantizedStep.low)&&u.isInteger(e.quantizedStep.high))?"quantizedStep: integer|Long expected":null!=e.controlNumber&&e.hasOwnProperty("controlNumber")&&!u.isInteger(e.controlNumber)?"controlNumber: integer expected":null!=e.controlValue&&e.hasOwnProperty("controlValue")&&!u.isInteger(e.controlValue)?"controlValue: integer expected":null!=e.instrument&&e.hasOwnProperty("instrument")&&!u.isInteger(e.instrument)?"instrument: integer expected":null!=e.program&&e.hasOwnProperty("program")&&!u.isInteger(e.program)?"program: integer expected":null!=e.isDrum&&e.hasOwnProperty("isDrum")&&"boolean"!=typeof e.isDrum?"isDrum: boolean expected":null},e.fromObject=function(e){if(e instanceof l.tensorflow.magenta.NoteSequence.ControlChange)return e;var t=new l.tensorflow.magenta.NoteSequence.ControlChange;return null!=e.time&&(t.time=Number(e.time)),null!=e.quantizedStep&&(u.Long?(t.quantizedStep=u.Long.fromValue(e.quantizedStep)).unsigned=!1:"string"==typeof e.quantizedStep?t.quantizedStep=parseInt(e.quantizedStep,10):"number"==typeof e.quantizedStep?t.quantizedStep=e.quantizedStep:"object"==typeof e.quantizedStep&&(t.quantizedStep=new u.LongBits(e.quantizedStep.low>>>0,e.quantizedStep.high>>>0).toNumber())),null!=e.controlNumber&&(t.controlNumber=0|e.controlNumber),null!=e.controlValue&&(t.controlValue=0|e.controlValue),null!=e.instrument&&(t.instrument=0|e.instrument),null!=e.program&&(t.program=0|e.program),null!=e.isDrum&&(t.isDrum=Boolean(e.isDrum)),t},e.toObject=function(e,t){t||(t={});var n={};if(t.defaults)if(n.time=0,n.controlNumber=0,n.controlValue=0,n.instrument=0,n.program=0,n.isDrum=!1,u.Long){var r=new u.Long(0,0,!1);n.quantizedStep=t.longs===String?r.toString():t.longs===Number?r.toNumber():r}else n.quantizedStep=t.longs===String?"0":0;return null!=e.time&&e.hasOwnProperty("time")&&(n.time=t.json&&!isFinite(e.time)?String(e.time):e.time),null!=e.controlNumber&&e.hasOwnProperty("controlNumber")&&(n.controlNumber=e.controlNumber),null!=e.controlValue&&e.hasOwnProperty("controlValue")&&(n.controlValue=e.controlValue),null!=e.instrument&&e.hasOwnProperty("instrument")&&(n.instrument=e.instrument),null!=e.program&&e.hasOwnProperty("program")&&(n.program=e.program),null!=e.isDrum&&e.hasOwnProperty("isDrum")&&(n.isDrum=e.isDrum),null!=e.quantizedStep&&e.hasOwnProperty("quantizedStep")&&("number"==typeof e.quantizedStep?n.quantizedStep=t.longs===String?String(e.quantizedStep):e.quantizedStep:n.quantizedStep=t.longs===String?u.Long.prototype.toString.call(e.quantizedStep):t.longs===Number?new u.LongBits(e.quantizedStep.low>>>0,e.quantizedStep.high>>>0).toNumber():e.quantizedStep),n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e}(),e.PartInfo=function(){function e(e){if(e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.part=0,e.prototype.name="",e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=i.create()),null!=e.part&&e.hasOwnProperty("part")&&t.uint32(8).int32(e.part),null!=e.name&&e.hasOwnProperty("name")&&t.uint32(18).string(e.name),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof o||(e=o.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new l.tensorflow.magenta.NoteSequence.PartInfo;e.pos<n;){var s=e.uint32();switch(s>>>3){case 1:r.part=e.int32();break;case 2:r.name=e.string();break;default:e.skipType(7&s)}}return r},e.decodeDelimited=function(e){return e instanceof o||(e=new o(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!=typeof e||null===e?"object expected":null!=e.part&&e.hasOwnProperty("part")&&!u.isInteger(e.part)?"part: integer expected":null!=e.name&&e.hasOwnProperty("name")&&!u.isString(e.name)?"name: string expected":null},e.fromObject=function(e){if(e instanceof l.tensorflow.magenta.NoteSequence.PartInfo)return e;var t=new l.tensorflow.magenta.NoteSequence.PartInfo;return null!=e.part&&(t.part=0|e.part),null!=e.name&&(t.name=String(e.name)),t},e.toObject=function(e,t){t||(t={});var n={};return t.defaults&&(n.part=0,n.name=""),null!=e.part&&e.hasOwnProperty("part")&&(n.part=e.part),null!=e.name&&e.hasOwnProperty("name")&&(n.name=e.name),n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e}(),e.SourceInfo=function(){function e(e){if(e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.sourceType=0,e.prototype.encodingType=0,e.prototype.parser=0,e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=i.create()),null!=e.sourceType&&e.hasOwnProperty("sourceType")&&t.uint32(8).int32(e.sourceType),null!=e.encodingType&&e.hasOwnProperty("encodingType")&&t.uint32(16).int32(e.encodingType),null!=e.parser&&e.hasOwnProperty("parser")&&t.uint32(24).int32(e.parser),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof o||(e=o.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new l.tensorflow.magenta.NoteSequence.SourceInfo;e.pos<n;){var s=e.uint32();switch(s>>>3){case 1:r.sourceType=e.int32();break;case 2:r.encodingType=e.int32();break;case 3:r.parser=e.int32();break;default:e.skipType(7&s)}}return r},e.decodeDelimited=function(e){return e instanceof o||(e=new o(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";if(null!=e.sourceType&&e.hasOwnProperty("sourceType"))switch(e.sourceType){default:return"sourceType: enum value expected";case 0:case 1:case 2:}if(null!=e.encodingType&&e.hasOwnProperty("encodingType"))switch(e.encodingType){default:return"encodingType: enum value expected";case 0:case 1:case 2:case 3:case 4:}if(null!=e.parser&&e.hasOwnProperty("parser"))switch(e.parser){default:return"parser: enum value expected";case 0:case 1:case 2:case 3:case 4:case 5:case 6:}return null},e.fromObject=function(e){if(e instanceof l.tensorflow.magenta.NoteSequence.SourceInfo)return e;var t=new l.tensorflow.magenta.NoteSequence.SourceInfo;switch(e.sourceType){case"UNKNOWN_SOURCE_TYPE":case 0:t.sourceType=0;break;case"SCORE_BASED":case 1:t.sourceType=1;break;case"PERFORMANCE_BASED":case 2:t.sourceType=2}switch(e.encodingType){case"UNKNOWN_ENCODING_TYPE":case 0:t.encodingType=0;break;case"MUSIC_XML":case 1:t.encodingType=1;break;case"ABC":case 2:t.encodingType=2;break;case"MIDI":case 3:t.encodingType=3;break;case"MUSICNET":case 4:t.encodingType=4}switch(e.parser){case"UNKNOWN_PARSER":case 0:t.parser=0;break;case"MUSIC21":case 1:t.parser=1;break;case"PRETTY_MIDI":case 2:t.parser=2;break;case"MAGENTA_MUSIC_XML":case 3:t.parser=3;break;case"MAGENTA_MUSICNET":case 4:t.parser=4;break;case"MAGENTA_ABC":case 5:t.parser=5;break;case"TONEJS_MIDI_CONVERT":case 6:t.parser=6}return t},e.toObject=function(e,t){t||(t={});var n={};return t.defaults&&(n.sourceType=t.enums===String?"UNKNOWN_SOURCE_TYPE":0,n.encodingType=t.enums===String?"UNKNOWN_ENCODING_TYPE":0,n.parser=t.enums===String?"UNKNOWN_PARSER":0),null!=e.sourceType&&e.hasOwnProperty("sourceType")&&(n.sourceType=t.enums===String?l.tensorflow.magenta.NoteSequence.SourceInfo.SourceType[e.sourceType]:e.sourceType),null!=e.encodingType&&e.hasOwnProperty("encodingType")&&(n.encodingType=t.enums===String?l.tensorflow.magenta.NoteSequence.SourceInfo.EncodingType[e.encodingType]:e.encodingType),null!=e.parser&&e.hasOwnProperty("parser")&&(n.parser=t.enums===String?l.tensorflow.magenta.NoteSequence.SourceInfo.Parser[e.parser]:e.parser),n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e.SourceType=function(){var e={},t=Object.create(e);return t[e[0]="UNKNOWN_SOURCE_TYPE"]=0,t[e[1]="SCORE_BASED"]=1,t[e[2]="PERFORMANCE_BASED"]=2,t}(),e.EncodingType=function(){var e={},t=Object.create(e);return t[e[0]="UNKNOWN_ENCODING_TYPE"]=0,t[e[1]="MUSIC_XML"]=1,t[e[2]="ABC"]=2,t[e[3]="MIDI"]=3,t[e[4]="MUSICNET"]=4,t}(),e.Parser=function(){var e={},t=Object.create(e);return t[e[0]="UNKNOWN_PARSER"]=0,t[e[1]="MUSIC21"]=1,t[e[2]="PRETTY_MIDI"]=2,t[e[3]="MAGENTA_MUSIC_XML"]=3,t[e[4]="MAGENTA_MUSICNET"]=4,t[e[5]="MAGENTA_ABC"]=5,t[e[6]="TONEJS_MIDI_CONVERT"]=6,t}(),e}(),e.TextAnnotation=function(){function e(e){if(e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.time=0,e.prototype.quantizedStep=u.Long?u.Long.fromBits(0,0,!1):0,e.prototype.text="",e.prototype.annotationType=0,e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=i.create()),null!=e.time&&e.hasOwnProperty("time")&&t.uint32(9).double(e.time),null!=e.text&&e.hasOwnProperty("text")&&t.uint32(18).string(e.text),null!=e.annotationType&&e.hasOwnProperty("annotationType")&&t.uint32(24).int32(e.annotationType),null!=e.quantizedStep&&e.hasOwnProperty("quantizedStep")&&t.uint32(32).int64(e.quantizedStep),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof o||(e=o.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new l.tensorflow.magenta.NoteSequence.TextAnnotation;e.pos<n;){var s=e.uint32();switch(s>>>3){case 1:r.time=e.double();break;case 4:r.quantizedStep=u.Long?e.int64().toNumber():e.int64();break;case 2:r.text=e.string();break;case 3:r.annotationType=e.int32();break;default:e.skipType(7&s)}}return r},e.decodeDelimited=function(e){return e instanceof o||(e=new o(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";if(null!=e.time&&e.hasOwnProperty("time")&&"number"!=typeof e.time)return"time: number expected";if(null!=e.quantizedStep&&e.hasOwnProperty("quantizedStep")&&!(u.isInteger(e.quantizedStep)||e.quantizedStep&&u.isInteger(e.quantizedStep.low)&&u.isInteger(e.quantizedStep.high)))return"quantizedStep: integer|Long expected";if(null!=e.text&&e.hasOwnProperty("text")&&!u.isString(e.text))return"text: string expected";if(null!=e.annotationType&&e.hasOwnProperty("annotationType"))switch(e.annotationType){default:return"annotationType: enum value expected";case 0:case 1:case 2:}return null},e.fromObject=function(e){if(e instanceof l.tensorflow.magenta.NoteSequence.TextAnnotation)return e;var t=new l.tensorflow.magenta.NoteSequence.TextAnnotation;switch(null!=e.time&&(t.time=Number(e.time)),null!=e.quantizedStep&&(u.Long?(t.quantizedStep=u.Long.fromValue(e.quantizedStep)).unsigned=!1:"string"==typeof e.quantizedStep?t.quantizedStep=parseInt(e.quantizedStep,10):"number"==typeof e.quantizedStep?t.quantizedStep=e.quantizedStep:"object"==typeof e.quantizedStep&&(t.quantizedStep=new u.LongBits(e.quantizedStep.low>>>0,e.quantizedStep.high>>>0).toNumber())),null!=e.text&&(t.text=String(e.text)),e.annotationType){case"UNKNOWN":case 0:t.annotationType=0;break;case"CHORD_SYMBOL":case 1:t.annotationType=1;break;case"BEAT":case 2:t.annotationType=2}return t},e.toObject=function(e,t){t||(t={});var n={};if(t.defaults)if(n.time=0,n.text="",n.annotationType=t.enums===String?"UNKNOWN":0,u.Long){var r=new u.Long(0,0,!1);n.quantizedStep=t.longs===String?r.toString():t.longs===Number?r.toNumber():r}else n.quantizedStep=t.longs===String?"0":0;return null!=e.time&&e.hasOwnProperty("time")&&(n.time=t.json&&!isFinite(e.time)?String(e.time):e.time),null!=e.text&&e.hasOwnProperty("text")&&(n.text=e.text),null!=e.annotationType&&e.hasOwnProperty("annotationType")&&(n.annotationType=t.enums===String?l.tensorflow.magenta.NoteSequence.TextAnnotation.TextAnnotationType[e.annotationType]:e.annotationType),null!=e.quantizedStep&&e.hasOwnProperty("quantizedStep")&&("number"==typeof e.quantizedStep?n.quantizedStep=t.longs===String?String(e.quantizedStep):e.quantizedStep:n.quantizedStep=t.longs===String?u.Long.prototype.toString.call(e.quantizedStep):t.longs===Number?new u.LongBits(e.quantizedStep.low>>>0,e.quantizedStep.high>>>0).toNumber():e.quantizedStep),n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e.TextAnnotationType=function(){var e={},t=Object.create(e);return t[e[0]="UNKNOWN"]=0,t[e[1]="CHORD_SYMBOL"]=1,t[e[2]="BEAT"]=2,t}(),e}(),e.QuantizationInfo=function(){function e(e){if(e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}var t;return e.prototype.stepsPerQuarter=0,e.prototype.stepsPerSecond=0,Object.defineProperty(e.prototype,"resolution",{get:u.oneOfGetter(t=["stepsPerQuarter","stepsPerSecond"]),set:u.oneOfSetter(t)}),e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=i.create()),null!=e.stepsPerQuarter&&e.hasOwnProperty("stepsPerQuarter")&&t.uint32(8).int32(e.stepsPerQuarter),null!=e.stepsPerSecond&&e.hasOwnProperty("stepsPerSecond")&&t.uint32(16).int32(e.stepsPerSecond),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof o||(e=o.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new l.tensorflow.magenta.NoteSequence.QuantizationInfo;e.pos<n;){var s=e.uint32();switch(s>>>3){case 1:r.stepsPerQuarter=e.int32();break;case 2:r.stepsPerSecond=e.int32();break;default:e.skipType(7&s)}}return r},e.decodeDelimited=function(e){return e instanceof o||(e=new o(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";var t={};if(null!=e.stepsPerQuarter&&e.hasOwnProperty("stepsPerQuarter")&&(t.resolution=1,!u.isInteger(e.stepsPerQuarter)))return"stepsPerQuarter: integer expected";if(null!=e.stepsPerSecond&&e.hasOwnProperty("stepsPerSecond")){if(1===t.resolution)return"resolution: multiple values";if(t.resolution=1,!u.isInteger(e.stepsPerSecond))return"stepsPerSecond: integer expected"}return null},e.fromObject=function(e){if(e instanceof l.tensorflow.magenta.NoteSequence.QuantizationInfo)return e;var t=new l.tensorflow.magenta.NoteSequence.QuantizationInfo;return null!=e.stepsPerQuarter&&(t.stepsPerQuarter=0|e.stepsPerQuarter),null!=e.stepsPerSecond&&(t.stepsPerSecond=0|e.stepsPerSecond),t},e.toObject=function(e,t){t||(t={});var n={};return null!=e.stepsPerQuarter&&e.hasOwnProperty("stepsPerQuarter")&&(n.stepsPerQuarter=e.stepsPerQuarter,t.oneofs&&(n.resolution="stepsPerQuarter")),null!=e.stepsPerSecond&&e.hasOwnProperty("stepsPerSecond")&&(n.stepsPerSecond=e.stepsPerSecond,t.oneofs&&(n.resolution="stepsPerSecond")),n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e}(),e.SubsequenceInfo=function(){function e(e){if(e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.startTimeOffset=0,e.prototype.endTimeOffset=0,e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=i.create()),null!=e.startTimeOffset&&e.hasOwnProperty("startTimeOffset")&&t.uint32(9).double(e.startTimeOffset),null!=e.endTimeOffset&&e.hasOwnProperty("endTimeOffset")&&t.uint32(17).double(e.endTimeOffset),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof o||(e=o.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new l.tensorflow.magenta.NoteSequence.SubsequenceInfo;e.pos<n;){var s=e.uint32();switch(s>>>3){case 1:r.startTimeOffset=e.double();break;case 2:r.endTimeOffset=e.double();break;default:e.skipType(7&s)}}return r},e.decodeDelimited=function(e){return e instanceof o||(e=new o(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!=typeof e||null===e?"object expected":null!=e.startTimeOffset&&e.hasOwnProperty("startTimeOffset")&&"number"!=typeof e.startTimeOffset?"startTimeOffset: number expected":null!=e.endTimeOffset&&e.hasOwnProperty("endTimeOffset")&&"number"!=typeof e.endTimeOffset?"endTimeOffset: number expected":null},e.fromObject=function(e){if(e instanceof l.tensorflow.magenta.NoteSequence.SubsequenceInfo)return e;var t=new l.tensorflow.magenta.NoteSequence.SubsequenceInfo;return null!=e.startTimeOffset&&(t.startTimeOffset=Number(e.startTimeOffset)),null!=e.endTimeOffset&&(t.endTimeOffset=Number(e.endTimeOffset)),t},e.toObject=function(e,t){t||(t={});var n={};return t.defaults&&(n.startTimeOffset=0,n.endTimeOffset=0),null!=e.startTimeOffset&&e.hasOwnProperty("startTimeOffset")&&(n.startTimeOffset=t.json&&!isFinite(e.startTimeOffset)?String(e.startTimeOffset):e.startTimeOffset),null!=e.endTimeOffset&&e.hasOwnProperty("endTimeOffset")&&(n.endTimeOffset=t.json&&!isFinite(e.endTimeOffset)?String(e.endTimeOffset):e.endTimeOffset),n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e}(),e.SectionAnnotation=function(){function e(e){if(e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.time=0,e.prototype.sectionId=u.Long?u.Long.fromBits(0,0,!1):0,e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=i.create()),null!=e.time&&e.hasOwnProperty("time")&&t.uint32(9).double(e.time),null!=e.sectionId&&e.hasOwnProperty("sectionId")&&t.uint32(32).int64(e.sectionId),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof o||(e=o.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new l.tensorflow.magenta.NoteSequence.SectionAnnotation;e.pos<n;){var s=e.uint32();switch(s>>>3){case 1:r.time=e.double();break;case 4:r.sectionId=u.Long?e.int64().toNumber():e.int64();break;default:e.skipType(7&s)}}return r},e.decodeDelimited=function(e){return e instanceof o||(e=new o(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!=typeof e||null===e?"object expected":null!=e.time&&e.hasOwnProperty("time")&&"number"!=typeof e.time?"time: number expected":null!=e.sectionId&&e.hasOwnProperty("sectionId")&&!(u.isInteger(e.sectionId)||e.sectionId&&u.isInteger(e.sectionId.low)&&u.isInteger(e.sectionId.high))?"sectionId: integer|Long expected":null},e.fromObject=function(e){if(e instanceof l.tensorflow.magenta.NoteSequence.SectionAnnotation)return e;var t=new l.tensorflow.magenta.NoteSequence.SectionAnnotation;return null!=e.time&&(t.time=Number(e.time)),null!=e.sectionId&&(u.Long?(t.sectionId=u.Long.fromValue(e.sectionId)).unsigned=!1:"string"==typeof e.sectionId?t.sectionId=parseInt(e.sectionId,10):"number"==typeof e.sectionId?t.sectionId=e.sectionId:"object"==typeof e.sectionId&&(t.sectionId=new u.LongBits(e.sectionId.low>>>0,e.sectionId.high>>>0).toNumber())),t},e.toObject=function(e,t){t||(t={});var n={};if(t.defaults)if(n.time=0,u.Long){var r=new u.Long(0,0,!1);n.sectionId=t.longs===String?r.toString():t.longs===Number?r.toNumber():r}else n.sectionId=t.longs===String?"0":0;return null!=e.time&&e.hasOwnProperty("time")&&(n.time=t.json&&!isFinite(e.time)?String(e.time):e.time),null!=e.sectionId&&e.hasOwnProperty("sectionId")&&("number"==typeof e.sectionId?n.sectionId=t.longs===String?String(e.sectionId):e.sectionId:n.sectionId=t.longs===String?u.Long.prototype.toString.call(e.sectionId):t.longs===Number?new u.LongBits(e.sectionId.low>>>0,e.sectionId.high>>>0).toNumber():e.sectionId),n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e}(),e.Section=function(){function e(e){if(e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}var t;return e.prototype.sectionId=u.Long?u.Long.fromBits(0,0,!1):0,e.prototype.sectionGroup=null,Object.defineProperty(e.prototype,"sectionType",{get:u.oneOfGetter(t=["sectionId","sectionGroup"]),set:u.oneOfSetter(t)}),e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=i.create()),null!=e.sectionId&&e.hasOwnProperty("sectionId")&&t.uint32(8).int64(e.sectionId),null!=e.sectionGroup&&e.hasOwnProperty("sectionGroup")&&l.tensorflow.magenta.NoteSequence.SectionGroup.encode(e.sectionGroup,t.uint32(18).fork()).ldelim(),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof o||(e=o.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new l.tensorflow.magenta.NoteSequence.Section;e.pos<n;){var s=e.uint32();switch(s>>>3){case 1:r.sectionId=u.Long?e.int64().toNumber():e.int64();break;case 2:r.sectionGroup=l.tensorflow.magenta.NoteSequence.SectionGroup.decode(e,e.uint32());break;default:e.skipType(7&s)}}return r},e.decodeDelimited=function(e){return e instanceof o||(e=new o(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";var t={};if(null!=e.sectionId&&e.hasOwnProperty("sectionId")&&(t.sectionType=1,!(u.isInteger(e.sectionId)||e.sectionId&&u.isInteger(e.sectionId.low)&&u.isInteger(e.sectionId.high))))return"sectionId: integer|Long expected";if(null!=e.sectionGroup&&e.hasOwnProperty("sectionGroup")){if(1===t.sectionType)return"sectionType: multiple values";t.sectionType=1;var n=l.tensorflow.magenta.NoteSequence.SectionGroup.verify(e.sectionGroup);if(n)return"sectionGroup."+n}return null},e.fromObject=function(e){if(e instanceof l.tensorflow.magenta.NoteSequence.Section)return e;var t=new l.tensorflow.magenta.NoteSequence.Section;if(null!=e.sectionId&&(u.Long?(t.sectionId=u.Long.fromValue(e.sectionId)).unsigned=!1:"string"==typeof e.sectionId?t.sectionId=parseInt(e.sectionId,10):"number"==typeof e.sectionId?t.sectionId=e.sectionId:"object"==typeof e.sectionId&&(t.sectionId=new u.LongBits(e.sectionId.low>>>0,e.sectionId.high>>>0).toNumber())),null!=e.sectionGroup){if("object"!=typeof e.sectionGroup)throw TypeError(".tensorflow.magenta.NoteSequence.Section.sectionGroup: object expected");t.sectionGroup=l.tensorflow.magenta.NoteSequence.SectionGroup.fromObject(e.sectionGroup)}return t},e.toObject=function(e,t){t||(t={});var n={};return null!=e.sectionId&&e.hasOwnProperty("sectionId")&&("number"==typeof e.sectionId?n.sectionId=t.longs===String?String(e.sectionId):e.sectionId:n.sectionId=t.longs===String?u.Long.prototype.toString.call(e.sectionId):t.longs===Number?new u.LongBits(e.sectionId.low>>>0,e.sectionId.high>>>0).toNumber():e.sectionId,t.oneofs&&(n.sectionType="sectionId")),null!=e.sectionGroup&&e.hasOwnProperty("sectionGroup")&&(n.sectionGroup=l.tensorflow.magenta.NoteSequence.SectionGroup.toObject(e.sectionGroup,t),t.oneofs&&(n.sectionType="sectionGroup")),n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e}(),e.SectionGroup=function(){function e(e){if(this.sections=[],e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.sections=u.emptyArray,e.prototype.numTimes=0,e.create=function(t){return new e(t)},e.encode=function(e,t){if(t||(t=i.create()),null!=e.sections&&e.sections.length)for(var n=0;n<e.sections.length;++n)l.tensorflow.magenta.NoteSequence.Section.encode(e.sections[n],t.uint32(10).fork()).ldelim();return null!=e.numTimes&&e.hasOwnProperty("numTimes")&&t.uint32(16).int32(e.numTimes),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof o||(e=o.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new l.tensorflow.magenta.NoteSequence.SectionGroup;e.pos<n;){var s=e.uint32();switch(s>>>3){case 1:r.sections&&r.sections.length||(r.sections=[]),r.sections.push(l.tensorflow.magenta.NoteSequence.Section.decode(e,e.uint32()));break;case 2:r.numTimes=e.int32();break;default:e.skipType(7&s)}}return r},e.decodeDelimited=function(e){return e instanceof o||(e=new o(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";if(null!=e.sections&&e.hasOwnProperty("sections")){if(!Array.isArray(e.sections))return"sections: array expected";for(var t=0;t<e.sections.length;++t){var n=l.tensorflow.magenta.NoteSequence.Section.verify(e.sections[t]);if(n)return"sections."+n}}return null!=e.numTimes&&e.hasOwnProperty("numTimes")&&!u.isInteger(e.numTimes)?"numTimes: integer expected":null},e.fromObject=function(e){if(e instanceof l.tensorflow.magenta.NoteSequence.SectionGroup)return e;var t=new l.tensorflow.magenta.NoteSequence.SectionGroup;if(e.sections){if(!Array.isArray(e.sections))throw TypeError(".tensorflow.magenta.NoteSequence.SectionGroup.sections: array expected");t.sections=[];for(var n=0;n<e.sections.length;++n){if("object"!=typeof e.sections[n])throw TypeError(".tensorflow.magenta.NoteSequence.SectionGroup.sections: object expected");t.sections[n]=l.tensorflow.magenta.NoteSequence.Section.fromObject(e.sections[n])}}return null!=e.numTimes&&(t.numTimes=0|e.numTimes),t},e.toObject=function(e,t){t||(t={});var n={};if((t.arrays||t.defaults)&&(n.sections=[]),t.defaults&&(n.numTimes=0),e.sections&&e.sections.length){n.sections=[];for(var r=0;r<e.sections.length;++r)n.sections[r]=l.tensorflow.magenta.NoteSequence.Section.toObject(e.sections[r],t)}return null!=e.numTimes&&e.hasOwnProperty("numTimes")&&(n.numTimes=e.numTimes),n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e}(),e}(),r.SequenceMetadata=function(){function e(e){if(this.genre=[],this.composers=[],e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.title="",e.prototype.artist="",e.prototype.genre=u.emptyArray,e.prototype.composers=u.emptyArray,e.create=function(t){return new e(t)},e.encode=function(e,t){if(t||(t=i.create()),null!=e.title&&e.hasOwnProperty("title")&&t.uint32(10).string(e.title),null!=e.artist&&e.hasOwnProperty("artist")&&t.uint32(18).string(e.artist),null!=e.genre&&e.genre.length)for(var n=0;n<e.genre.length;++n)t.uint32(26).string(e.genre[n]);if(null!=e.composers&&e.composers.length)for(n=0;n<e.composers.length;++n)t.uint32(34).string(e.composers[n]);return t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof o||(e=o.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new l.tensorflow.magenta.SequenceMetadata;e.pos<n;){var s=e.uint32();switch(s>>>3){case 1:r.title=e.string();break;case 2:r.artist=e.string();break;case 3:r.genre&&r.genre.length||(r.genre=[]),r.genre.push(e.string());break;case 4:r.composers&&r.composers.length||(r.composers=[]),r.composers.push(e.string());break;default:e.skipType(7&s)}}return r},e.decodeDelimited=function(e){return e instanceof o||(e=new o(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";if(null!=e.title&&e.hasOwnProperty("title")&&!u.isString(e.title))return"title: string expected";if(null!=e.artist&&e.hasOwnProperty("artist")&&!u.isString(e.artist))return"artist: string expected";if(null!=e.genre&&e.hasOwnProperty("genre")){if(!Array.isArray(e.genre))return"genre: array expected";for(var t=0;t<e.genre.length;++t)if(!u.isString(e.genre[t]))return"genre: string[] expected"}if(null!=e.composers&&e.hasOwnProperty("composers")){if(!Array.isArray(e.composers))return"composers: array expected";for(t=0;t<e.composers.length;++t)if(!u.isString(e.composers[t]))return"composers: string[] expected"}return null},e.fromObject=function(e){if(e instanceof l.tensorflow.magenta.SequenceMetadata)return e;var t=new l.tensorflow.magenta.SequenceMetadata;if(null!=e.title&&(t.title=String(e.title)),null!=e.artist&&(t.artist=String(e.artist)),e.genre){if(!Array.isArray(e.genre))throw TypeError(".tensorflow.magenta.SequenceMetadata.genre: array expected");t.genre=[];for(var n=0;n<e.genre.length;++n)t.genre[n]=String(e.genre[n])}if(e.composers){if(!Array.isArray(e.composers))throw TypeError(".tensorflow.magenta.SequenceMetadata.composers: array expected");for(t.composers=[],n=0;n<e.composers.length;++n)t.composers[n]=String(e.composers[n])}return t},e.toObject=function(e,t){t||(t={});var n={};if((t.arrays||t.defaults)&&(n.genre=[],n.composers=[]),t.defaults&&(n.title="",n.artist=""),null!=e.title&&e.hasOwnProperty("title")&&(n.title=e.title),null!=e.artist&&e.hasOwnProperty("artist")&&(n.artist=e.artist),e.genre&&e.genre.length){n.genre=[];for(var r=0;r<e.genre.length;++r)n.genre[r]=e.genre[r]}if(e.composers&&e.composers.length)for(n.composers=[],r=0;r<e.composers.length;++r)n.composers[r]=e.composers[r];return n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e}(),r.VelocityRange=function(){function e(e){if(e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.min=0,e.prototype.max=0,e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=i.create()),null!=e.min&&e.hasOwnProperty("min")&&t.uint32(8).int32(e.min),null!=e.max&&e.hasOwnProperty("max")&&t.uint32(16).int32(e.max),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof o||(e=o.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new l.tensorflow.magenta.VelocityRange;e.pos<n;){var s=e.uint32();switch(s>>>3){case 1:r.min=e.int32();break;case 2:r.max=e.int32();break;default:e.skipType(7&s)}}return r},e.decodeDelimited=function(e){return e instanceof o||(e=new o(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!=typeof e||null===e?"object expected":null!=e.min&&e.hasOwnProperty("min")&&!u.isInteger(e.min)?"min: integer expected":null!=e.max&&e.hasOwnProperty("max")&&!u.isInteger(e.max)?"max: integer expected":null},e.fromObject=function(e){if(e instanceof l.tensorflow.magenta.VelocityRange)return e;var t=new l.tensorflow.magenta.VelocityRange;return null!=e.min&&(t.min=0|e.min),null!=e.max&&(t.max=0|e.max),t},e.toObject=function(e,t){t||(t={});var n={};return t.defaults&&(n.min=0,n.max=0),null!=e.min&&e.hasOwnProperty("min")&&(n.min=e.min),null!=e.max&&e.hasOwnProperty("max")&&(n.max=e.max),n},e.prototype.toJSON=function(){return this.constructor.toObject(this,a.util.toJSONOptions)},e}(),r),s),e.exports=l},42:function(e,t,n){"use strict";n.r(t),n.d(t,"ChordQuality",(function(){return me})),n.d(t,"ChordSymbolException",(function(){return ge})),n.d(t,"ChordEncodingException",(function(){return ye})),n.d(t,"ChordSymbols",(function(){return be})),n.d(t,"ChordEncoder",(function(){return we})),n.d(t,"chordEncoderFromType",(function(){return xe})),n.d(t,"MajorMinorChordEncoder",(function(){return Se})),n.d(t,"TriadChordEncoder",(function(){return ve})),n.d(t,"PitchChordEncoder",(function(){return ke}));var r={};n.r(r),n.d(r,"names",(function(){return i})),n.d(r,"tokenize",(function(){return p})),n.d(r,"props",(function(){return f})),n.d(r,"name",(function(){return m})),n.d(r,"pc",(function(){return g})),n.d(r,"midi",(function(){return y})),n.d(r,"midiToFreq",(function(){return b})),n.d(r,"freq",(function(){return w})),n.d(r,"freqToMidi",(function(){return v})),n.d(r,"chroma",(function(){return k})),n.d(r,"oct",(function(){return N})),n.d(r,"stepToLetter",(function(){return I})),n.d(r,"altToAcc",(function(){return C})),n.d(r,"from",(function(){return A})),n.d(r,"build",(function(){return E})),n.d(r,"fromMidi",(function(){return P})),n.d(r,"simplify",(function(){return $})),n.d(r,"enharmonic",(function(){return M}));var s={};n.r(s),n.d(s,"names",(function(){return re})),n.d(s,"props",(function(){return ae})),n.d(s,"intervals",(function(){return oe})),n.d(s,"notes",(function(){return ie})),n.d(s,"exists",(function(){return ue})),n.d(s,"supersets",(function(){return le})),n.d(s,"subsets",(function(){return ce})),n.d(s,"tokenize",(function(){return he}));var a=n(2),o="C C# Db D D# Eb E F F# Gb G G# Ab A A# Bb B".split(" "),i=function(e){return"string"!=typeof e?o.slice():o.filter((function(t){var n=t[1]||" ";return-1!==e.indexOf(n)}))},u=i(" #"),l=i(" b"),c=/^([a-gA-G]?)(#{1,}|b{1,}|x{1,}|)(-?\d*)\s*(.*)$/;function p(e){"string"!=typeof e&&(e="");var t=c.exec(e);return[t[1].toUpperCase(),t[2].replace(/x/g,"##"),t[3],t[4]]}var h=Object.freeze({pc:null,name:null,step:null,alt:null,oct:null,octStr:null,chroma:null,midi:null,freq:null}),d=[0,2,4,5,7,9,11],f=function(e,t){return void 0===t&&(t={}),function(e){return t[e]||(t[e]=function(e){var t=p(e);if(""===t[0]||""!==t[3])return h;var n=t[0],r=t[1],s=t[2],a={letter:n,acc:r,octStr:s,pc:n+r,name:n+r+s,step:(n.charCodeAt(0)+3)%7,alt:"b"===r[0]?-r.length:r.length,oct:s.length?+s:null,chroma:0,midi:null,freq:null};return a.chroma=(d[a.step]+a.alt+120)%12,a.midi=null!==a.oct?d[a.step]+a.alt+12*(a.oct+1):null,a.freq=b(a.midi),Object.freeze(a)}(e))}}(),m=function(e){return f(e).name},g=function(e){return f(e).pc},y=function(e){if("number"!=typeof e&&"string"!=typeof e)return null;var t,n=f(e).midi,r=n||0===n?n:+e;return(t=r)>=0&&t<=127?r:null},b=function(e,t){return void 0===t&&(t=440),"number"==typeof e?Math.pow(2,(e-69)/12)*t:null},w=function(e){return f(e).freq||b(e)},x=Math.log(2),S=Math.log(440),v=function(e){var t=12*(Math.log(e)-S)/x+69;return Math.round(100*t)/100},k=function(e){return f(e).chroma},N=function(e){return f(e).oct},I=function(e){return"CDEFGAB"[e]},T=function(e,t){return Array(t+1).join(e)},C=function(e){return function(e,t){return"number"!=typeof e?"":function(e){return e<0?T("b",-e):T("#",e)}(e)}(e)},A=function(e,t){void 0===e&&(e={}),void 0===t&&(t=null);var n=t?Object.assign({},f(t),e):e,r=n.step,s=n.alt,a=n.oct;if("number"!=typeof r)return null;var o=I(r);if(!o)return null;var i=o+C(s);return a||0===a?i+a:i},E=A;function P(e,t){return void 0===t&&(t=!1),e=Math.round(e),(!0===t?u:l)[e%12]+(Math.floor(e/12)-1)}var $=function(e,t){void 0===t&&(t=!0);var n=f(e),r=n.alt,s=n.chroma,a=n.midi;if(null===s)return null;var o=!1===t?r<0:r>0;return null===a?g(P(s,o)):P(a,o)},M=function(e){return $(e,!1)},O=new RegExp("^([-+]?\\d+)(d{1,4}|m|M|P|A{1,4})|(AA|A|P|M|m|d|dd)([-+]?\\d+)$"),_=[0,2,4,5,7,9,11],D=("1P 2m 2M 3m 3M 4P 5P 6m 6M 7m 7M 8P".split(" "),Object.freeze({name:null,num:null,q:null,step:null,alt:null,dir:null,type:null,simple:null,semitones:null,chroma:null,oct:null})),R={};function z(e){return"string"!=typeof e?D:R[e]||(R[e]=function(e){var t=function(e){var t=O.exec(""+e);return null===t?null:t[1]?[t[1],t[2]]:[t[4],t[3]]}(e);if(null===t)return D;var n,r,s={num:0,q:"d",name:"",type:"M",step:0,dir:-1,simple:1,alt:0,oct:0,semitones:0,chroma:0,ic:0};return s.num=+t[0],s.q=t[1],s.step=function(e){return(Math.abs(e)-1)%7}(s.num),s.type="PMMPPMM"[s.step],"M"===s.type&&"P"===s.q?D:(s.name=""+s.num+s.q,s.dir=s.num<0?-1:1,s.simple=8===s.num||-8===s.num?s.num:s.dir*(s.step+1),s.alt=(n=s.type,"M"===(r=s.q)&&"M"===n||"P"===r&&"P"===n?0:"m"===r&&"M"===n?-1:/^A+$/.test(r)?r.length:/^d+$/.test(r)?"P"===n?-r.length:-r.length-1:null),s.oct=Math.floor((Math.abs(s.num)-1)/7),s.semitones=s.dir*(_[s.step]+s.alt+12*s.oct),s.chroma=(s.dir*(_[s.step]+s.alt)%12+12)%12,Object.freeze(s))}(e))}"P m M m M P d P m M m M".split(" ");var F=[0,2,4,-1,1,3,5],L=F.map((function(e){return Math.floor(7*e/12)})),q=[3,0,4,1,5,2,6],B=function(e,t,n){var r=q[function(e){var t=(e+1)%7;return t<0?7+t:t}(e)],s=Math.floor((e+1)/7);return void 0===t?{step:r,alt:s,dir:n}:{step:r,alt:s,oct:t+4*s+L[r],dir:n}},W=function(e){return function(e,t){return void 0===t&&(t={}),function(n){return t[n]||(t[n]=e(n))}}((function(t){var n=e(t);return null===n.name?null:function(e){var t=e.step,n=e.alt,r=e.oct,s=e.dir;void 0===s&&(s=1);var a=F[t]+7*n;return null===r?[s*a]:[s*a,s*(r-L[t]-4*n)]}(n)}))},V=W(f),j=W(z);function U(e,t){if(1===arguments.length)return function(t){return U(e,t)};var n=V(e),r=j(t);if(null===n||null===r)return null;var s=1===n.length?[n[0]+r[0]]:[n[0]+r[0],n[1]+r[1]];return E(B(s[0],s[1]))}var G=n(69),H=n(70),K=function(e){return k(e)||function(e){return z(e).chroma}(e)||0},Q=function(e){return parseInt(X(e),2)};function X(e){if(function(e){return J.test(e)}(e))return e;if(!Array.isArray(e))return"";var t=[0,0,0,0,0,0,0,0,0,0,0,0];return e.map(K).forEach((function(e){t[e]=1})),t.join("")}var J=/^[01]{12}$/;function Y(e,t){return arguments.length>1?Y(e)(t):(e=Q(e),function(t){return(t=Q(t))!==e&&(t&e)===t})}function Z(e,t){return arguments.length>1?Z(e)(t):(e=Q(e),function(t){return(t=Q(t))!==e&&(t|e)===t})}"1P 2m 2M 3m 3M 4P 5d 5P 6m 6M 7m 7M".split(" ");var ee=function(e){var t=Object.keys(e).sort(),n=[],r=[],s=function(e,t,s){n[e]=t,r[s]=r[s]||[],r[s].push(e)};t.forEach((function(t){var n=e[t][0].split(" "),r=e[t][1],a=X(n);s(t,n,a),r&&r.forEach((function(e){return s(e,n,a)}))}));var a=Object.keys(n).sort(),o=function(e){return n[e]};return o.names=function(e){return"string"==typeof e?(r[e]||[]).slice():(!0===e?a:t).slice()},o},te=ee(G),ne=ee(H);Object.freeze({name:null,intervals:[],names:[],chroma:null,setnum:null}),te.names;var re=ne.names,se=Object.freeze({name:null,names:[],intervals:[],chroma:null,setnum:null}),ae=function(e,t){return void 0===t&&(t={}),function(e){return t[e]||(t[e]=function(e){var t=ne(e);if(!t)return se;var n={intervals:t,name:e};return n.chroma=X(t),n.setnum=parseInt(n.chroma,2),n.names=ne.names(n.chroma),n}(e))}}(),oe=function(e){return ae(he(e)[1]).intervals};function ie(e,t){if(t)return ae(t).intervals.map(U(e));var n=he(e),r=n[0],s=n[1];return ae(s).intervals.map(U(r))}var ue=function(e){return void 0!==ne(he(e)[1])},le=function(e){if(!oe(e).length)return[];var t=Z(oe(e));return ne.names().filter((function(e){return t(ne(e))}))},ce=function(e){var t=Y(oe(e));return ne.names().filter((function(e){return t(ne(e))}))},pe=/^(6|64|7|9|11|13)$/;function he(e){var t=p(e);return""===t[0]?["",e]:"A"===t[0]&&"ug"===t[3]?["","aug"]:pe.test(t[2])?[t[0]+t[1],t[2]+t[3]]:[t[0]+t[1]+t[2],t[3]]}var de=n(8);const fe=[["1P","3M","5P"],["1P","3m","5P"],["1P","3M","5A"],["1P","3m","5d"]];var me;!function(e){e[e.Major=0]="Major",e[e.Minor=1]="Minor",e[e.Augmented=2]="Augmented",e[e.Diminished=3]="Diminished",e[e.Other=4]="Other"}(me||(me={}));class ge extends Error{constructor(e){super(e),Object.setPrototypeOf(this,new.target.prototype)}}class ye extends Error{constructor(e){super(e),Object.setPrototypeOf(this,new.target.prototype)}}class be{static pitches(e){if(!s.tokenize(e)[0]||!s.exists(e))throw new ge("Unrecognized chord symbol: "+e);return s.notes(e).map(r.chroma)}static root(e){const t=s.tokenize(e)[0];if(!t)throw new ge("Chord symbol has unknown root: "+e);return r.chroma(t)}static quality(e){if(!s.exists(e))throw new ge("Unrecognized chord symbol: "+e);const t=s.intervals(e),n=fe.map((e=>e.every((e=>t.includes(e))))),r=n.indexOf(!0),a=n.lastIndexOf(!0);return r>=0&&r===a?r:me.Other}}class we{encodeProgression(e,t){const n=e.map((e=>this.encode(e))),r=Array.from(Array(t).keys()).map((e=>Math.floor(e*n.length/t)));return a.stack(r.map((e=>n[e])))}}function xe(e){switch(e){case"MajorMinorChordEncoder":return new Se;case"TriadChordEncoder":return new ve;case"PitchChordEncoder":return new ke;default:throw new Error("Unknown chord encoder type: "+e)}}class Se extends we{constructor(){super(...arguments),this.depth=1+2*de.NUM_PITCH_CLASSES}index(e){if(e===de.NO_CHORD)return 0;const t=be.root(e),n=1+be.quality(e)*de.NUM_PITCH_CLASSES+t;if(n>=this.depth)throw new ye("Chord is neither major nor minor: "+e);return n}encode(e){return a.tidy((()=>a.oneHot(a.tensor1d([this.index(e)],"int32"),this.depth).as1D()))}}class ve extends we{constructor(){super(...arguments),this.depth=1+4*de.NUM_PITCH_CLASSES}index(e){if(e===de.NO_CHORD)return 0;const t=be.root(e),n=1+be.quality(e)*de.NUM_PITCH_CLASSES+t;if(n>=this.depth)throw new ye("Chord is not a standard triad: "+e);return n}encode(e){return a.tidy((()=>a.oneHot(a.tensor1d([this.index(e)],"int32"),this.depth).as1D()))}}class ke extends we{constructor(){super(...arguments),this.depth=1+3*de.NUM_PITCH_CLASSES}encode(e){return a.tidy((()=>{if(e===de.NO_CHORD)return a.oneHot(a.tensor1d([0],"int32"),this.depth).as1D();const t=be.root(e),n=a.oneHot(a.tensor1d([t],"int32"),de.NUM_PITCH_CLASSES).as1D(),r=a.buffer([de.NUM_PITCH_CLASSES]);be.pitches(e).forEach((e=>r.set(1,e)));const s=r.toTensor().as1D(),o=n;return a.concat1d([a.tensor1d([0]),n,s,o])}))}}},48:function(e,t,n){"use strict";e.exports=n(49)},49:function(e,t,n){"use strict";var r=t;function s(){r.util._configure(),r.Writer._configure(r.BufferWriter),r.Reader._configure(r.BufferReader)}r.build="minimal",r.Writer=n(35),r.BufferWriter=n(58),r.Reader=n(36),r.BufferReader=n(59),r.util=n(18),r.rpc=n(60),r.roots=n(62),r.configure=s,s()},50:function(e,t,n){"use strict";e.exports=function(e,t){for(var n=new Array(arguments.length-1),r=0,s=2,a=!0;s<arguments.length;)n[r++]=arguments[s++];return new Promise((function(s,o){n[r]=function(e){if(a)if(a=!1,e)o(e);else{for(var t=new Array(arguments.length-1),n=0;n<t.length;)t[n++]=arguments[n];s.apply(null,t)}};try{e.apply(t||null,n)}catch(e){a&&(a=!1,o(e))}}))}},51:function(e,t,n){"use strict";var r=t;r.length=function(e){var t=e.length;if(!t)return 0;for(var n=0;--t%4>1&&"="===e.charAt(t);)++n;return Math.ceil(3*e.length)/4-n};for(var s=new Array(64),a=new Array(123),o=0;o<64;)a[s[o]=o<26?o+65:o<52?o+71:o<62?o-4:o-59|43]=o++;r.encode=function(e,t,n){for(var r,a=null,o=[],i=0,u=0;t<n;){var l=e[t++];switch(u){case 0:o[i++]=s[l>>2],r=(3&l)<<4,u=1;break;case 1:o[i++]=s[r|l>>4],r=(15&l)<<2,u=2;break;case 2:o[i++]=s[r|l>>6],o[i++]=s[63&l],u=0}i>8191&&((a||(a=[])).push(String.fromCharCode.apply(String,o)),i=0)}return u&&(o[i++]=s[r],o[i++]=61,1===u&&(o[i++]=61)),a?(i&&a.push(String.fromCharCode.apply(String,o.slice(0,i))),a.join("")):String.fromCharCode.apply(String,o.slice(0,i))},r.decode=function(e,t,n){for(var r,s=n,o=0,i=0;i<e.length;){var u=e.charCodeAt(i++);if(61===u&&o>1)break;if(void 0===(u=a[u]))throw Error("invalid encoding");switch(o){case 0:r=u,o=1;break;case 1:t[n++]=r<<2|(48&u)>>4,r=u,o=2;break;case 2:t[n++]=(15&r)<<4|(60&u)>>2,r=u,o=3;break;case 3:t[n++]=(3&r)<<6|u,o=0}}if(1===o)throw Error("invalid encoding");return n-s},r.test=function(e){return/^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(e)}},52:function(e,t,n){"use strict";function r(){this._listeners={}}e.exports=r,r.prototype.on=function(e,t,n){return(this._listeners[e]||(this._listeners[e]=[])).push({fn:t,ctx:n||this}),this},r.prototype.off=function(e,t){if(void 0===e)this._listeners={};else if(void 0===t)this._listeners[e]=[];else for(var n=this._listeners[e],r=0;r<n.length;)n[r].fn===t?n.splice(r,1):++r;return this},r.prototype.emit=function(e){var t=this._listeners[e];if(t){for(var n=[],r=1;r<arguments.length;)n.push(arguments[r++]);for(r=0;r<t.length;)t[r].fn.apply(t[r++].ctx,n)}return this}},53:function(e,t,n){"use strict";function r(e){return"undefined"!=typeof Float32Array?function(){var t=new Float32Array([-0]),n=new Uint8Array(t.buffer),r=128===n[3];function s(e,r,s){t[0]=e,r[s]=n[0],r[s+1]=n[1],r[s+2]=n[2],r[s+3]=n[3]}function a(e,r,s){t[0]=e,r[s]=n[3],r[s+1]=n[2],r[s+2]=n[1],r[s+3]=n[0]}function o(e,r){return n[0]=e[r],n[1]=e[r+1],n[2]=e[r+2],n[3]=e[r+3],t[0]}function i(e,r){return n[3]=e[r],n[2]=e[r+1],n[1]=e[r+2],n[0]=e[r+3],t[0]}e.writeFloatLE=r?s:a,e.writeFloatBE=r?a:s,e.readFloatLE=r?o:i,e.readFloatBE=r?i:o}():function(){function t(e,t,n,r){var s=t<0?1:0;if(s&&(t=-t),0===t)e(1/t>0?0:2147483648,n,r);else if(isNaN(t))e(2143289344,n,r);else if(t>34028234663852886e22)e((s<<31|2139095040)>>>0,n,r);else if(t<11754943508222875e-54)e((s<<31|Math.round(t/1401298464324817e-60))>>>0,n,r);else{var a=Math.floor(Math.log(t)/Math.LN2);e((s<<31|a+127<<23|8388607&Math.round(t*Math.pow(2,-a)*8388608))>>>0,n,r)}}function n(e,t,n){var r=e(t,n),s=2*(r>>31)+1,a=r>>>23&255,o=8388607&r;return 255===a?o?NaN:s*(1/0):0===a?1401298464324817e-60*s*o:s*Math.pow(2,a-150)*(o+8388608)}e.writeFloatLE=t.bind(null,s),e.writeFloatBE=t.bind(null,a),e.readFloatLE=n.bind(null,o),e.readFloatBE=n.bind(null,i)}(),"undefined"!=typeof Float64Array?function(){var t=new Float64Array([-0]),n=new Uint8Array(t.buffer),r=128===n[7];function s(e,r,s){t[0]=e,r[s]=n[0],r[s+1]=n[1],r[s+2]=n[2],r[s+3]=n[3],r[s+4]=n[4],r[s+5]=n[5],r[s+6]=n[6],r[s+7]=n[7]}function a(e,r,s){t[0]=e,r[s]=n[7],r[s+1]=n[6],r[s+2]=n[5],r[s+3]=n[4],r[s+4]=n[3],r[s+5]=n[2],r[s+6]=n[1],r[s+7]=n[0]}function o(e,r){return n[0]=e[r],n[1]=e[r+1],n[2]=e[r+2],n[3]=e[r+3],n[4]=e[r+4],n[5]=e[r+5],n[6]=e[r+6],n[7]=e[r+7],t[0]}function i(e,r){return n[7]=e[r],n[6]=e[r+1],n[5]=e[r+2],n[4]=e[r+3],n[3]=e[r+4],n[2]=e[r+5],n[1]=e[r+6],n[0]=e[r+7],t[0]}e.writeDoubleLE=r?s:a,e.writeDoubleBE=r?a:s,e.readDoubleLE=r?o:i,e.readDoubleBE=r?i:o}():function(){function t(e,t,n,r,s,a){var o=r<0?1:0;if(o&&(r=-r),0===r)e(0,s,a+t),e(1/r>0?0:2147483648,s,a+n);else if(isNaN(r))e(0,s,a+t),e(2146959360,s,a+n);else if(r>17976931348623157e292)e(0,s,a+t),e((o<<31|2146435072)>>>0,s,a+n);else{var i;if(r<22250738585072014e-324)e((i=r/5e-324)>>>0,s,a+t),e((o<<31|i/4294967296)>>>0,s,a+n);else{var u=Math.floor(Math.log(r)/Math.LN2);1024===u&&(u=1023),e(4503599627370496*(i=r*Math.pow(2,-u))>>>0,s,a+t),e((o<<31|u+1023<<20|1048576*i&1048575)>>>0,s,a+n)}}}function n(e,t,n,r,s){var a=e(r,s+t),o=e(r,s+n),i=2*(o>>31)+1,u=o>>>20&2047,l=4294967296*(1048575&o)+a;return 2047===u?l?NaN:i*(1/0):0===u?5e-324*i*l:i*Math.pow(2,u-1075)*(l+4503599627370496)}e.writeDoubleLE=t.bind(null,s,0,4),e.writeDoubleBE=t.bind(null,a,4,0),e.readDoubleLE=n.bind(null,o,0,4),e.readDoubleBE=n.bind(null,i,4,0)}(),e}function s(e,t,n){t[n]=255&e,t[n+1]=e>>>8&255,t[n+2]=e>>>16&255,t[n+3]=e>>>24}function a(e,t,n){t[n]=e>>>24,t[n+1]=e>>>16&255,t[n+2]=e>>>8&255,t[n+3]=255&e}function o(e,t){return(e[t]|e[t+1]<<8|e[t+2]<<16|e[t+3]<<24)>>>0}function i(e,t){return(e[t]<<24|e[t+1]<<16|e[t+2]<<8|e[t+3])>>>0}e.exports=r(r)},54:function(module,exports,__webpack_require__){"use strict";function inquire(moduleName){try{var mod=eval("quire".replace(/^/,"re"))(moduleName);if(mod&&(mod.length||Object.keys(mod).length))return mod}catch(e){}return null}module.exports=inquire},55:function(e,t,n){"use strict";var r=t;r.length=function(e){for(var t=0,n=0,r=0;r<e.length;++r)(n=e.charCodeAt(r))<128?t+=1:n<2048?t+=2:55296==(64512&n)&&56320==(64512&e.charCodeAt(r+1))?(++r,t+=4):t+=3;return t},r.read=function(e,t,n){if(n-t<1)return"";for(var r,s=null,a=[],o=0;t<n;)(r=e[t++])<128?a[o++]=r:r>191&&r<224?a[o++]=(31&r)<<6|63&e[t++]:r>239&&r<365?(r=((7&r)<<18|(63&e[t++])<<12|(63&e[t++])<<6|63&e[t++])-65536,a[o++]=55296+(r>>10),a[o++]=56320+(1023&r)):a[o++]=(15&r)<<12|(63&e[t++])<<6|63&e[t++],o>8191&&((s||(s=[])).push(String.fromCharCode.apply(String,a)),o=0);return s?(o&&s.push(String.fromCharCode.apply(String,a.slice(0,o))),s.join("")):String.fromCharCode.apply(String,a.slice(0,o))},r.write=function(e,t,n){for(var r,s,a=n,o=0;o<e.length;++o)(r=e.charCodeAt(o))<128?t[n++]=r:r<2048?(t[n++]=r>>6|192,t[n++]=63&r|128):55296==(64512&r)&&56320==(64512&(s=e.charCodeAt(o+1)))?(r=65536+((1023&r)<<10)+(1023&s),++o,t[n++]=r>>18|240,t[n++]=r>>12&63|128,t[n++]=r>>6&63|128,t[n++]=63&r|128):(t[n++]=r>>12|224,t[n++]=r>>6&63|128,t[n++]=63&r|128);return n-a}},56:function(e,t,n){"use strict";e.exports=function(e,t,n){var r=n||8192,s=r>>>1,a=null,o=r;return function(n){if(n<1||n>s)return e(n);o+n>r&&(a=e(r),o=0);var i=t.call(a,o,o+=n);return 7&o&&(o=1+(7|o)),i}}},57:function(e,t,n){"use strict";e.exports=s;var r=n(18);function s(e,t){this.lo=e>>>0,this.hi=t>>>0}var a=s.zero=new s(0,0);a.toNumber=function(){return 0},a.zzEncode=a.zzDecode=function(){return this},a.length=function(){return 1};var o=s.zeroHash="\0\0\0\0\0\0\0\0";s.fromNumber=function(e){if(0===e)return a;var t=e<0;t&&(e=-e);var n=e>>>0,r=(e-n)/4294967296>>>0;return t&&(r=~r>>>0,n=~n>>>0,++n>4294967295&&(n=0,++r>4294967295&&(r=0))),new s(n,r)},s.from=function(e){if("number"==typeof e)return s.fromNumber(e);if(r.isString(e)){if(!r.Long)return s.fromNumber(parseInt(e,10));e=r.Long.fromString(e)}return e.low||e.high?new s(e.low>>>0,e.high>>>0):a},s.prototype.toNumber=function(e){if(!e&&this.hi>>>31){var t=1+~this.lo>>>0,n=~this.hi>>>0;return t||(n=n+1>>>0),-(t+4294967296*n)}return this.lo+4294967296*this.hi},s.prototype.toLong=function(e){return r.Long?new r.Long(0|this.lo,0|this.hi,Boolean(e)):{low:0|this.lo,high:0|this.hi,unsigned:Boolean(e)}};var i=String.prototype.charCodeAt;s.fromHash=function(e){return e===o?a:new s((i.call(e,0)|i.call(e,1)<<8|i.call(e,2)<<16|i.call(e,3)<<24)>>>0,(i.call(e,4)|i.call(e,5)<<8|i.call(e,6)<<16|i.call(e,7)<<24)>>>0)},s.prototype.toHash=function(){return String.fromCharCode(255&this.lo,this.lo>>>8&255,this.lo>>>16&255,this.lo>>>24,255&this.hi,this.hi>>>8&255,this.hi>>>16&255,this.hi>>>24)},s.prototype.zzEncode=function(){var e=this.hi>>31;return this.hi=((this.hi<<1|this.lo>>>31)^e)>>>0,this.lo=(this.lo<<1^e)>>>0,this},s.prototype.zzDecode=function(){var e=-(1&this.lo);return this.lo=((this.lo>>>1|this.hi<<31)^e)>>>0,this.hi=(this.hi>>>1^e)>>>0,this},s.prototype.length=function(){var e=this.lo,t=(this.lo>>>28|this.hi<<4)>>>0,n=this.hi>>>24;return 0===n?0===t?e<16384?e<128?1:2:e<2097152?3:4:t<16384?t<128?5:6:t<2097152?7:8:n<128?9:10}},58:function(e,t,n){"use strict";e.exports=a;var r=n(35);(a.prototype=Object.create(r.prototype)).constructor=a;var s=n(18);function a(){r.call(this)}function o(e,t,n){e.length<40?s.utf8.write(e,t,n):t.utf8Write?t.utf8Write(e,n):t.write(e,n)}a._configure=function(){a.alloc=s._Buffer_allocUnsafe,a.writeBytesBuffer=s.Buffer&&s.Buffer.prototype instanceof Uint8Array&&"set"===s.Buffer.prototype.set.name?function(e,t,n){t.set(e,n)}:function(e,t,n){if(e.copy)e.copy(t,n,0,e.length);else for(var r=0;r<e.length;)t[n++]=e[r++]}},a.prototype.bytes=function(e){s.isString(e)&&(e=s._Buffer_from(e,"base64"));var t=e.length>>>0;return this.uint32(t),t&&this._push(a.writeBytesBuffer,t,e),this},a.prototype.string=function(e){var t=s.Buffer.byteLength(e);return this.uint32(t),t&&this._push(o,t,e),this},a._configure()},59:function(e,t,n){"use strict";e.exports=a;var r=n(36);(a.prototype=Object.create(r.prototype)).constructor=a;var s=n(18);function a(e){r.call(this,e)}a._configure=function(){s.Buffer&&(a.prototype._slice=s.Buffer.prototype.slice)},a.prototype.string=function(){var e=this.uint32();return this.buf.utf8Slice?this.buf.utf8Slice(this.pos,this.pos=Math.min(this.pos+e,this.len)):this.buf.toString("utf-8",this.pos,this.pos=Math.min(this.pos+e,this.len))},a._configure()},60:function(e,t,n){"use strict";t.Service=n(61)},61:function(e,t,n){"use strict";e.exports=s;var r=n(18);function s(e,t,n){if("function"!=typeof e)throw TypeError("rpcImpl must be a function");r.EventEmitter.call(this),this.rpcImpl=e,this.requestDelimited=Boolean(t),this.responseDelimited=Boolean(n)}(s.prototype=Object.create(r.EventEmitter.prototype)).constructor=s,s.prototype.rpcCall=function e(t,n,s,a,o){if(!a)throw TypeError("request must be specified");var i=this;if(!o)return r.asPromise(e,i,t,n,s,a);if(i.rpcImpl)try{return i.rpcImpl(t,n[i.requestDelimited?"encodeDelimited":"encode"](a).finish(),(function(e,n){if(e)return i.emit("error",e,t),o(e);if(null!==n){if(!(n instanceof s))try{n=s[i.responseDelimited?"decodeDelimited":"decode"](n)}catch(e){return i.emit("error",e,t),o(e)}return i.emit("data",n,t),o(null,n)}i.end(!0)}))}catch(e){return i.emit("error",e,t),void setTimeout((function(){o(e)}),0)}else setTimeout((function(){o(Error("already ended"))}),0)},s.prototype.end=function(e){return this.rpcImpl&&(e||this.rpcImpl(null,null,null),this.rpcImpl=null,this.emit("end").off()),this}},62:function(e,t,n){"use strict";e.exports={}},69:function(e){e.exports=JSON.parse('{"chromatic":["1P 2m 2M 3m 3M 4P 4A 5P 6m 6M 7m 7M"],"lydian":["1P 2M 3M 4A 5P 6M 7M"],"major":["1P 2M 3M 4P 5P 6M 7M",["ionian"]],"mixolydian":["1P 2M 3M 4P 5P 6M 7m",["dominant"]],"dorian":["1P 2M 3m 4P 5P 6M 7m"],"aeolian":["1P 2M 3m 4P 5P 6m 7m",["minor"]],"phrygian":["1P 2m 3m 4P 5P 6m 7m"],"locrian":["1P 2m 3m 4P 5d 6m 7m"],"melodic minor":["1P 2M 3m 4P 5P 6M 7M"],"melodic minor second mode":["1P 2m 3m 4P 5P 6M 7m"],"lydian augmented":["1P 2M 3M 4A 5A 6M 7M"],"lydian dominant":["1P 2M 3M 4A 5P 6M 7m",["lydian b7"]],"melodic minor fifth mode":["1P 2M 3M 4P 5P 6m 7m",["hindu","mixolydian b6M"]],"locrian #2":["1P 2M 3m 4P 5d 6m 7m",["half-diminished"]],"altered":["1P 2m 3m 3M 5d 6m 7m",["super locrian","diminished whole tone","pomeroy"]],"harmonic minor":["1P 2M 3m 4P 5P 6m 7M"],"phrygian dominant":["1P 2m 3M 4P 5P 6m 7m",["spanish","phrygian major"]],"half-whole diminished":["1P 2m 3m 3M 4A 5P 6M 7m",["dominant diminished"]],"diminished":["1P 2M 3m 4P 5d 6m 6M 7M",["whole-half diminished"]],"major pentatonic":["1P 2M 3M 5P 6M",["pentatonic"]],"lydian pentatonic":["1P 3M 4A 5P 7M",["chinese"]],"mixolydian pentatonic":["1P 3M 4P 5P 7m",["indian"]],"locrian pentatonic":["1P 3m 4P 5d 7m",["minor seven flat five pentatonic"]],"minor pentatonic":["1P 3m 4P 5P 7m"],"minor six pentatonic":["1P 3m 4P 5P 6M"],"minor hexatonic":["1P 2M 3m 4P 5P 7M"],"flat three pentatonic":["1P 2M 3m 5P 6M",["kumoi"]],"flat six pentatonic":["1P 2M 3M 5P 6m"],"major flat two pentatonic":["1P 2m 3M 5P 6M"],"whole tone pentatonic":["1P 3M 5d 6m 7m"],"ionian pentatonic":["1P 3M 4P 5P 7M"],"lydian #5P pentatonic":["1P 3M 4A 5A 7M"],"lydian dominant pentatonic":["1P 3M 4A 5P 7m"],"minor #7M pentatonic":["1P 3m 4P 5P 7M"],"super locrian pentatonic":["1P 3m 4d 5d 7m"],"in-sen":["1P 2m 4P 5P 7m"],"iwato":["1P 2m 4P 5d 7m"],"hirajoshi":["1P 2M 3m 5P 6m"],"kumoijoshi":["1P 2m 4P 5P 6m"],"pelog":["1P 2m 3m 5P 6m"],"vietnamese 1":["1P 3m 4P 5P 6m"],"vietnamese 2":["1P 3m 4P 5P 7m"],"prometheus":["1P 2M 3M 4A 6M 7m"],"prometheus neopolitan":["1P 2m 3M 4A 6M 7m"],"ritusen":["1P 2M 4P 5P 6M"],"scriabin":["1P 2m 3M 5P 6M"],"piongio":["1P 2M 4P 5P 6M 7m"],"major blues":["1P 2M 3m 3M 5P 6M"],"minor blues":["1P 3m 4P 5d 5P 7m",["blues"]],"composite blues":["1P 2M 3m 3M 4P 5d 5P 6M 7m"],"augmented":["1P 2A 3M 5P 5A 7M"],"augmented heptatonic":["1P 2A 3M 4P 5P 5A 7M"],"dorian #4":["1P 2M 3m 4A 5P 6M 7m"],"lydian diminished":["1P 2M 3m 4A 5P 6M 7M"],"whole tone":["1P 2M 3M 4A 5A 7m"],"leading whole tone":["1P 2M 3M 4A 5A 7m 7M"],"lydian minor":["1P 2M 3M 4A 5P 6m 7m"],"locrian major":["1P 2M 3M 4P 5d 6m 7m",["arabian"]],"neopolitan":["1P 2m 3m 4P 5P 6m 7M"],"neopolitan minor":["1P 2m 3m 4P 5P 6m 7M"],"neopolitan major":["1P 2m 3m 4P 5P 6M 7M",["dorian b2"]],"neopolitan major pentatonic":["1P 3M 4P 5d 7m"],"romanian minor":["1P 2M 3m 5d 5P 6M 7m"],"double harmonic lydian":["1P 2m 3M 4A 5P 6m 7M"],"harmonic major":["1P 2M 3M 4P 5P 6m 7M"],"double harmonic major":["1P 2m 3M 4P 5P 6m 7M",["gypsy"]],"egyptian":["1P 2M 4P 5P 7m"],"hungarian minor":["1P 2M 3m 4A 5P 6m 7M"],"hungarian major":["1P 2A 3M 4A 5P 6M 7m"],"oriental":["1P 2m 3M 4P 5d 6M 7m"],"spanish heptatonic":["1P 2m 3m 3M 4P 5P 6m 7m"],"flamenco":["1P 2m 3m 3M 4A 5P 7m"],"balinese":["1P 2m 3m 4P 5P 6m 7M"],"todi raga":["1P 2m 3m 4A 5P 6m 7M"],"malkos raga":["1P 3m 4P 6m 7m"],"kafi raga":["1P 3m 3M 4P 5P 6M 7m 7M"],"purvi raga":["1P 2m 3M 4P 4A 5P 6m 7M"],"persian":["1P 2m 3M 4P 5d 6m 7M"],"bebop":["1P 2M 3M 4P 5P 6M 7m 7M"],"bebop dominant":["1P 2M 3M 4P 5P 6M 7m 7M"],"bebop minor":["1P 2M 3m 3M 4P 5P 6M 7m"],"bebop major":["1P 2M 3M 4P 5P 5A 6M 7M"],"bebop locrian":["1P 2m 3m 4P 5d 5P 6m 7m"],"minor bebop":["1P 2M 3m 4P 5P 6m 7m 7M"],"mystery #1":["1P 2m 3M 5d 6m 7m"],"enigmatic":["1P 2m 3M 5d 6m 7m 7M"],"minor six diminished":["1P 2M 3m 4P 5P 6m 6M 7M"],"ionian augmented":["1P 2M 3M 4P 5A 6M 7M"],"lydian #9":["1P 2m 3M 4A 5P 6M 7M"],"ichikosucho":["1P 2M 3M 4P 5d 5P 6M 7M"],"six tone symmetric":["1P 2m 3M 4P 5A 6M"]}')},70:function(e){e.exports=JSON.parse('{"4":["1P 4P 7m 10m",["quartal"]],"5":["1P 5P"],"7":["1P 3M 5P 7m",["Dominant","Dom"]],"9":["1P 3M 5P 7m 9M",["79"]],"11":["1P 5P 7m 9M 11P"],"13":["1P 3M 5P 7m 9M 13M",["13_"]],"64":["5P 8P 10M"],"M":["1P 3M 5P",["Major",""]],"M#5":["1P 3M 5A",["augmented","maj#5","Maj#5","+","aug"]],"M#5add9":["1P 3M 5A 9M",["+add9"]],"M13":["1P 3M 5P 7M 9M 13M",["maj13","Maj13"]],"M13#11":["1P 3M 5P 7M 9M 11A 13M",["maj13#11","Maj13#11","M13+4","M13#4"]],"M6":["1P 3M 5P 13M",["6"]],"M6#11":["1P 3M 5P 6M 11A",["M6b5","6#11","6b5"]],"M69":["1P 3M 5P 6M 9M",["69"]],"M69#11":["1P 3M 5P 6M 9M 11A"],"M7#11":["1P 3M 5P 7M 11A",["maj7#11","Maj7#11","M7+4","M7#4"]],"M7#5":["1P 3M 5A 7M",["maj7#5","Maj7#5","maj9#5","M7+"]],"M7#5sus4":["1P 4P 5A 7M"],"M7#9#11":["1P 3M 5P 7M 9A 11A"],"M7add13":["1P 3M 5P 6M 7M 9M"],"M7b5":["1P 3M 5d 7M"],"M7b6":["1P 3M 6m 7M"],"M7b9":["1P 3M 5P 7M 9m"],"M7sus4":["1P 4P 5P 7M"],"M9":["1P 3M 5P 7M 9M",["maj9","Maj9"]],"M9#11":["1P 3M 5P 7M 9M 11A",["maj9#11","Maj9#11","M9+4","M9#4"]],"M9#5":["1P 3M 5A 7M 9M",["Maj9#5"]],"M9#5sus4":["1P 4P 5A 7M 9M"],"M9b5":["1P 3M 5d 7M 9M"],"M9sus4":["1P 4P 5P 7M 9M"],"Madd9":["1P 3M 5P 9M",["2","add9","add2"]],"Maj7":["1P 3M 5P 7M",["maj7","M7"]],"Mb5":["1P 3M 5d"],"Mb6":["1P 3M 13m"],"Msus2":["1P 2M 5P",["add9no3","sus2"]],"Msus4":["1P 4P 5P",["sus","sus4"]],"Maddb9":["1P 3M 5P 9m"],"11b9":["1P 5P 7m 9m 11P"],"13#11":["1P 3M 5P 7m 9M 11A 13M",["13+4","13#4"]],"13#9":["1P 3M 5P 7m 9A 13M",["13#9_"]],"13#9#11":["1P 3M 5P 7m 9A 11A 13M"],"13b5":["1P 3M 5d 6M 7m 9M"],"13b9":["1P 3M 5P 7m 9m 13M"],"13b9#11":["1P 3M 5P 7m 9m 11A 13M"],"13no5":["1P 3M 7m 9M 13M"],"13sus4":["1P 4P 5P 7m 9M 13M",["13sus"]],"69#11":["1P 3M 5P 6M 9M 11A"],"7#11":["1P 3M 5P 7m 11A",["7+4","7#4","7#11_","7#4_"]],"7#11b13":["1P 3M 5P 7m 11A 13m",["7b5b13"]],"7#5":["1P 3M 5A 7m",["+7","7aug","aug7"]],"7#5#9":["1P 3M 5A 7m 9A",["7alt","7#5#9_","7#9b13_"]],"7#5b9":["1P 3M 5A 7m 9m"],"7#5b9#11":["1P 3M 5A 7m 9m 11A"],"7#5sus4":["1P 4P 5A 7m"],"7#9":["1P 3M 5P 7m 9A",["7#9_"]],"7#9#11":["1P 3M 5P 7m 9A 11A",["7b5#9"]],"7#9#11b13":["1P 3M 5P 7m 9A 11A 13m"],"7#9b13":["1P 3M 5P 7m 9A 13m"],"7add6":["1P 3M 5P 7m 13M",["67","7add13"]],"7b13":["1P 3M 7m 13m"],"7b5":["1P 3M 5d 7m"],"7b6":["1P 3M 5P 6m 7m"],"7b9":["1P 3M 5P 7m 9m"],"7b9#11":["1P 3M 5P 7m 9m 11A",["7b5b9"]],"7b9#9":["1P 3M 5P 7m 9m 9A"],"7b9b13":["1P 3M 5P 7m 9m 13m"],"7b9b13#11":["1P 3M 5P 7m 9m 11A 13m",["7b9#11b13","7b5b9b13"]],"7no5":["1P 3M 7m"],"7sus4":["1P 4P 5P 7m",["7sus"]],"7sus4b9":["1P 4P 5P 7m 9m",["susb9","7susb9","7b9sus","7b9sus4","phryg"]],"7sus4b9b13":["1P 4P 5P 7m 9m 13m",["7b9b13sus4"]],"9#11":["1P 3M 5P 7m 9M 11A",["9+4","9#4","9#11_","9#4_"]],"9#11b13":["1P 3M 5P 7m 9M 11A 13m",["9b5b13"]],"9#5":["1P 3M 5A 7m 9M",["9+"]],"9#5#11":["1P 3M 5A 7m 9M 11A"],"9b13":["1P 3M 7m 9M 13m"],"9b5":["1P 3M 5d 7m 9M"],"9no5":["1P 3M 7m 9M"],"9sus4":["1P 4P 5P 7m 9M",["9sus"]],"m":["1P 3m 5P"],"m#5":["1P 3m 5A",["m+","mb6"]],"m11":["1P 3m 5P 7m 9M 11P",["_11"]],"m11A 5":["1P 3m 6m 7m 9M 11P"],"m11b5":["1P 3m 7m 12d 2M 4P",["h11","_11b5"]],"m13":["1P 3m 5P 7m 9M 11P 13M",["_13"]],"m6":["1P 3m 4P 5P 13M",["_6"]],"m69":["1P 3m 5P 6M 9M",["_69"]],"m7":["1P 3m 5P 7m",["minor7","_","_7"]],"m7#5":["1P 3m 6m 7m"],"m7add11":["1P 3m 5P 7m 11P",["m7add4"]],"m7b5":["1P 3m 5d 7m",["half-diminished","h7","_7b5"]],"m9":["1P 3m 5P 7m 9M",["_9"]],"m9#5":["1P 3m 6m 7m 9M"],"m9b5":["1P 3m 7m 12d 2M",["h9","-9b5"]],"mMaj7":["1P 3m 5P 7M",["mM7","_M7"]],"mMaj7b6":["1P 3m 5P 6m 7M",["mM7b6"]],"mM9":["1P 3m 5P 7M 9M",["mMaj9","-M9"]],"mM9b6":["1P 3m 5P 6m 7M 9M",["mMaj9b6"]],"mb6M7":["1P 3m 6m 7M"],"mb6b9":["1P 3m 6m 9m"],"o":["1P 3m 5d",["mb5","dim"]],"o7":["1P 3m 5d 13M",["diminished","m6b5","dim7"]],"o7M7":["1P 3m 5d 6M 7M"],"oM7":["1P 3m 5d 7M"],"sus24":["1P 2M 4P 5P",["sus4add9"]],"+add#9":["1P 3M 5A 9A"],"madd4":["1P 3m 4P 5P"],"madd9":["1P 3m 5P 9M"]}')},8:function(e,t,n){"use strict";n.r(t),n.d(t,"DEFAULT_QUARTERS_PER_MINUTE",(function(){return r})),n.d(t,"DEFAULT_STEPS_PER_BAR",(function(){return s})),n.d(t,"DEFAULT_STEPS_PER_QUARTER",(function(){return a})),n.d(t,"DEFAULT_STEPS_PER_SECOND",(function(){return o})),n.d(t,"DEFAULT_VELOCITY",(function(){return i})),n.d(t,"DEFAULT_PROGRAM",(function(){return u})),n.d(t,"DEFAULT_TICKS_PER_QUARTER",(function(){return l})),n.d(t,"DEFAULT_CHANNEL",(function(){return c})),n.d(t,"DRUM_CHANNEL",(function(){return p})),n.d(t,"NON_DRUM_CHANNELS",(function(){return h})),n.d(t,"MIN_MIDI_VELOCITY",(function(){return d})),n.d(t,"MAX_MIDI_VELOCITY",(function(){return f})),n.d(t,"MIDI_VELOCITIES",(function(){return m})),n.d(t,"NO_CHORD",(function(){return g})),n.d(t,"NUM_PITCH_CLASSES",(function(){return y})),n.d(t,"MIN_MIDI_PITCH",(function(){return b})),n.d(t,"MAX_MIDI_PITCH",(function(){return w})),n.d(t,"MIDI_PITCHES",(function(){return x})),n.d(t,"MIN_PIANO_PITCH",(function(){return S})),n.d(t,"MAX_PIANO_PITCH",(function(){return v})),n.d(t,"MIN_DRUM_PITCH",(function(){return k})),n.d(t,"MAX_DRUM_PITCH",(function(){return N})),n.d(t,"MIN_MIDI_PROGRAM",(function(){return I})),n.d(t,"MAX_MIDI_PROGRAM",(function(){return T})),n.d(t,"LO_CLICK_PITCH",(function(){return C})),n.d(t,"HI_CLICK_PITCH",(function(){return A})),n.d(t,"LO_CLICK_CLASS",(function(){return E})),n.d(t,"HI_CLICK_CLASS",(function(){return P}));const r=120,s=16,a=4,o=100,i=80,u=0,l=220,c=0,p=9,h=[0,1,2,3,4,5,6,7,8,10,11,12,13,14,15],d=0,f=127,m=f-d+1,g="N.C.",y=12,b=0,w=127,x=w-b+1,S=21,v=108,k=35,N=81,I=0,T=127,C=89,A=90,E=9,P=10},9:function(e,t,n){"use strict";n.d(t,"a",(function(){return r}));var r=n(38).tensorflow.magenta.NoteSequence}})},module.exports=t(__webpack_require__(563))},563:(e,t,n)=>{"use strict";n.r(t),n.d(t,{Abs:()=>je,Acos:()=>Ue,Acosh:()=>Ge,AdadeltaOptimizer:()=>Oi,AdagradOptimizer:()=>Di,AdamOptimizer:()=>Fi,AdamaxOptimizer:()=>ji,Add:()=>He,AddN:()=>Ke,All:()=>Qe,Any:()=>Xe,ArgMax:()=>Je,ArgMin:()=>Ye,Asin:()=>Ze,Asinh:()=>et,Atan:()=>tt,Atan2:()=>rt,Atanh:()=>nt,AvgPool:()=>st,AvgPool3D:()=>ot,AvgPool3DGrad:()=>it,AvgPoolGrad:()=>at,BatchMatMul:()=>ut,BatchToSpaceND:()=>lt,Bincount:()=>ct,BroadcastTo:()=>pt,Callback:()=>hv,CallbackList:()=>my,Cast:()=>ht,Ceil:()=>dt,ClipByValue:()=>ft,Complex:()=>mt,ComplexAbs:()=>gt,Concat:()=>yt,Conv2D:()=>bt,Conv2DBackpropFilter:()=>wt,Conv2DBackpropInput:()=>xt,Conv3D:()=>St,Conv3DBackpropFilterV2:()=>vt,Conv3DBackpropInputV2:()=>kt,Cos:()=>Nt,Cosh:()=>It,CropAndResize:()=>Ct,Cumsum:()=>Tt,CustomCallback:()=>by,DataStorage:()=>V,DenseBincount:()=>At,DepthToSpace:()=>Et,DepthwiseConv2dNative:()=>Pt,DepthwiseConv2dNativeBackpropFilter:()=>$t,DepthwiseConv2dNativeBackpropInput:()=>Mt,Diag:()=>Ot,Dilation2D:()=>_t,Dilation2DBackpropFilter:()=>Rt,Dilation2DBackpropInput:()=>Dt,ENV:()=>Be,EarlyStopping:()=>mv,Elu:()=>Ft,EluGrad:()=>Lt,Environment:()=>Fe,Equal:()=>Bt,Erf:()=>qt,Exp:()=>Wt,ExpandDims:()=>Vt,Expm1:()=>jt,FFT:()=>Ut,Fill:()=>Gt,FlipLeftRight:()=>Ht,Floor:()=>Kt,FloorDiv:()=>Qt,FromPixels:()=>Dr,FusedBatchNorm:()=>Xt,FusedConv2D:()=>Fr,FusedDepthwiseConv2D:()=>Lr,GatherNd:()=>Yt,GatherV2:()=>Jt,GraphModel:()=>Tk,Greater:()=>Zt,GreaterEqual:()=>en,History:()=>yy,IFFT:()=>nn,Identity:()=>tn,Imag:()=>rn,InputSpec:()=>ny,IsFinite:()=>sn,IsInf:()=>an,IsNan:()=>on,KernelBackend:()=>j,LRN:()=>bn,LRNGrad:()=>wn,LayerVariable:()=>Zg,LayersModel:()=>kb,LeakyRelu:()=>un,Less:()=>ln,LessEqual:()=>cn,LinSpace:()=>pn,Log:()=>hn,Log1p:()=>dn,LogSoftmax:()=>yn,LogicalAnd:()=>fn,LogicalNot:()=>mn,LogicalOr:()=>gn,Max:()=>xn,MaxPool:()=>vn,MaxPool3D:()=>Nn,MaxPool3DGrad:()=>In,MaxPoolGrad:()=>kn,MaxPoolWithArgmax:()=>Tn,Maximum:()=>Sn,Mean:()=>Cn,Min:()=>An,Minimum:()=>En,MirrorPad:()=>Pn,Mod:()=>$n,MomentumOptimizer:()=>Gi,Multinomial:()=>Mn,Multiply:()=>On,Neg:()=>_n,NonMaxSuppressionV3:()=>Rn,NonMaxSuppressionV4:()=>zn,NonMaxSuppressionV5:()=>Fn,NotEqual:()=>Dn,OP_SCOPE_SUFFIX:()=>Vs,OneHot:()=>qn,OnesLike:()=>Ln,Optimizer:()=>Mi,Pack:()=>Bn,PadV2:()=>Wn,Pool:()=>Vn,Pow:()=>jn,Prelu:()=>Un,Prod:()=>Gn,RMSPropOptimizer:()=>Hi,RNN:()=>Cw,Range:()=>Hn,Rank:()=>ys,Real:()=>Kn,RealDiv:()=>zt,Reciprocal:()=>Qn,Reduction:()=>Th,Relu:()=>Xn,Relu6:()=>nr,Reshape:()=>Jn,ResizeBilinear:()=>er,ResizeBilinearGrad:()=>tr,ResizeNearestNeighbor:()=>Yn,ResizeNearestNeighborGrad:()=>Zn,Reverse:()=>rr,RotateWithOffset:()=>Rr,Round:()=>sr,Rsqrt:()=>ar,SGDOptimizer:()=>Ui,ScatterNd:()=>or,Select:()=>ir,Selu:()=>ur,Sequential:()=>Tb,Sigmoid:()=>dr,Sign:()=>hr,Sin:()=>cr,Sinh:()=>pr,Slice:()=>lr,Softmax:()=>wr,Softplus:()=>fr,SpaceToBatchND:()=>yr,SparseToDense:()=>kr,SplitV:()=>br,Sqrt:()=>mr,Square:()=>Sr,SquaredDifference:()=>xr,Step:()=>_r,StridedSlice:()=>Nr,Sub:()=>vr,Sum:()=>gr,SymbolicTensor:()=>ry,Tan:()=>Ir,Tanh:()=>Tr,Tensor:()=>ms,TensorBuffer:()=>ps,Tile:()=>Cr,TopK:()=>Ar,Transpose:()=>Er,Unique:()=>Pr,Unpack:()=>$r,UnsortedSegmentSum:()=>Mr,Variable:()=>gs,ZerosLike:()=>Or,_FusedMatMul:()=>zr,abs:()=>Li,acos:()=>Ki,acosh:()=>Qi,add:()=>yi,addN:()=>Xi,addStrict:()=>Ip,all:()=>Ji,any:()=>Yi,argMax:()=>Zi,argMin:()=>eu,asin:()=>tu,asinh:()=>nu,atan:()=>ru,atan2:()=>su,atanh:()=>au,avgPool:()=>xu,avgPool3d:()=>Su,backend:()=>mi,backend_util:()=>g,basicLSTMCell:()=>Tu,batchNorm:()=>Au,batchNorm2d:()=>Eu,batchNorm3d:()=>Pu,batchNorm4d:()=>$u,batchToSpaceND:()=>Cu,bincount:()=>Mu,booleanMaskAsync:()=>bp,broadcastTo:()=>Ou,browser:()=>u,buffer:()=>La,callbacks:()=>gv,cast:()=>qa,ceil:()=>_u,clipByValue:()=>Du,clone:()=>Ba,complex:()=>Us,concat:()=>vu,concat1d:()=>Ru,concat2d:()=>zu,concat3d:()=>Fu,concat4d:()=>Lu,constraints:()=>b,conv1d:()=>Bu,conv2d:()=>qu,conv2dTranspose:()=>Vu,conv3d:()=>ju,conv3dTranspose:()=>Gu,copyRegisteredKernels:()=>Qr,cos:()=>Hu,cosh:()=>Ku,cosineWindow:()=>Wp,cumsum:()=>Qu,customGrad:()=>Ei,data:()=>B,denseBincount:()=>Xu,deprecationWarn:()=>Zo,depthToSpace:()=>Ju,depthwiseConv2d:()=>Yu,deregisterOp:()=>vv,device_util:()=>a,diag:()=>Zu,dilation2d:()=>el,disableDeprecationWarnings:()=>Yo,dispose:()=>ai,disposeVariables:()=>ei,div:()=>wi,divNoNan:()=>rl,divStrict:()=>Tp,dot:()=>sl,dropout:()=>qp,elu:()=>al,enableDebugMode:()=>Jo,enableProdMode:()=>Xo,enclosingPowerOfTwo:()=>Bp,engine:()=>ti,env:()=>Le,equal:()=>tl,equalStrict:()=>wp,erf:()=>ol,exp:()=>il,expandDims:()=>ul,expm1:()=>ll,eye:()=>pl,fft:()=>Kc,fill:()=>_i,findBackend:()=>hi,findBackendFactory:()=>di,floor:()=>hl,floorDiv:()=>bi,fused:()=>f,gather:()=>dl,gatherND:()=>Lp,gather_util:()=>l,getBackend:()=>ci,getGradient:()=>Vr,getKernel:()=>Wr,getKernelsForBackend:()=>jr,grad:()=>Ni,grads:()=>Ii,greater:()=>fl,greaterEqual:()=>ml,greaterEqualStrict:()=>xp,greaterStrict:()=>Sp,ifft:()=>Qc,imag:()=>gl,image:()=>Fh,inTopKAsync:()=>Vp,initializers:()=>w,input:()=>Pb,io:()=>o,irfft:()=>Xc,isFinite:()=>yl,isInf:()=>bl,isNaN:()=>wl,keep:()=>oi,kernel_impls:()=>y,layers:()=>x,leakyRelu:()=>xl,less:()=>Sl,lessEqual:()=>vl,lessEqualStrict:()=>vp,lessStrict:()=>kp,linalg:()=>Lh,linspace:()=>kl,loadGraphModel:()=>Ck,loadLayersModel:()=>Eb,localResponseNormalization:()=>Nl,log:()=>Il,log1p:()=>Tl,logSigmoid:()=>El,logSoftmax:()=>Ml,logSumExp:()=>Bl,logicalAnd:()=>Wl,logicalNot:()=>Vl,logicalOr:()=>jl,logicalXor:()=>Ul,losses:()=>qh,matMul:()=>oo,math:()=>i,max:()=>Pl,maxPool:()=>Gl,maxPool3d:()=>Hl,maxPoolWithArgmax:()=>Kl,maximum:()=>Vi,maximumStrict:()=>Cp,mean:()=>Ql,memory:()=>ni,metrics:()=>S,min:()=>Xl,minimum:()=>Jl,minimumStrict:()=>Ap,mirrorPad:()=>Yl,mod:()=>Zl,modStrict:()=>Ep,model:()=>Cb,models:()=>v,moments:()=>ec,movingAverage:()=>Rp,mul:()=>xi,mulStrict:()=>Pp,multiRNNCell:()=>tc,multinomial:()=>nc,neg:()=>Cl,nextFrame:()=>jh,norm:()=>Dp,notEqual:()=>rc,notEqualStrict:()=>Np,oneHot:()=>io,ones:()=>ac,onesLike:()=>oc,op:()=>js,outerProduct:()=>ic,pad:()=>uc,pad1d:()=>lc,pad2d:()=>cc,pad3d:()=>pc,pad4d:()=>hc,pool:()=>fc,pow:()=>Ri,powStrict:()=>$p,prelu:()=>mc,print:()=>Wa,prod:()=>gc,profile:()=>ri,rand:()=>yc,randomGamma:()=>vc,randomNormal:()=>kc,randomUniform:()=>Nc,range:()=>Ic,ready:()=>li,real:()=>Tc,reciprocal:()=>Cc,registerBackend:()=>fi,registerCallbackConstructor:()=>$b,registerGradient:()=>Gr,registerKernel:()=>Ur,registerOp:()=>xv,regularizers:()=>k,relu:()=>Ac,relu6:()=>Ec,removeBackend:()=>pi,reshape:()=>wu,reverse:()=>Pc,reverse1d:()=>$c,reverse2d:()=>Mc,reverse3d:()=>Oc,reverse4d:()=>_c,rfft:()=>Yc,round:()=>Dc,rsqrt:()=>Rc,scalar:()=>$i,scatterND:()=>zp,scatter_util:()=>c,selu:()=>zc,separableConv2d:()=>Fc,sequential:()=>Ab,serialization:()=>h,setBackend:()=>ui,setPlatform:()=>gi,setdiff1dAsync:()=>Lc,sigmoid:()=>ku,sign:()=>qc,signal:()=>zh,sin:()=>Bc,sinh:()=>Wc,slice:()=>Nu,slice1d:()=>Vc,slice2d:()=>jc,slice3d:()=>Uc,slice4d:()=>Gc,slice_util:()=>p,softmax:()=>Hc,softplus:()=>Al,spaceToBatchND:()=>dc,sparseToDense:()=>Fp,spectral:()=>Rh,split:()=>Jc,sqrt:()=>Si,square:()=>vi,squaredDifference:()=>Zc,squaredDifferenceStrict:()=>Mp,squeeze:()=>ep,stack:()=>tp,step:()=>np,stridedSlice:()=>rp,sub:()=>zi,subStrict:()=>Op,sum:()=>$l,sumOutType:()=>Ns,tan:()=>sp,tanh:()=>Iu,tensor:()=>Hs,tensor1d:()=>ap,tensor2d:()=>op,tensor3d:()=>co,tensor4d:()=>ip,tensor5d:()=>up,tensor6d:()=>lp,tensor_util:()=>s,test_util:()=>d,tidy:()=>si,tile:()=>cl,time:()=>ii,topk:()=>cp,train:()=>Wh,transpose:()=>uo,truncatedNormal:()=>pp,unique:()=>hp,unregisterGradient:()=>Kr,unregisterKernel:()=>Hr,unsortedSegmentSum:()=>dp,unstack:()=>fp,upcastType:()=>ks,util:()=>r,valueAndGrad:()=>Ti,valueAndGrads:()=>Ci,variable:()=>mp,variableGrads:()=>Ai,version:()=>xF,version_converter:()=>Ak,version_core:()=>Qo,version_layers:()=>Yy,where:()=>nl,whereAsync:()=>yp,zeros:()=>sc,zerosLike:()=>ki});var r={};n.r(r),n.d(r,{arraysEqual:()=>se,assert:()=>Y,assertNonNegativeIntegerDimensions:()=>_e,assertNonNull:()=>ee,assertShapesMatch:()=>Z,bytesFromStringArray:()=>Se,bytesPerElement:()=>xe,checkConversionForErrors:()=>ge,clamp:()=>H,computeStrides:()=>Ae,createScalarValue:()=>as,createShuffledIndices:()=>ue,decodeString:()=>cs,distSquared:()=>J,encodeString:()=>ls,fetch:()=>us,flatten:()=>te,getArrayFromDType:()=>me,getTypedArrayFromDType:()=>fe,hasEncodingLoss:()=>be,indexToLoc:()=>Re,inferDtype:()=>Ie,inferFromImplicitShape:()=>pe,isBoolean:()=>ke,isFunction:()=>Te,isInt:()=>ae,isNumber:()=>Ne,isPromise:()=>ze,isScalarShape:()=>re,isString:()=>ve,isTypedArray:()=>we,isValidDtype:()=>ye,locToIndex:()=>De,makeOnesTypedArray:()=>$e,makeZerosNestedTypedArray:()=>Oe,makeZerosTypedArray:()=>Me,nearestDivisor:()=>Ce,nearestLargerEven:()=>K,now:()=>is,parseAxisParam:()=>he,randUniform:()=>X,repeatedTry:()=>ce,rightPad:()=>le,shuffle:()=>G,sizeFromShape:()=>ne,sizeToSquarishShape:()=>ie,squeezeShape:()=>de,sum:()=>Q,tanh:()=>oe,toNestedArray:()=>Pe,toTypedArray:()=>os});var s={};n.r(s),n.d(s,{assertTypesMatch:()=>Ts,getTensorsInContainer:()=>As,isTensorInList:()=>Cs,makeTypesMatch:()=>Is});var a={};n.r(a),n.d(a,{isBrowser:()=>Rs,isMobile:()=>Ds});var o={};n.r(o),n.d(o,{browserFiles:()=>Ga,browserHTTPRequest:()=>to,concatenateArrayBuffers:()=>ea,copyModel:()=>Da,decodeWeights:()=>Xs,encodeWeights:()=>Qs,fromMemory:()=>so,getLoadHandlers:()=>ua,getModelArtifactsInfoForJSON:()=>na,getSaveHandlers:()=>ia,http:()=>eo,isHTTPScheme:()=>Ya,listModels:()=>Oa,loadWeights:()=>Qa,moveModel:()=>Ra,registerLoadRouter:()=>oa,registerSaveRouter:()=>aa,removeModel:()=>_a,weightsLoaderFactory:()=>Xa,withSaveHandler:()=>ao});var i={};n.r(i),n.d(i,{confusionMatrix:()=>lo});var u={};n.r(u),n.d(u,{fromPixels:()=>fo,toPixels:()=>ho});var l={};n.r(l),n.d(l,{prepareAndValidate:()=>mo});var c={};n.r(c),n.d(c,{calculateShapes:()=>bo,validateInput:()=>yo,validateUpdateShape:()=>go});var p={};n.r(p),n.d(p,{assertParamsValid:()=>wo,computeFlatOffset:()=>Mo,computeOutShape:()=>So,getNormalizedAxes:()=>Io,isSliceContinous:()=>$o,maskToAxes:()=>xo,parseSliceParams:()=>Oo,sliceInfo:()=>_o,startForAxis:()=>Eo,startIndicesWithElidedDims:()=>To,stopForAxis:()=>Po,stopIndicesWithElidedDims:()=>Co,stridesForAxis:()=>Ao,stridesWithElidedDims:()=>vo});var h={};n.r(h),n.d(h,{Serializable:()=>Do,SerializationMap:()=>Ro,registerClass:()=>zo});var d={};n.r(d),n.d(d,{TEST_EPSILON_FLOAT16:()=>Fo,encodeStrings:()=>Ko,expectArrayBuffersEqual:()=>Ho,expectArraysClose:()=>Lo,expectArraysEqual:()=>Vo,expectNumbersClose:()=>jo,expectPromiseToFail:()=>Wo,expectValuesInRange:()=>Go,testEpsilon:()=>qo});var f={};n.r(f),n.d(f,{conv2d:()=>Qp,depthwiseConv2d:()=>Yp,matMul:()=>Zp});var m={};n.r(m),n.d(m,{collectGatherOpShapeInfo:()=>vd,computeOutShape:()=>Sd,segOpComputeOptimalWindowSize:()=>xd});var g={};n.r(g),n.d(g,{ERF_A1:()=>sd,ERF_A2:()=>ad,ERF_A3:()=>od,ERF_A4:()=>id,ERF_A5:()=>ud,ERF_P:()=>rd,PARALLELIZE_THRESHOLD:()=>Hh,SELU_SCALE:()=>nd,SELU_SCALEALPHA:()=>td,applyActivation:()=>Hp,assertAndGetBroadcastShape:()=>Wi,assertAxesAreInnerMostDims:()=>zl,assertParamsConsistent:()=>Uh,assignToTypedArray:()=>gd,axesAreInnerMostDims:()=>Ol,calculateShapes:()=>bo,castTensor:()=>kd,combineLocations:()=>_l,complexWithEvenIndex:()=>dd,complexWithOddIndex:()=>fd,computeConv2DInfo:()=>lu,computeConv3DInfo:()=>cu,computeDefaultPad:()=>pu,computeDilation2DInfo:()=>ou,computeOptimalWindowSize:()=>Kh,computeOutAndReduceShapes:()=>Dl,computeOutShape:()=>Gh,computePool2DInfo:()=>iu,computePool3DInfo:()=>uu,convertConv2DDataFormat:()=>bu,eitherStridesOrDilationsAreOne:()=>yu,expandShapeToKeepDim:()=>Rl,exponent:()=>bd,exponents:()=>yd,fromStringArrayToUint8:()=>Td,fromUint8ToStringArray:()=>Id,getAxesPermutation:()=>Fl,getBroadcastDims:()=>qi,getComplexWithIndex:()=>md,getFusedBiasGradient:()=>Gp,getFusedDyActivation:()=>Up,getImageCenter:()=>Qh,getInnerMostAxes:()=>ql,getPermuted:()=>Jh,getReductionAxes:()=>Bi,getReshaped:()=>Xh,getReshapedPermuted:()=>Yh,getSliceBeginCoords:()=>Zh,getSliceSize:()=>ed,getUndoAxesPermutation:()=>Ll,log:()=>cd,mergeRealAndImagArrays:()=>pd,prepareAndValidate:()=>mo,prepareSplitSize:()=>wd,reshapeTensor:()=>Nd,segment_util:()=>m,shouldFuse:()=>Kp,slice_util:()=>p,splitRealAndImagArrays:()=>hd,tupleValuesAreOne:()=>gu,upcastType:()=>ks,validateInput:()=>yo,validateUpdateShape:()=>go,warn:()=>ld});var y={};n.r(y),n.d(y,{nonMaxSuppressionV3Impl:()=>ph,nonMaxSuppressionV4Impl:()=>hh,nonMaxSuppressionV5Impl:()=>dh,whereImpl:()=>gp});var b={};n.r(b),n.d(b,{maxNorm:()=>Sm,minMaxNorm:()=>Nm,nonNeg:()=>km,unitNorm:()=>vm});var w={};n.r(w),n.d(w,{constant:()=>$g,glorotNormal:()=>Fg,glorotUniform:()=>zg,heNormal:()=>Lg,heUniform:()=>qg,identity:()=>Dg,leCunNormal:()=>Bg,leCunUniform:()=>Wg,ones:()=>Pg,orthogonal:()=>Vg,randomNormal:()=>Og,randomUniform:()=>Mg,truncatedNormal:()=>_g,varianceScaling:()=>Rg,zeros:()=>Eg});var x={};n.r(x),n.d(x,{Layer:()=>iy,RNN:()=>Cw,RNNCell:()=>Aw,activation:()=>Hx,add:()=>nS,alphaDropout:()=>GS,average:()=>rS,averagePooling1d:()=>hS,averagePooling2d:()=>mS,averagePooling3d:()=>bS,avgPool1d:()=>dS,avgPool2d:()=>gS,avgPool3d:()=>wS,avgPooling1d:()=>fS,avgPooling2d:()=>yS,avgPooling3d:()=>xS,batchNormalization:()=>lS,bidirectional:()=>FS,concatenate:()=>sS,conv1d:()=>Lx,conv2d:()=>qx,conv2dTranspose:()=>Bx,conv3d:()=>Wx,convLstm2d:()=>_S,convLstm2dCell:()=>DS,cropping2D:()=>jx,dense:()=>Kx,depthwiseConv2d:()=>Gx,dot:()=>uS,dropout:()=>Qx,elu:()=>Ox,embedding:()=>tS,flatten:()=>Jx,gaussianDropout:()=>US,gaussianNoise:()=>jS,globalAveragePooling1d:()=>SS,globalAveragePooling2d:()=>vS,globalMaxPool1d:()=>qS,globalMaxPool2d:()=>BS,globalMaxPooling1d:()=>kS,globalMaxPooling2d:()=>NS,gru:()=>AS,gruCell:()=>ES,input:()=>Pb,inputLayer:()=>Mx,layerNormalization:()=>cS,leakyReLU:()=>Dx,lstm:()=>PS,lstmCell:()=>$S,masking:()=>HS,maxPool1d:()=>WS,maxPool2d:()=>VS,maxPooling1d:()=>IS,maxPooling2d:()=>TS,maxPooling3d:()=>CS,maximum:()=>aS,minimum:()=>oS,multiply:()=>iS,permute:()=>eS,prelu:()=>Rx,reLU:()=>_x,repeatVector:()=>Yx,reshape:()=>Zx,rnn:()=>RS,separableConv2d:()=>Vx,simpleRNN:()=>MS,simpleRNNCell:()=>OS,softmax:()=>zx,spatialDropout1d:()=>Xx,stackedRNNCells:()=>zS,thresholdedReLU:()=>Fx,timeDistributed:()=>LS,upSampling2d:()=>Ux,zeroPadding2d:()=>pS});var S={};n.r(S),n.d(S,{MAPE:()=>sv,MSE:()=>iv,binaryAccuracy:()=>KS,binaryCrossentropy:()=>QS,categoricalAccuracy:()=>JS,categoricalCrossentropy:()=>YS,cosineProximity:()=>tv,mape:()=>av,meanAbsoluteError:()=>nv,meanAbsolutePercentageError:()=>rv,meanSquaredError:()=>ov,mse:()=>uv,precision:()=>ZS,recall:()=>ev,sparseCategoricalAccuracy:()=>XS});var v={};n.r(v),n.d(v,{modelFromJSON:()=>Ib});var k={};n.r(k),n.d(k,{l1:()=>cv,l1l2:()=>lv,l2:()=>pv});var N={};n.r(N),n.d(N,{json:()=>Pv});var I={};n.r(I),n.d(I,{json:()=>$v});var T={};n.r(T),n.d(T,{json:()=>Mv});var C={};n.r(C),n.d(C,{json:()=>Ov});var A={};n.r(A),n.d(A,{json:()=>_v});var E={};n.r(E),n.d(E,{json:()=>Dv});var P={};n.r(P),n.d(P,{json:()=>Rv});var $={};n.r($),n.d($,{json:()=>zv});var M={};n.r(M),n.d(M,{json:()=>Fv});var O={};n.r(O),n.d(O,{json:()=>Lv});var _={};n.r(_),n.d(_,{json:()=>qv});var D={};n.r(D),n.d(D,{json:()=>Bv});var R={};n.r(R),n.d(R,{json:()=>Wv});var z={};n.r(z),n.d(z,{json:()=>Vv});var F={};n.r(F),n.d(F,{json:()=>jv});var L={};n.r(L),n.d(L,{json:()=>Uv});var q={};n.r(q),n.d(q,{json:()=>Gv});var B={};n.r(B),n.d(B,{CSVDataset:()=>gN,Dataset:()=>sN,FileDataSource:()=>AN,TextLineDataset:()=>lN,URLDataSource:()=>EN,array:()=>oN,csv:()=>PN,func:()=>$N,generator:()=>MN,microphone:()=>_N,version_data:()=>DN,webcam:()=>ON,zip:()=>iN});var W={};n.r(W),n.d(W,{addImpl:()=>pI,bincountImpl:()=>rT,bincountReduceImpl:()=>sT,ceilImpl:()=>iT,concatImpl:()=>dT,expImpl:()=>ZT,expm1Impl:()=>sC,floorImpl:()=>IC,gatherV2Impl:()=>_C,greaterImpl:()=>RC,lessImpl:()=>QC,linSpaceImpl:()=>tA,logImpl:()=>rA,maxImpl:()=>bA,maximumImpl:()=>SA,minimumImpl:()=>OA,multiplyImpl:()=>iC,negImpl:()=>VA,notEqualImpl:()=>JA,prodImpl:()=>cE,rangeImpl:()=>hE,rsqrtImpl:()=>NE,simpleAbsImpl:()=>xI,sliceImpl:()=>ZI,squaredDifferenceImpl:()=>JE,stridedSliceImpl:()=>nP,subImpl:()=>fC,tileImpl:()=>iP,topKImpl:()=>uP,transposeImpl:()=>CI,uniqueImpl:()=>lP});class V{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class j{decComplexRef(e){}time(e){return U("time")}read(e){return U("read")}readSync(e){return U("readSync")}numDataIds(){return U("numDataIds")}disposeData(e){return U("disposeData")}write(e,t,n){return U("write")}move(e,t,n,r){return U("move")}memory(){return U("memory")}floatPrecision(){return U("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}batchMatMul(e,t,n,r){return U("batchMatMul")}fusedBatchMatMul({a:e,b:t,transposeA:n,transposeB:r,bias:s,activation:a,preluActivationWeights:o}){return U("fusedBatchMatMul")}slice(e,t,n){return U("slice")}stridedSlice(e,t,n,r){return U("stridedSlice")}unstack(e,t){return U("unstack")}reverse(e,t){return U("reverse")}concat(e,t){return U("concat")}neg(e){return U("neg")}add(e,t){return U("add")}addN(e){return U("addN")}subtract(e,t){return U("subtract")}multiply(e,t){return U("multiply")}realDivide(e,t){return U("realDivide")}floorDiv(e,t){return U("floorDiv")}sum(e,t){return U("sum")}prod(e,t){return U("prod")}unsortedSegmentSum(e,t,n){return U("unsortedSegmentSum")}argMin(e,t){return U("argMin")}argMax(e,t){return U("argMax")}equal(e,t){return U("equal")}notEqual(e,t){return U("notEqual")}less(e,t){return U("less")}lessEqual(e,t){return U("lessEqual")}greater(e,t){return U("greater")}greaterEqual(e,t){return U("greaterEqual")}logicalNot(e){return U("logicalNot")}logicalAnd(e,t){return U("logicalAnd")}logicalOr(e,t){return U("logicalOr")}where(e){return U("where")}select(e,t,n){return U("select")}topk(e,t,n){return U("topk")}min(e,t){return U("min")}minimum(e,t){return U("minimum")}mod(e,t){return U("mod")}max(e,t){return U("max")}maximum(e,t){return U("maximum")}all(e,t){return U("all")}any(e,t){return U("any")}squaredDifference(e,t){return U("squaredDifference")}ceil(e){return U("ceil")}floor(e){return U("floor")}round(e){return U("round")}sign(e){return U("sign")}isNaN(e){return U("isNaN")}isInf(e){return U("isInf")}isFinite(e){return U("isFinite")}pow(e,t){return U("pow")}exp(e){return U("exp")}expm1(e){return U("expm1")}softmax(e,t){return U("softmax")}log(e){return U("log")}log1p(e){return U("log1p")}sqrt(e){return U("sqrt")}rsqrt(e){return U("rsqrt")}square(e){return U("square")}reciprocal(e){return U("reciprocal")}relu(e){return U("relu")}relu6(e){return U("relu6")}prelu(e,t){return U("prelu")}elu(e){return U("elu")}eluDer(e,t){return U("eluDer")}selu(e){return U("selu")}int(e){return U("int")}clip(e,t,n){return U("clip")}abs(e){return U("abs")}complexAbs(e){return U("complexAbs")}sigmoid(e){return U("sigmoid")}softplus(e){return U("softplus")}sin(e){return U("sin")}cos(e){return U("cos")}tan(e){return U("tan")}asin(e){return U("asin")}acos(e){return U("acos")}atan(e){return U("atan")}atan2(e,t){return U("atan2")}sinh(e){return U("sinh")}cosh(e){return U("cosh")}tanh(e){return U("tanh")}asinh(e){return U("asinh")}acosh(e){return U("acosh")}atanh(e){return U("atanh")}erf(e){return U("erf")}step(e,t){return U("step")}fusedConv2d({input:e,filter:t,convInfo:n,bias:r,activation:s,preluActivationWeights:a}){return U("fusedConv2d")}conv2d(e,t,n){return U("conv2d")}conv2dDerInput(e,t,n){return U("conv2dDerInput")}conv2dDerFilter(e,t,n){return U("conv2dDerFilter")}fusedDepthwiseConv2D({input:e,filter:t,convInfo:n,bias:r,activation:s,preluActivationWeights:a}){return U("fusedDepthwiseConv2D")}depthwiseConv2D(e,t,n){return U("depthwiseConv2D")}depthwiseConv2DDerInput(e,t,n){return U("depthwiseConv2DDerInput")}depthwiseConv2DDerFilter(e,t,n){return U("depthwiseConv2DDerFilter")}conv3d(e,t,n){return U("conv3d")}conv3dDerInput(e,t,n){return U("conv3dDerInput")}conv3dDerFilter(e,t,n){return U("conv3dDerFilter")}maxPool(e,t){return U("maxPool")}maxPoolBackprop(e,t,n,r){return U("maxPoolBackprop")}avgPool(e,t){return U("avgPool")}avgPoolBackprop(e,t,n){return U("avgPoolBackprop")}avgPool3d(e,t){return U("avgPool3d")}avgPool3dBackprop(e,t,n){return U("avgPool3dBackprop")}maxPool3d(e,t){return U("maxPool3d")}maxPool3dBackprop(e,t,n,r){return U("maxPool3dBackprop")}reshape(e,t){return U("reshape")}cast(e,t){return U("cast")}tile(e,t){return U("tile")}pad(e,t,n){return U("pad")}transpose(e,t){return U("transpose")}gather(e,t,n,r=0){return U("gather")}gatherND(e,t){return U("gatherND")}scatterND(e,t,n){return U("scatterND")}batchToSpaceND(e,t,n){return U("batchToSpaceND")}spaceToBatchND(e,t,n){return U("spaceToBatchND")}resizeBilinear(e,t,n,r,s){return U("resizeBilinear")}resizeBilinearBackprop(e,t,n){return U("resizeBilinearBackprop")}resizeNearestNeighbor(e,t,n,r,s){return U("resizeNearestNeighbor")}resizeNearestNeighborBackprop(e,t,n){return U("resizeNearestNeighborBackprop")}batchNorm(e,t,n,r,s,a){return U("batchNorm")}localResponseNormalization4D(e,t,n,r,s){return U("localResponseNormalization4D")}LRNGrad(e,t,n,r,s,a,o){return U("LRNGrad")}multinomial(e,t,n,r){return U("multinomial")}oneHot(e,t,n,r){return U("oneHot")}cumsum(e,t,n,r){return U("cumsum")}nonMaxSuppression(e,t,n,r,s){return U("nonMaxSuppression")}fft(e){return U("fft")}ifft(e){return U("ifft")}complex(e,t){return U("complex")}real(e){return U("real")}imag(e){return U("imag")}cropAndResize(e,t,n,r,s,a){return U("cropAndResize")}depthToSpace(e,t,n){return U("depthToSpace")}split(e,t,n){return U("split")}sparseToDense(e,t,n,r){return U("sparseToDense")}diag(e){return U("diag")}fill(e,t,n){return U("fill")}onesLike(e){return U("onesLike")}zerosLike(e){return U("zerosLike")}linspace(e,t,n){return U("linspace")}dispose(){return U("dispose")}}function U(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function G(e){let t=e.length,n=0,r=0;for(;t>0;)r=Math.random()*t|0,t--,n=e[t],e[t]=e[r],e[r]=n}function H(e,t,n){return Math.max(e,Math.min(t,n))}function K(e){return e%2==0?e:e+1}function Q(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function X(e,t){const n=Math.random();return t*n+(1-n)*e}function J(e,t){let n=0;for(let r=0;r<e.length;r++){const s=Number(e[r])-Number(t[r]);n+=s*s}return n}function Y(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function Z(e,t,n=""){Y(se(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function ee(e){Y(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function te(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||we(e)&&!n)for(let r=0;r<e.length;++r)te(e[r],t,n);else t.push(e);return t}function ne(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function re(e){return 0===e.length}function se(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function ae(e){return e%1==0}function oe(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function ie(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function ue(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return G(t),t}function le(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function ce(e,t=(e=>0),n){return new Promise(((r,s)=>{let a=0;const o=()=>{if(e())return void r();a++;const i=t(a);null!=n&&a>=n?s():setTimeout(o,i)};o()}))}function pe(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const s=e.slice();return s[r]=t/n,s}function he(e,t){const n=t.length;return Y((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),Y(e.every((e=>ae(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function de(e,t){const n=[],r=[],s=null!=t&&Array.isArray(t)&&0===t.length,a=null==t||s?null:he(t,e).sort();let o=0;for(let t=0;t<e.length;++t){if(null!=a){if(a[o]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==a[o]||a[o]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),a[o]<=t&&o++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function fe(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function me(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function ge(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function ye(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function be(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function we(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array}function xe(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function Se(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function ve(e){return"string"==typeof e||e instanceof String}function ke(e){return"boolean"==typeof e}function Ne(e){return"number"==typeof e}function Ie(e){return Array.isArray(e)?Ie(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array?"int32":Ne(e)?"float32":ve(e)?"string":ke(e)?"bool":"float32"}function Te(e){return!!(e&&e.constructor&&e.call&&e.apply)}function Ce(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function Ae(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function Ee(e,t,n){const r=new Array;if(1===t.length){const s=t[0];for(let t=0;t<s;t++)r[t]=n[e+t]}else{const s=t[0],a=t.slice(1),o=a.reduce(((e,t)=>e*t));for(let t=0;t<s;t++)r[t]=Ee(e+t*o,a,n)}return r}function Pe(e,t){if(0===e.length)return t[0];const n=e.reduce(((e,t)=>e*t));if(0===n)return[];if(n!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}.`);return Ee(0,e,t)}function $e(e,t){const n=Me(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function Me(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function Oe(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return Pe(e,new Float32Array(n));if("int32"===t)return Pe(e,new Int32Array(n));if("bool"===t)return Pe(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function _e(e){e.forEach((t=>{Y(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function De(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function Re(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function ze(e){return e&&e.then&&"function"==typeof e.then}class Fe{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(ze(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=function(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}(this.global.location.search);"tfjsflags"in e&&e.tfjsflags.split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}function Le(){return Be}let qe,Be=null;function We(){if(null==qe){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}qe=e}return qe}function Ve(e,t){const n=function(){const e=We();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}const je="Abs",Ue="Acos",Ge="Acosh",He="Add",Ke="AddN",Qe="All",Xe="Any",Je="ArgMax",Ye="ArgMin",Ze="Asin",et="Asinh",tt="Atan",nt="Atanh",rt="Atan2",st="AvgPool",at="AvgPoolGrad",ot="AvgPool3D",it="AvgPool3DGrad",ut="BatchMatMul",lt="BatchToSpaceND",ct="Bincount",pt="BroadcastTo",ht="Cast",dt="Ceil",ft="ClipByValue",mt="Complex",gt="ComplexAbs",yt="Concat",bt="Conv2D",wt="Conv2DBackpropFilter",xt="Conv2DBackpropInput",St="Conv3D",vt="Conv3DBackpropFilterV2",kt="Conv3DBackpropInputV2",Nt="Cos",It="Cosh",Tt="Cumsum",Ct="CropAndResize",At="DenseBincount",Et="DepthToSpace",Pt="DepthwiseConv2dNative",$t="DepthwiseConv2dNativeBackpropFilter",Mt="DepthwiseConv2dNativeBackpropInput",Ot="Diag",_t="Dilation2D",Dt="Dilation2DBackpropInput",Rt="Dilation2DBackpropFilter",zt="RealDiv",Ft="Elu",Lt="EluGrad",qt="Erf",Bt="Equal",Wt="Exp",Vt="ExpandDims",jt="Expm1",Ut="FFT",Gt="Fill",Ht="FlipLeftRight",Kt="Floor",Qt="FloorDiv",Xt="FusedBatchNorm",Jt="GatherV2",Yt="GatherNd",Zt="Greater",en="GreaterEqual",tn="Identity",nn="IFFT",rn="Imag",sn="IsFinite",an="IsInf",on="IsNan",un="LeakyRelu",ln="Less",cn="LessEqual",pn="LinSpace",hn="Log",dn="Log1p",fn="LogicalAnd",mn="LogicalNot",gn="LogicalOr",yn="LogSoftmax",bn="LRN",wn="LRNGrad",xn="Max",Sn="Maximum",vn="MaxPool",kn="MaxPoolGrad",Nn="MaxPool3D",In="MaxPool3DGrad",Tn="MaxPoolWithArgmax",Cn="Mean",An="Min",En="Minimum",Pn="MirrorPad",$n="Mod",Mn="Multinomial",On="Multiply",_n="Neg",Dn="NotEqual",Rn="NonMaxSuppressionV3",zn="NonMaxSuppressionV4",Fn="NonMaxSuppressionV5",Ln="OnesLike",qn="OneHot",Bn="Pack",Wn="PadV2",Vn="Pool",jn="Pow",Un="Prelu",Gn="Prod",Hn="Range",Kn="Real",Qn="Reciprocal",Xn="Relu",Jn="Reshape",Yn="ResizeNearestNeighbor",Zn="ResizeNearestNeighborGrad",er="ResizeBilinear",tr="ResizeBilinearGrad",nr="Relu6",rr="Reverse",sr="Round",ar="Rsqrt",or="ScatterNd",ir="Select",ur="Selu",lr="Slice",cr="Sin",pr="Sinh",hr="Sign",dr="Sigmoid",fr="Softplus",mr="Sqrt",gr="Sum",yr="SpaceToBatchND",br="SplitV",wr="Softmax",xr="SquaredDifference",Sr="Square",vr="Sub",kr="SparseToDense",Nr="StridedSlice",Ir="Tan",Tr="Tanh",Cr="Tile",Ar="TopK",Er="Transpose",Pr="Unique",$r="Unpack",Mr="UnsortedSegmentSum",Or="ZerosLike",_r="Step",Dr="FromPixels",Rr="RotateWithOffset",zr="_FusedMatMul",Fr="FusedConv2D",Lr="FusedDepthwiseConv2D",qr=Ve("kernelRegistry",(()=>new Map)),Br=Ve("gradRegistry",(()=>new Map));function Wr(e,t){const n=Xr(e,t);return qr.get(n)}function Vr(e){return Br.get(e)}function jr(e){const t=qr.entries(),n=[];for(;;){const{done:r,value:s}=t.next();if(r)break;const[a,o]=s,[i]=a.split("_");i===e&&n.push(o)}return n}function Ur(e){const{kernelName:t,backendName:n}=e,r=Xr(t,n);qr.has(r)&&console.warn(`The kernel '${t}' for backend '${n}' is already registered`),qr.set(r,e)}function Gr(e){const{kernelName:t}=e;Br.has(t)&&Le().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${t}'`),Br.set(t,e)}function Hr(e,t){const n=Xr(e,t);if(!qr.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);qr.delete(n)}function Kr(e){if(!Br.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);Br.delete(e)}function Qr(e,t){jr(e).forEach((e=>{Ur(Object.assign({},e,{backendName:t}))}))}function Xr(e,t){return`${t}_${e}`}class Jr{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new Zr)}profileKernel(e,t,n){let r;const s=this.backendTimer.time((()=>{r=n()}));if(Le().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){const n=r[t];n.data().then((t=>{Yr(t,n.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:s.then((e=>e.kernelMs)),extraInfo:s.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:s,extraInfo:a}=e;n.forEach((e=>{Promise.all([e.data(),r,a]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],s,n[2])}))}))}}function Yr(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class Zr{logKernelProfile(e,t,n,r,s,a){const o="number"==typeof r?le(`${r}ms`,9):r.error,i=le(e,25),u=t.rank,l=t.size,c=le(t.shape.toString(),14);let p="";for(const e in s){const n=s[e];if(null!=n){const r=n.shape||t.shape,s=r.length;p+=`${e}: ${s}D ${s>0?r:""} `}}console.log(`%c${i}\t%c${o}\t%c${u}D ${c}\t%c${l}\t%c${p}\t%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function es(e,t,n,r){const s=Ae(t),a=function(e,t,n,r){const s=ne(t),a=r[r.length-1],o=new Array(a).fill(0),i=t.length,u="complex64"===n?ss(e):e;if(i>1)for(let e=0;e<s/a;e++){const t=e*a;for(let e=0;e<a;e++)o[e]=Math.max(o[e],ts(u[t+e],0,n).length)}return o}(e,t,n,s),o=t.length,i=rs(e,t,n,s,a),u=["Tensor"];return r&&(u.push(`  dtype: ${n}`),u.push(`  rank: ${o}`),u.push(`  shape: [${t}]`),u.push("  values:")),u.push(i.map((e=>"    "+e)).join("\n")),u.join("\n")}function ts(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:ve(e)?`'${e}'`:"bool"===n?ns(e):parseFloat(e.toFixed(7)).toString(),le(r,t)}function ns(e){return 0===e?"false":"true"}function rs(e,t,n,r,s,a=!0){const o="complex64"===n?2:1,i=t[0],u=t.length;if(0===u)return"complex64"===n?[ts(ss(e)[0],0,n)]:"bool"===n?[ns(e[0])]:[e[0].toString()];if(1===u){if(i>20){const t=3*o;let r=Array.from(e.slice(0,t)),a=Array.from(e.slice((i-3)*o,i*o));return"complex64"===n&&(r=ss(r),a=ss(a)),["["+r.map(((e,t)=>ts(e,s[t],n))).join(", ")+", ..., "+a.map(((e,t)=>ts(e,s[i-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?ss(e):Array.from(e)).map(((e,t)=>ts(e,s[t],n))).join(", ")+"]"]}const l=t.slice(1),c=r.slice(1),p=r[0]*o,h=[];if(i>20){for(let t=0;t<3;t++){const r=t*p,a=r+p;h.push(...rs(e.slice(r,a),l,n,c,s,!1))}h.push("...");for(let t=i-3;t<i;t++){const r=t*p,a=r+p;h.push(...rs(e.slice(r,a),l,n,c,s,t===i-1))}}else for(let t=0;t<i;t++){const r=t*p,a=r+p;h.push(...rs(e.slice(r,a),l,n,c,s,t===i-1))}const d=2===u?",":"";h[0]="["+h[0]+d;for(let e=1;e<h.length-1;e++)h[e]=" "+h[e]+d;let f=",\n";for(let e=2;e<u;e++)f+="\n";return h[h.length-1]=" "+h[h.length-1]+"]"+(a?"":f),h}function ss(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}function as(e,t){return"string"===t?ls(e):os([e],t)}function os(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=te(e)),Le().getBool("DEBUG")&&ge(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function is(){return Le().platform.now()}function us(e,t){return Le().platform.fetch(e,t)}function ls(e,t="utf-8"){return t=t||"utf-8",Le().platform.encode(e,t)}function cs(e,t="utf-8"){return t=t||"utf-8",Le().platform.decode(e,t)}class ps{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=ne(e),null!=n){const e=n.length;Y(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||me(t,this.size),this.strides=Ae(e)}set(e,...t){0===t.length&&(t=[0]),Y(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return hs().makeTensor(this.values,this.shape,this.dtype)}}let hs=null,ds=null,fs=null;class ms{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=ne(e),this.strides=Ae(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return ds.buffer(this.shape,this.dtype,e)}bufferSync(){return ds.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Pe(this.shape,e)}arraySync(){return Pe(this.shape,this.dataSync())}async data(){this.throwIfDisposed();const e=hs().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>cs(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();const e=hs().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>cs(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await hs().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(hs().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return ds.print(this,e)}clone(){return this.throwIfDisposed(),ds.clone(this)}toString(e=!1){return es(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),ds.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),hs().makeVariable(this,e,t,n)}}Object.defineProperty(ms,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed});class gs extends ms{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!se(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);hs().disposeTensor(this),this.dataId=e.dataId,hs().incRef(this,null)}dispose(){hs().disposeVariable(this),this.isDisposedInternal=!0}}var ys,bs,ws,xs,Ss;Object.defineProperty(gs,Symbol.hasInstance,{value:e=>e instanceof ms&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(ys||(ys={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(bs||(bs={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(ws||(ws={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(xs||(xs={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(Ss||(Ss={}));const vs={float32:xs,int32:bs,bool:ws,complex64:Ss};function ks(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return vs[e][t]}function Ns(e){return ks(e,"int32")}function Is(e,t){if(e.dtype===t.dtype)return[e,t];const n=ks(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function Ts(e,t){Y(e.dtype===t.dtype,(()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`))}function Cs(e,t){return t.some((t=>t.id===e.id))}function As(e){const t=[];return Es(e,t,new Set),t}function Es(e,t,n){if(null==e)return;if(e instanceof ms)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!=typeof r)return;var r;const s=e;for(const e in s){const r=s[e];n.has(r)||(n.add(r),Es(r,t,n))}}class Ps{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class $s{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Ps}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(console.warn(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Jr(this.backendInstance),!0}setupRegisteredKernels(){jr(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){jr(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof j||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${e} failed`),console.warn(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return console.warn(`Initialization of backend ${e} failed`),console.warn(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,s=this.readSync(t);r.disposeData(t),n.backend=e,e.move(t,s,n.shape,n.dtype),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return $s.nextTensorId++}nextVariableId(){return $s.nextVariableId++}clone(e){const t=this.makeTensorFromDataId(e.dataId,e.shape,e.dtype),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t="float32",n={x:e},r={dtype:t};return Os.runKernelFunc((n=>n.cast(e,t)),n,null,ht,r)}})),[],{}),t}runKernel(e,t,n,r,s){return this.runKernelFunc(null,t,null,e,n,r,s)}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let s=0;n.forEach((e=>{s+="complex64"===e.dtype?3:1}));const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=r-t-s-a;if(o>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${o} data ids) after running '${e}'`)}runKernelFunc(e,t,n,r,s,a,o){let i,u=[];const l=this.isTapeOn();null==r&&(r=null!=this.state.activeScope?this.state.activeScope.name:"");const c=this.state.numBytes,p=this.state.numTensors;let h;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const d=Wr(r,this.backendName);let f,m;if(null!=d)h=()=>{const e=this.backend.numDataIds();f=d.kernelFunc({inputs:t,attrs:s,backend:this.backend});const n=Array.isArray(f)?f:[f];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,e,n);const i=n.map((e=>{if(null!=e.rank)return e;const{dataId:t,shape:n,dtype:r}=e;return this.makeTensorFromDataId(t,n,r)}));if(l){let e=this.getTensorsForGradient(r,t,i);if(null==e){null==o&&(o=[]);const t=i.filter(((e,t)=>o[t]));e=(a||[]).slice().concat(t)}u=this.saveTensorsForBackwardMode(e)}return i};else{if(null==e)throw new Error(`Error running ${r}: Neither modular kernel nor forward func passed`);const t=e=>{l&&(u=e.map((e=>this.keep(this.clone(e)))))};h=()=>{const n=this.backend.numDataIds();f=this.tidy((()=>e(this.backend,t)));const s=Array.isArray(f)?f:[f];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,n,s),s}}return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(m=this.profiler.profileKernel(r,t,(()=>h())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(m),i=m.outputs):i=h()})),l&&this.addTapeNode(r,t,i,n,u,s),this.state.profiling&&this.state.activeProfile.kernels.push({name:r,bytesAdded:this.state.numBytes-c,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-p,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(t).map((e=>null!=t[e]?t[e].shape:null)),outputShapes:i.map((e=>e.shape)),kernelTimeMs:m.timeMs,extraInfo:m.extraInfo}),Array.isArray(f)?i:i[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){const r=Vr(e);if(null!=r){const e=r.inputsToSave||[],s=r.outputsToSave||[];let a;r.saveAllInputs?(Y(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),a=Object.keys(t).map((e=>t[e]))):a=e.map((e=>t[e]));const o=n.filter(((e,t)=>s[t]));return a.concat(o)}return null}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let s=e;"string"===n&&ve(e[0])&&(s=e.map((e=>ls(e))));const a=r.write(s,t,n),o=new ms(t,n,a,this.nextTensorId());if(this.incRef(o,r),"string"===n){const e=this.state.tensorInfo.get(a),t=Se(s);this.state.numBytes+=t-e.bytes,e.bytes=t}return o}makeTensorFromDataId(e,t,n,r){const s=new ms(t,n=n||"float32",e,this.nextTensorId());return this.incRef(s,r),s}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const s=new gs(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}incRef(e,t){const n=this.state.tensorInfo.has(e.dataId)?this.state.tensorInfo.get(e.dataId).refCount:0;if(this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++,0===n){this.state.numDataBuffers++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*xe(e.dtype)),this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n,refCount:0}),this.state.numBytes+=n}this.state.tensorInfo.get(e.dataId).refCount++,e instanceof gs||this.track(e)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;this.state.numTensors--,"string"===e.dtype&&this.state.numStringTensors--;const t=this.state.tensorInfo.get(e.dataId);t.refCount<=1?("complex64"!==e.dtype&&(this.state.numBytes-=t.bytes),this.state.numDataBuffers--,t.backend.disposeData(e.dataId),this.state.tensorInfo.delete(e.dataId)):(t.backend.decComplexRef(e.dataId),this.state.tensorInfo.get(e.dataId).refCount--)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,s,a){const o={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:s},i=Vr(e);null!=i&&(r=i.gradFunc),null!=r&&(o.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=Me(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],s,a))),this.state.activeTape.push(o)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=As(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(Y(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));Y(s instanceof ms,(()=>"The result y returned by f() must be a tensor."));const a=function(e,t,n){const r={},s={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const a=e[n],o=a.inputs;for(const e in o){const n=o[e];let i=!1;for(let e=0;e<t.length;e++)if(r[n.id]){a.outputs.forEach((e=>r[e.id]=!0)),i=!0,s[a.id]=!0;break}if(i)break}}const a={};a[n.id]=!0;const o={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(a[n.outputs[e].id]){for(const e in r)a[r[e].id]=!0,o[n.id]=!0;break}}const i=[];for(let t=0;t<e.length;t++){const n=e[t];if(s[n.id]&&o[n.id]){const e={};for(const t in n.inputs){const s=n.inputs[t];r[s.id]&&(e[t]=s)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,i.push(t)}}return i}(this.state.activeTape,t,s);if(!r&&0===a.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[s.id]=null==n?function(e){const t=$e(ne(e),"float32");return Os.makeTensor(t,e,"float32")}(s.shape):n,function(e,t,n,r){for(let s=t.length-1;s>=0;s--){const a=t[s],o=[];if(a.outputs.forEach((t=>{const n=e[t.id];null!=n?o.push(n):o.push(null)})),null==a.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const i=a.gradient(o);for(const t in a.inputs){if(!(t in i))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(i)}.`);const s=n((()=>i[t]()));if("float32"!==s.dtype)throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${s.dtype}'`);const o=a.inputs[t];if(!se(s.shape,o.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${t}' has shape '${s.shape}', which does not match the shape of the input '${o.shape}'`);if(null==e[o.id])e[o.id]=s;else{const t=e[o.id];e[o.id]=r(t,s),t.dispose()}}}}(e,a,(e=>this.tidy(e)),_s);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:s,grads:r}}))}customGrad(e){return Y(Te(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;Y(t.every((e=>e instanceof ms)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};return t.forEach(((e,t)=>{r[t]=e})),this.runKernelFunc(((r,s)=>(n=e(...t,s),Y(n.value instanceof ms,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),Y(Te(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value)),r,((e,r)=>{const s=n.gradFunc(e,r),a=Array.isArray(s)?s:[s];Y(a.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),Y(a.every((e=>e instanceof ms)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const o={};return a.forEach(((e,t)=>{o[t]=()=>e})),o}))}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){const t=is(),n=await this.backend.time(e);return n.wallMs=is()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Ps;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function Ms(){const e=We();if(null==e._tfengine){const t=new Fe(e);e._tfengine=new $s(t)}var t;return t=e._tfengine.ENV,Be=t,hs=()=>e._tfengine,e._tfengine}$s.nextTensorId=0,$s.nextVariableId=0;const Os=Ms();function _s(e,t){const n={a:e,b:t};return Os.runKernel(He,n)}function Ds(){if("undefined"!=typeof navigator&&null!=navigator){const e=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function Rs(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const zs=Le();function Fs(e,t){let n=e;if(we(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||we(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&Le().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Ls(e,r,[]),r}function Ls(e,t,n){if(n=n||[],!Array.isArray(e)&&!we(e))return void Y(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));Y(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),Y(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let t=0;t<e.length;++t)Ls(e[t],r,n.concat(t))}function qs(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function Bs(e,t,n,r="numeric"){if(e instanceof ms)return qs(r,e.dtype,t,n),e;let s=Ie(e);if("string"!==s&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),qs(r,s,t,n),null==e||!we(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const a=Fs(e,s);we(e)||Array.isArray(e)||(e=[e]);const o="string"!==s?os(e,s):te(e,[],!0);return Os.makeTensor(o,a,s)}function Ws(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,s)=>Bs(e,`${t}[${s}]`,n,r)))}zs.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),zs.registerFlag("IS_BROWSER",(()=>Rs())),zs.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),zs.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),zs.registerFlag("PROD",(()=>!1)),zs.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>zs.getBool("DEBUG"))),zs.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),zs.registerFlag("IS_TEST",(()=>!1)),zs.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0));const Vs="__op";function js(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=Vs;const s=(...e)=>{Os.startScope(n);try{const t=r(...e);return ze(t)&&console.error("Cannot return a Promise inside of tidy."),Os.endScope(t),t}catch(e){throw Os.endScope(null),e}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}const Us=js({complex_:function(e,t){const n=Bs(e,"real","complex"),r=Bs(t,"imag","complex");Z(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const s={real:n,imag:r};return Os.runKernel(mt,s)}});function Gs(e,t,n,r){if(null==r&&(r=Ie(e)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!we(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){_e(t);const e=ne(t),r=ne(n);Y(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){const r=n[e],s=e!==n.length-1||r!==ne(t.slice(e));Y(n[e]===t[e]||!s,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return we(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?os(e,r):te(e,[],!0),Os.makeTensor(e,t,r)}function Hs(e,t,n){return Gs(e,t,Fs(e,n),n)}const Ks={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};async function Qs(e,t){const n=[],r=[],s=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let a=0;a<s.length;++a){const o=s[a],i=Array.isArray(e)?e[a].tensor:e[o];if("float32"!==i.dtype&&"int32"!==i.dtype&&"bool"!==i.dtype&&"string"!==i.dtype&&"complex64"!==i.dtype)throw new Error(`Unsupported dtype in weight '${o}': ${i.dtype}`);const u={name:o,shape:i.shape,dtype:i.dtype};if("string"===i.dtype){const e=new Promise((async e=>{const t=await i.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,r=new Uint8Array(n);let s=0;for(let e=0;e<t.length;e++){const n=t[e],a=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(a,s),s+=4,r.set(n,s),s+=n.length}e(r)}));r.push(e)}else r.push(i.data());null!=t&&(u.group=t),n.push(u)}return{data:Js(await Promise.all(r)),specs:n}}function Xs(e,t){const n={};let r,s=0;for(const a of t){const t=a.name,o=a.dtype,i=a.shape,u=ne(i);let l;if("quantization"in a){const n=a.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${a.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${a.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==o)throw new Error(`Weight ${a.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${o}.`)}const i=Ks[n.dtype],c=e.slice(s,s+u*i),p="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===o)if("uint8"===n.dtype||"uint16"===n.dtype){l=new Float32Array(p.length);for(let e=0;e<p.length;e++){const t=p[e];l[e]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===r&&(r=ra()),l=r(p)}else{if("int32"!==o)throw new Error(`Unsupported dtype in weight '${t}': ${o}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);l=new Int32Array(p.length);for(let e=0;e<p.length;e++){const t=p[e];l[e]=Math.round(t*n.scale+n.min)}}s+=u*i}else if("string"===o){const t=ne(a.shape);l=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(s,s+4))[0];s+=4;const n=new Uint8Array(e.slice(s,s+t));l.push(n),s+=t}}else{const r=Ks[o],a=e.slice(s,s+u*r);if("float32"===o)l=new Float32Array(a);else if("int32"===o)l=new Int32Array(a);else if("bool"===o)l=new Uint8Array(a);else{if("complex64"!==o)throw new Error(`Unsupported dtype in weight '${t}': ${o}`);{l=new Float32Array(a);const e=new Float32Array(l.length/2),r=new Float32Array(l.length/2);for(let t=0;t<e.length;t++)e[t]=l[2*t],r[t]=l[2*t+1];const s=Hs(e,i,"float32"),o=Hs(r,i,"float32");n[t]=Us(s,o),s.dispose(),o.dispose()}}s+=u*r}"complex64"!==o&&(n[t]=Hs(l,i,o))}return n}function Js(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let s=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),s),s+=e.byteLength})),r.buffer}const Ys="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Zs(e){return Ys?Buffer.byteLength(e):new Blob([e]).size}function ea(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function ta(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function na(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Zs(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Zs(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function ra(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const s=new ArrayBuffer(4*r.length),a=new Uint32Array(s);for(let s=0;s<r.length;s++){const o=r[s],i=e[n[o>>10]+(1023&o)]+t[o>>10];a[s]=i}return new Float32Array(s)}}class sa{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==sa.instance&&(sa.instance=new sa),sa.instance}static registerSaveRouter(e){sa.getInstance().saveRouters.push(e)}static registerLoadRouter(e){sa.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return sa.getHandlers(e,"save")}static getLoadHandlers(e,t){return sa.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?sa.getInstance().loadRouters:sa.getInstance().saveRouters).forEach((t=>{const s=t(e,n);null!==s&&r.push(s)})),r}}const aa=e=>sa.registerSaveRouter(e),oa=e=>sa.registerLoadRouter(e),ia=e=>sa.getSaveHandlers(e),ua=(e,t)=>sa.getLoadHandlers(e,t),la="tensorflowjs",ca="models_store",pa="model_info_store";function ha(){if(!Le().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function da(e){const t=e.result;t.createObjectStore(ca,{keyPath:"modelPath"}),t.createObjectStore(pa,{keyPath:"modelPath"})}class fa{constructor(e){if(this.indexedDB=ha(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(la,1);r.onupgradeneeded=()=>da(r),r.onsuccess=()=>{const s=r.result;if(null==t){const t=s.transaction(ca,"readonly"),r=t.objectStore(ca).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(s.close(),n(r.error)),t.oncomplete=()=>s.close()}else{const r=na(t),a=s.transaction(pa,"readwrite");let o=a.objectStore(pa);const i=o.put({modelPath:this.modelPath,modelArtifactsInfo:r});let u;i.onsuccess=()=>{u=s.transaction(ca,"readwrite");const i=u.objectStore(ca).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});i.onsuccess=()=>e({modelArtifactsInfo:r}),i.onerror=e=>{o=a.objectStore(pa);const t=o.delete(this.modelPath);t.onsuccess=()=>(s.close(),n(i.error)),t.onerror=e=>(s.close(),n(i.error))}},i.onerror=e=>(s.close(),n(i.error)),a.oncomplete=()=>{null==u?s.close():u.oncomplete=()=>s.close()}}},r.onerror=e=>n(r.error)}))}}fa.URL_SCHEME="indexeddb://";const ma=e=>{return Le().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(fa.URL_SCHEME)?(t=e.slice(fa.URL_SCHEME.length),new fa(t)):null;var t};sa.registerSaveRouter(ma),sa.registerLoadRouter(ma);class ga{constructor(){this.indexedDB=ha()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(la,1);n.onupgradeneeded=()=>da(n),n.onsuccess=()=>{const r=n.result,s=r.transaction(pa,"readonly"),a=s.objectStore(pa).getAll();a.onsuccess=()=>{const t={};for(const e of a.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},a.onerror=e=>(r.close(),t(a.error)),s.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(fa.URL_SCHEME)?t.slice(fa.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(la,1);r.onupgradeneeded=()=>da(r),r.onsuccess=()=>{const s=r.result,a=s.transaction(pa,"readwrite"),o=a.objectStore(pa),i=o.get(e);let u;i.onsuccess=()=>{if(null==i.result)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=o.delete(e),a=()=>{u=s.transaction(ca,"readwrite");const r=u.objectStore(ca).delete(e);r.onsuccess=()=>t(i.result.modelArtifactsInfo),r.onerror=e=>n(i.error)};r.onsuccess=a,r.onerror=e=>(a(),s.close(),n(i.error))}},i.onerror=e=>(s.close(),n(i.error)),a.oncomplete=()=>{null==u?s.close():u.oncomplete=()=>s.close()}},r.onerror=e=>n(r.error)}))}}const ya="/",ba="tensorflowjs_models",wa="info",xa="model_topology",Sa="weight_specs",va="weight_data",ka="model_metadata";function Na(e){return{info:[ba,e,wa].join(ya),topology:[ba,e,xa].join(ya),weightSpecs:[ba,e,Sa].join(ya),weightData:[ba,e,va].join(ya),modelMetadata:[ba,e,ka].join(ya)}}function Ia(e){const t=e.split(ya);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(ya)}class Ta{constructor(e){if(!Le().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=Na(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=na(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(Ys)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData));const s={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};return null!=e.signature&&(s.signature=e.signature),null!=e.userDefinedMetadata&&(s.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(s.modelInitializer=e.modelInitializer),this.LS.setItem(this.keys.modelMetadata,JSON.stringify(s)),{modelArtifactsInfo:r}}catch(e){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const e=JSON.parse(s);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer)}const a=this.LS.getItem(this.keys.weightData);if(null==a)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(Ys){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(a),t}}Ta.URL_SCHEME="localstorage://";const Ca=e=>{return Le().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ta.URL_SCHEME)?(t=e.slice(Ta.URL_SCHEME.length),new Ta(t)):null;var t};sa.registerSaveRouter(Ca),sa.registerLoadRouter(Ca);class Aa{constructor(){Y(Le().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),Y("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=ba+ya,n=ya+wa;for(let r=0;r<this.LS.length;++r){const s=this.LS.key(r);s.startsWith(t)&&s.endsWith(n)&&(e[Ia(s)]=JSON.parse(this.LS.getItem(s)))}return e}async removeModel(e){var t;const n=Na(e=(t=e).startsWith(Ta.URL_SCHEME)?t.slice(Ta.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return this.LS.removeItem(n.info),this.LS.removeItem(n.topology),this.LS.removeItem(n.weightSpecs),this.LS.removeItem(n.weightData),r}}const Ea="://";class Pa{constructor(){this.managers={}}static getInstance(){return null==Pa.instance&&(Pa.instance=new Pa),Pa.instance}static registerManager(e,t){Y(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(Ea)&&(e=e.slice(0,e.indexOf(Ea))),Y(e.length>0,(()=>"scheme must not be an empty string."));const n=Pa.getInstance();Y(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}function $a(e){if(-1===e.indexOf(Ea))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Pa.getSchemes().join(",")}`);return{scheme:e.split(Ea)[0],path:e.split(Ea)[1]}}async function Ma(e,t,n=!1){Y(e!==t,(()=>`Old path and new path are the same: '${e}'`));const r=sa.getLoadHandlers(e);Y(r.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),Y(r.length<2,(()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`));const s=r[0],a=sa.getSaveHandlers(t);Y(a.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),Y(a.length<2,(()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`));const o=a[0],i=$a(e).scheme,u=$a(e).path,l=i===$a(e).scheme,c=await s.load();n&&l&&await Pa.getManager(i).removeModel(u);const p=await o.save(c);return n&&!l&&await Pa.getManager(i).removeModel(u),p.modelArtifactsInfo}async function Oa(){const e=Pa.getSchemes(),t={};for(const n of e){const e=await Pa.getManager(n).listModels();for(const r in e)t[n+Ea+r]=e[r]}return t}async function _a(e){const t=$a(e);return Pa.getManager(t.scheme).removeModel(t.path)}async function Da(e,t){return Ma(e,t,!1)}async function Ra(e,t){return Ma(e,t,!0)}class za{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if(Le().get("IS_BROWSER")){Le().setPlatform("browser",new za);try{Pa.registerManager(Ta.URL_SCHEME,new Aa)}catch(e){}try{Pa.registerManager(fa.URL_SCHEME,new ga)}catch(e){}}let Fa;function La(e,t="float32",n){return t=t||"float32",_e(e),new ps(e,t,n)}Le().get("IS_NODE")&&Le().setPlatform("node",new class{constructor(){this.util=n(628),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=Le().global.fetch?Le().global.fetch(e,t):(null==Fa&&(Fa=n(410)),Fa(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});const qa=js({cast_:function(e,t){const n=Bs(e,"x","cast");if(!ye(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},s={dtype:t};return Os.runKernel(ht,r,s)}}),Ba=js({clone_:function(e){const t={x:Bs(e,"x","clone","string_or_numeric")};return Os.runKernel(tn,t)}});function Wa(e,t=!1){console.log(e.toString(t))}function Va(e){return new Promise((e=>setTimeout(e))).then(e)}Ms(),ds={buffer:La,cast:qa,clone:Ba,print:Wa};class ja{constructor(e){if(!Le().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(ja.URL_SCHEME)&&(e=e.slice(ja.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelTopologyFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n};null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer);const s=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),a=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(a.download=this.modelTopologyFileName,a.href=s,await Va((()=>a.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await Va((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:na(e)}}}}ja.URL_SCHEME="downloads://";class Ua{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.files=e}async load(){const e=this.files[0],t=this.files.slice(1);return new Promise(((n,r)=>{const s=new FileReader;s.onload=s=>{const a=JSON.parse(s.target.result),o=a.modelTopology;if(null==o)return void r(new Error(`modelTopology field is missing from file ${e.name}`));0===t.length&&n({modelTopology:o});const i=a.weightsManifest;if(null==i)return void r(new Error(`weightManifest field is missing from file ${e.name}`));let u;try{u=this.checkManifestAndWeightFiles(i,t)}catch(e){return void r(e)}const l=[],c=[],p=[];i.forEach((e=>{e.paths.forEach((e=>{c.push(e),p.push(null)})),l.push(...e.weights)})),i.forEach((e=>{e.paths.forEach((e=>{const t=new FileReader;t.onload=t=>{const r=t.target.result,s=c.indexOf(e);if(p[s]=r,-1===p.indexOf(null)){const e={modelTopology:o,weightSpecs:l,weightData:ea(p),format:a.format,generatedBy:a.generatedBy,convertedBy:a.convertedBy};null!=a.signature&&(e.signature=a.signature),null!=a.userDefinedMetadata&&(e.userDefinedMetadata=a.userDefinedMetadata),null!=a.modelInitializer&&(e.modelInitializer=a.modelInitializer),n(e)}},t.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),t.readAsArrayBuffer(u[e])}))}))},s.onerror=t=>r(`Failed to read model topology and weights manifest JSON from file '${e.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),s.readAsText(e)}))}checkManifestAndWeightFiles(e,t){const n=[],r=t.map((e=>ta(e.name))),s={};for(const a of e)a.paths.forEach((e=>{const a=ta(e);if(-1!==n.indexOf(a))throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(n.push(a),-1===r.indexOf(a))throw new Error(`Weight file with basename '${a}' is not provided.`);s[e]=t[r.indexOf(a)]}));if(n.length!==t.length)throw new Error(`Mismatch in the number of files in weights manifest (${n.length}) and the number of weight files provided (${t.length}).`);return s}}function Ga(e){return new Ua(e)}function Ha(e,t,n,r){!function(e){Y(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){Y(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),Y(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),Y(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(e.map((a=>(a.then((a=>{const o=n+ ++s/e.length*(r-n);return t(o),a})),a))))}async function Ka(e,t){null==t&&(t={});const n=null==t.fetchFunc?Le().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),s=(null==t.onProgress?await Promise.all(r):await Ha(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(s):await Ha(s,t.onProgress,.5,1)}async function Qa(e,t="",n,r){return Xa((e=>Ka(e,{requestInit:r})))(e,t,n)}function Xa(e){return async(t,n="",r)=>{const s=t.map((()=>!1)),a={},o=null!=r?r.map((()=>!1)):[],i=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const u="quantization"in e?e.quantization.dtype:e.dtype,l=Ks[u]*ne(e.shape),c=()=>{s[t]=!0,null==a[t]&&(a[t]=[]),a[t].push({manifestEntry:e,groupOffset:n,sizeBytes:l})};null!=r?r.forEach(((t,n)=>{t===e.name&&(c(),o[n]=!0)})):c(),i.push(e.name),n+=l}))})),!o.every((e=>e))){const e=r.filter(((e,t)=>!o[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${i.join(", ")}.`)}const u=s.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),l=[];u.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;l.push(t)}))}));const c=await e(l),p={};let h=0;return u.forEach((e=>{const n=t[e].paths.length;let r=0;for(let e=0;e<n;e++)r+=c[h+e].byteLength;const s=new ArrayBuffer(r),o=new Uint8Array(s);let i=0;for(let e=0;e<n;e++){const t=new Uint8Array(c[h+e]);o.set(t,i),i+=t.byteLength}a[e].forEach((e=>{const t=Xs(s.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(const e in t)p[e]=t[e]})),h+=n})),p}}sa.registerSaveRouter((e=>Le().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ja.URL_SCHEME)?function(e="model"){return new ja(e)}(e.slice(ja.URL_SCHEME.length)):null));class Ja{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(Y("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=Le().platform.fetch,Y(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&Y(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n};null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),t.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const s=await this.fetch(this.path,t);if(s.ok)return{modelArtifactsInfo:na(e),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest,s=t.generatedBy,a=t.convertedBy,o=t.format,i=t.signature,u=t.userDefinedMetadata;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let l,c;if(null!=r){const e=await this.loadWeights(r);[l,c]=e}const p={modelTopology:n,weightSpecs:l,weightData:c,generatedBy:s,convertedBy:a,format:o};null!=i&&(p.signature=i),null!=u&&(p.userDefinedMetadata=u);const h=t.modelInitializer;return h&&(p.modelInitializer=h),p}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),s=this.weightPathPrefix||n,a=[];for(const t of e)a.push(...t.weights);const o=[],i=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?i.push(this.weightUrlConverter(e)):o.push(s+e+r);return this.weightUrlConverter&&o.push(...await Promise.all(i)),[a,ea(await Ka(o,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function Ya(e){return null!=e.match(Ja.URL_SCHEME_REGEX)}Ja.URL_SCHEME_REGEX=/^https?:\/\//;const Za=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>Ya(e))):Ya(e),n)return eo(e,t)}return null};function eo(e,t){return new Ja(e,t)}function to(e,t){return eo(e,t)}sa.registerSaveRouter(Za),sa.registerLoadRouter(Za);class no{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}}class ro{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}}function so(e,t,n,r){return 1===arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new no(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new no({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new no({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r}))}function ao(e){return new ro(e)}const oo=js({matMul_:function(e,t,n=!1,r=!1){let s=Bs(e,"a","matMul"),a=Bs(t,"b","matMul");[s,a]=Is(s,a);const o={a:s,b:a},i={transposeA:n,transposeB:r};return Os.runKernel(ut,o,i)}}),io=js({oneHot_:function(e,t,n=1,r=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const s={indices:Bs(e,"indices","oneHot","int32")},a={depth:t,onValue:n,offValue:r};return Os.runKernel(qn,s,a)}}),uo=js({transpose_:function(e,t){const n=Bs(e,"x","transpose");if(null==t&&(t=n.shape.map(((e,t)=>t)).reverse()),Y(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`)),t.forEach((e=>{Y(e>=0&&e<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+` but got ${t}`))})),n.rank<=1)return n.clone();const r={x:n},s={perm:t};return Os.runKernel(Er,r,s)}}),lo=js({confusionMatrix_:function(e,t,n){const r=Bs(e,"labels","confusionMatrix"),s=Bs(t,"predictions","confusionMatrix");Y(null==n||n>0&&Number.isInteger(n),(()=>`If provided, numClasses must be a positive integer, but got ${n}`)),Y(1===r.rank,(()=>`Expected the rank of labels to be 1, but got ${r.rank}`)),Y(1===s.rank,(()=>`Expected the rank of predictions to be 1, but got ${s.rank}`)),Y(r.shape[0]===s.shape[0],(()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${s.shape[0]}. Labels and predictions should have the same number of elements.`)),Y(n>0&&Number.isInteger(n),(()=>`numClasses is required to be a positive integer, but got ${n}`));const a=io(qa(r,"int32"),n),o=io(qa(s,"int32"),n),i=uo(a),u=oo(i,o);return qa(u,"int32")}});function co(e,t,n){if(ee(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const r=Fs(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Gs(e,t,r,n)}let po;async function ho(e,t){let n=Bs(e,"img","toPixels");if(!(e instanceof ms)){const e=n;n=qa(e,"int32"),e.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[r,s]=n.shape.slice(0,2),a=2===n.rank?1:n.shape[2];if(a>4||2===a)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${a}`);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);const o=await n.data(),i="float32"===n.dtype?255:1,u=new Uint8ClampedArray(s*r*4);for(let e=0;e<r*s;++e){const t=[0,0,0,255];for(let r=0;r<a;r++){const s=o[e*a+r];if("float32"===n.dtype){if(s<0||s>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${s}.`)}else if("int32"===n.dtype&&(s<0||s>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${s}.`);1===a?(t[0]=s*i,t[1]=s*i,t[2]=s*i):t[r]=s*i}const r=4*e;u[r+0]=Math.round(t[0]),u[r+1]=Math.round(t[1]),u[r+2]=Math.round(t[2]),u[r+3]=Math.round(t[3])}if(null!=t){t.width=s,t.height=r;const e=t.getContext("2d"),n=new ImageData(u,s,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),u}const fo=js({fromPixels_:function(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,s=!1,a=!1,o=!1,i=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)s=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)a=!0;else if(null!=e.getContext)o=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);i=!0}if(s){const t=2;if(s&&e.readyState<t)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=Wr(Dr,Os.backendName)){const n={pixels:e},r={numChannels:t};return Os.runKernel(Dr,n,r)}const[u,l]=s?[e.videoWidth,e.videoHeight]:[e.width,e.height];let c,p;if(o?c=e.getContext("2d").getImageData(0,0,u,l).data:r||n?c=e.data:(a||s||i)&&(null==po&&(po=document.createElement("canvas").getContext("2d")),po.canvas.width=u,po.canvas.height=l,po.drawImage(e,0,0,u,l),c=po.getImageData(0,0,u,l).data),4===t)p=new Int32Array(c);else{const e=u*l;p=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)p[n*t+e]=c[4*n+e]}return co(p,[l,u,t],"int32")}});function mo(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===ne(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const s=t.shape,a=s[s.length-1];let o=1;for(let e=0;e<s.length-1;++e)o*=s[e];const i=e.shape,u=s.slice();u.pop();let l=1;for(let e=a;e<n;++e)l*=i[e],u.push(i[e]);const c=[...Ae(e.shape).map((e=>e/l)),1].slice(0,a);return[u,o,l,c]}function go(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,s=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(a+` update.rank < ${s}. `);if(e.length<r+(n.rank-s))throw new Error(a+` Output shape length < ${r+(n.rank-s)}`);if(n.rank!==s+e.length-r)throw new Error(a+" update.rank != "+(s+e.length-r));for(let e=0;e<s;++e)if(n.shape[e]!==t.shape[e])throw new Error(a+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-s;++t)if(n.shape[t+s]!==e[t+r])throw new Error(a+` updates.shape[${t+s}] (${n.shape[t+s]}) != shape[${t+s}] (${e[t+s]})`)}function yo(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}go(n,t,e)}function bo(e,t,n){const r=t.shape.length,s=r>1?t.shape[r-1]:1,a=n.length;let o=1;for(let e=s;e<a;++e)o*=n[e];const i=s<1?1:s;return{sliceRank:s,numUpdates:ne(t.shape)/i,sliceSize:o,strides:[...Ae(n.slice(0,s)),1],outputSize:ne(n)}}function wo(e,t,n){const r=e.shape.length;Y(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),Y(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let s=0;s<r;++s)Y(t[s]+n[s]<=e.shape[s],(()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${t[s]+n[s]}) would overflow input.shape[${s}] (${e.shape[s]})`))}function xo(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function So(e,t,n){const r=[];for(let s=0;s<e.length;s++)r[s]=Math.ceil((t[s]-e[s])/n[s]);return r}function vo(e,t,n,r){const s=[...e];for(let e=s.length;e<r.length;e++)s.push(1);for(let e=0;e<n;e++)0===e?s[t]=1:(s.splice(t,0,1),s.pop());return s}function ko(e,t,n){return n<=e?n:n-(t-1)}function No(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function Io(e,t,n,r,s,a,o,i,u){const l=e.length;let c=new Array(l),p=new Array(l),h=new Array(l);if(t.length&&n>0){const u=t[0],l=n+1;c=To(o,u,l,r,e),p=Co(i,u,l,s,e),h=vo(a,u,l,e)}else for(let t=0;t<l;t++)c[t]=Eo(o,r,a,e,t,u),p[t]=Po(i,s,a,e,t,u),h[t]=Ao(a,t,u);return{begin:c,end:p,strides:h}}function To(e,t,n,r,s){const a=[...s],o=No(n,t);for(let s=0;s<a.length;s++)if(o.indexOf(s)>-1)a[s]=0;else{const o=ko(t,n,s);let i=r[o];e&1<<o&&(i=0),a[s]=i}return a}function Co(e,t,n,r,s){const a=[...s],o=No(n,t);for(let s=0;s<a.length;s++)if(o.indexOf(s)>-1)a[s]=Number.MAX_SAFE_INTEGER;else{const o=ko(t,n,s);let i=r[o];e&1<<o&&(i=Number.MAX_SAFE_INTEGER),a[s]=i}for(let e=0;e<a.length;e++){const t=s[e];a[e]<0&&(a[e]+=t),a[e]=H(0,a[e],s[e])}return a}function Ao(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function Eo(e,t,n,r,s,a){let o=t[s];const i=n[s]||1;(e&1<<s||a&1<<s||null==o)&&(o=i>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=r[s];return o<0&&(o+=u),o=H(0,o,u-1),o}function Po(e,t,n,r,s,a){let o=t[s];const i=n[s]||1;(e&1<<s||a&1<<s||null==o)&&(o=i>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=r[s];return o<0&&(o+=u),o=i>0?H(0,o,u):H(-1,o,u-1),o}function $o(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let s=r+1;s<n.length;s++)if(t[s]>0||n[s]!==e[s])return!1;return!0}function Mo(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function Oo(e,t,n){let r;const s=e.shape.length;let a;return r="number"==typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),r.forEach((e=>{Y(-1!==e,(()=>"slice() does not support negative begin indexing."))})),a=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,a=a.map(((t,n)=>t>=0?t:(Y(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,a]}function _o(e,t,n,r,s,a,o,i,u){let l=t.slice(),c=n.slice(),p=r;null==r&&(p=new Array(l.length));const h=xo(o);if(h.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==o&&0!==i)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==o&&0!==u)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const d=e.length-l.length,f=xo(i),m=e.slice();f.forEach((e=>{l[e]=0,c[e]=1,m.splice(e,0,1)}));const{begin:g,end:y,strides:b}=Io(m,h,d,l,c,p,s,a,o);l=g,c=y,p=b;const w=xo(u);w.forEach((e=>{c[e]=l[e]+1,p[e]=1}));const x=So(l,c,p),S=x.filter(((e,t)=>-1===w.indexOf(t)));return{nonStrided:p.every((e=>1===e)),$begin:l,$end:c,$strides:p,size:x,newShape:m,outShape:S}}class Do{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Ro{constructor(){this.classNameMap={}}static getMap(){return null==Ro.instance&&(Ro.instance=new Ro),Ro.instance}static register(e){Ro.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function zo(e){Y(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),Y("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),Y(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),Ro.register(e)}const Fo=.1;function Lo(e,t,n){return null==n&&(n=qo()),Bo(e,t,((e,t)=>Uo(e,t,n)))}function qo(){return 32===Os.backend.floatPrecision()?.001:Fo}function Bo(e,t,n){let r=!0;if((we(e)||we(t))&&(r=!1),we(e)&&we(t)&&(r=!0),r){const n=e.constructor.name,r=t.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: ${r}`)}if(Array.isArray(e)&&Array.isArray(t)){const n=Fs(e),r=Fs(t);if(!se(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}const s=we(e)?e:te(e),a=we(t)?t:te(t);if(s.length!==a.length)throw new Error(`Arrays have different lengths actual: ${s.length} vs expected: ${a.length}.\nActual:   ${s}.\nExpected: ${a}.`);for(let e=0;e<a.length;++e){const t=s[e],r=a[e];if(!n(t,r))throw new Error(`Arrays differ: actual[${e}] = ${t}, expected[${e}] = ${r}.\nActual:   ${s}.\nExpected: ${a}.`)}}function Wo(e,t){e().then((()=>t.fail()),(()=>t()))}function Vo(e,t){const n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return ve(e)||ve(e[0])||ve(t)||ve(t[0])?Bo(e,n,((e,t)=>e==t)):Bo(e,t,((e,t)=>Uo(e,t,0)))}function jo(e,t,n){if(null==n&&(n=qo()),!Uo(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)}function Uo(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function Go(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)}function Ho(e,t){expect(new Float32Array(e)).toEqual(new Float32Array(t))}function Ko(e){for(let t=0;t<e.length;t++){const n=e[t];Array.isArray(n)?Ko(n):e[t]=ls(n)}return e}const Qo="2.8.6";function Xo(){Le().set("PROD",!0)}function Jo(){Le().set("DEBUG",!0)}function Yo(){Le().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function Zo(e){Le().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function ei(){Os.disposeVariables()}function ti(){return Os}function ni(){return Os.memory()}function ri(e){return Os.profile(e)}function si(e,t){return Os.tidy(e,t)}function ai(e){As(e).forEach((e=>e.dispose()))}function oi(e){return Os.keep(e)}function ii(e){return Os.time(e)}function ui(e){return Os.setBackend(e)}function li(){return Os.ready()}function ci(){return Os.backendName}function pi(e){Os.removeBackend(e)}function hi(e){return Os.findBackend(e)}function di(e){return Os.findBackendFactory(e)}function fi(e,t,n=1){return Os.registerBackend(e,t,n)}function mi(){return Os.backend}function gi(e,t){Le().setPlatform(e,t)}fs=Zo;const yi=js({add_:function(e,t){let n=Bs(e,"a","add"),r=Bs(t,"b","add");[n,r]=Is(n,r);const s={a:n,b:r};return Os.runKernel(He,s)}}),bi=js({floorDiv_:function(e,t){let n=Bs(e,"a","floorDiv"),r=Bs(t,"b","floorDiv");[n,r]=Is(n,r);const s={a:n,b:r};return Os.runKernel(Qt,s)}}),wi=js({div_:function(e,t){let n=Bs(e,"a","div"),r=Bs(t,"b","div");if([n,r]=Is(n,r),"int32"===n.dtype&&"int32"===r.dtype)return bi(n,r);const s={a:n,b:r};return Os.runKernel(zt,s,{})}}),xi=js({mul_:function(e,t){let n=Bs(e,"a","mul"),r=Bs(t,"b","mul");[n,r]=Is(n,r);const s={a:n,b:r};return Os.runKernel(On,s)}}),Si=js({sqrt_:function(e){const t={x:Bs(e,"x","sqrt")};return Os.runKernel(mr,t)}}),vi=js({square_:function(e){const t=Bs(e,"x","square");return Os.runKernel("Square",{x:t},{})}}),ki=js({zerosLike_:function(e){const t={x:Bs(e,"x","zerosLike")};return Os.runKernel(Or,t)}});function Ni(e){return Y(Te(e),(()=>"The f passed in grad(f) must be a function")),(t,n)=>{const r=Bs(t,"x","tf.grad","string_or_numeric"),s=null!=n?Bs(n,"dy","tf.grad"):null;return Os.tidy((()=>{const{value:t,grads:n}=Os.gradients((()=>e(r)),[r],s);return null!=s&&Z(t.shape,s.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),Pi(n),n[0]}))}}function Ii(e){return Y(Te(e),(()=>"The f passed in grads(f) must be a function")),(t,n)=>{Y(Array.isArray(t),(()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s"));const r=Ws(t,"args","tf.grads","string_or_numeric"),s=null!=n?Bs(n,"dy","tf.grads"):null;return Os.tidy((()=>{const{value:t,grads:n}=Os.gradients((()=>e(...r)),r,s);return null!=s&&Z(t.shape,s.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Pi(n),n}))}}function Ti(e){return Y(Te(e),(()=>"The f passed in valueAndGrad(f) must be a function")),(t,n)=>{Y(t instanceof ms,(()=>"The x passed in valueAndGrad(f)(x) must be a tensor")),Y(null==n||n instanceof ms,(()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor"));const{grads:r,value:s}=Os.gradients((()=>e(t)),[t],n);return Pi(r),{grad:r[0],value:s}}}function Ci(e){return Y(Te(e),(()=>"The f passed in valueAndGrads(f) must be a function")),(t,n)=>{Y(Array.isArray(t)&&t.every((e=>e instanceof ms)),(()=>"The args passed in valueAndGrads(f)(args) must be array of tensors")),Y(null==n||n instanceof ms,(()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor"));const r=Os.gradients((()=>e(...t)),t,n);return null!=n&&Z(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Pi(r.grads),r}}function Ai(e,t){Y(Te(e),(()=>"The f passed in variableGrads(f) must be a function")),Y(null==t||Array.isArray(t)&&t.every((e=>e instanceof gs)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in Os.registeredVariables)t.push(Os.registeredVariables[e])}const r=n?t.filter((e=>!e.trainable)):null,s=t.length;Y((t=t.filter((e=>e.trainable))).length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`));const{value:a,grads:o}=Os.gradients(e,t,null,!0);Y(o.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),Y(0===a.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`));const i={};return t.forEach(((e,t)=>{null!=o[t]&&(i[e.name]=o[t])})),null!=r&&r.forEach((e=>i[e.name]=null)),{value:a,grads:i}}function Ei(e){return Os.customGrad(e)}function Pi(e){if(e.filter((e=>null==e)).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}function $i(e,t){if((we(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&we(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Gs(e,[],[],t)}class Mi extends Do{minimize(e,t=!1,n){const{value:r,grads:s}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:s[e.name]})));this.applyGradients(e)}else this.applyGradients(s);return ai(s),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return Ai(e,t)}dispose(){null!=this.iterations_&&ai(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:$i(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Mi,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class Oi extends Mi{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=Os.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Os.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:si((()=>ki(r).variable(!1)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:si((()=>ki(r).variable(!1)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const a=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;si((()=>{const e=yi(xi(a,this.rho),xi(vi(s),1-this.rho)),t=xi(wi(Si(yi(o,this.epsilon)),Si(yi(a,this.epsilon))),s),n=yi(xi(o,this.rho),xi(vi(t),1-this.rho));a.assign(e),o.assign(n);const i=yi(xi(t,-this.learningRate),r);r.assign(i)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(ai(this.accumulatedGrads.map((e=>e.variable))),ai(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}function _i(e,t,n){const r={shape:e,value:t,dtype:n};return Os.runKernel(Gt,{},r)}Oi.className="Adadelta",zo(Oi);class Di extends Mi{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Os.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:si((()=>_i(r.shape,this.initialAccumulatorValue).variable(e)))}}const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const a=this.accumulatedGrads[n].variable;si((()=>{const e=yi(a,vi(s));a.assign(e);const t=yi(xi(wi(s,Si(yi(e,Os.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&ai(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}Di.className="Adagrad",zo(Di);const Ri=js({pow_:function(e,t){let n=Bs(e,"base","pow"),r=Bs(t,"exp","pow");[n,r]=Is(n,r);const s={a:n,b:r};return Os.runKernel(jn,s)}}),zi=js({sub_:function(e,t){let n=Bs(e,"a","sub"),r=Bs(t,"b","sub");[n,r]=Is(n,r);const s={a:n,b:r};return Os.runKernel(vr,s)}});class Fi extends Mi{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],si((()=>{this.accBeta1=$i(t).variable(),this.accBeta2=$i(n).variable()})),null==r&&(this.epsilon=Os.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);si((()=>{const n=zi(1,this.accBeta1),r=zi(1,this.accBeta2);t.forEach(((t,s)=>{const a=Os.registeredVariables[t];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:si((()=>ki(a).variable(!1)))}),null==this.accumulatedSecondMoment[s]&&(this.accumulatedSecondMoment[s]={originalName:`${t}/v`,variable:si((()=>ki(a).variable(!1)))});const o=Array.isArray(e)?e[s].tensor:e[t];if(null==o)return;const i=this.accumulatedFirstMoment[s].variable,u=this.accumulatedSecondMoment[s].variable,l=yi(xi(i,this.beta1),xi(o,1-this.beta1)),c=yi(xi(u,this.beta2),xi(vi(o),1-this.beta2)),p=wi(l,n),h=wi(c,r);i.assign(l),u.assign(c);const d=yi(xi(wi(p,yi(Si(h),this.epsilon)),-this.learningRate),a);a.assign(d)})),this.accBeta1.assign(xi(this.accBeta1,this.beta1)),this.accBeta2.assign(xi(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&ai(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&ai(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),si((()=>{this.accBeta1.assign(Ri(this.beta1,this.iterations_+1)),this.accBeta2.assign(Ri(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}Fi.className="Adam",zo(Fi);const Li=js({abs_:function(e){const t=Bs(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return Os.runKernel(gt,e)}{const e={x:t};return Os.runKernel(je,e)}}});function qi(e,t){const n=e.length,r=[];for(let s=0;s<n;s++){const a=n-1-s,o=e[a]||1;(t[t.length-1-s]||1)>1&&1===o&&r.unshift(a)}return r}function Bi(e,t){const n=[];for(let r=0;r<t.length;r++){const s=e[e.length-r-1],a=t.length-r-1,o=t[a];(null==s||1===s&&o>1)&&n.unshift(a)}return n}function Wi(e,t){const n=[],r=Math.max(e.length,t.length);for(let s=0;s<r;s++){let r=e[e.length-s-1];null==r&&(r=1);let a=t[t.length-s-1];if(null==a&&(a=1),1===r)n.unshift(a);else if(1===a)n.unshift(r);else{if(r!==a)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);n.unshift(r)}}return n}const Vi=js({maximum_:function(e,t){let n=Bs(e,"a","maximum"),r=Bs(t,"b","maximum");[n,r]=Is(n,r),"bool"===n.dtype&&(n=qa(n,"int32"),r=qa(r,"int32")),Wi(n.shape,r.shape);const s={a:n,b:r};return Os.runKernel(Sn,s)}});class ji extends Mi{constructor(e,t,n,r=null,s=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],si((()=>{this.iteration=$i(0).variable(),this.accBeta1=$i(t).variable()})),null==r&&(this.epsilon=Os.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);si((()=>{const n=zi(1,this.accBeta1),r=wi(-this.learningRate,yi(xi(this.iteration,this.decay),1));t.forEach(((t,s)=>{const a=Os.registeredVariables[t];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:ki(a).variable(!1)}),null==this.accumulatedWeightedInfNorm[s]&&(this.accumulatedWeightedInfNorm[s]={originalName:`${t}/v`,variable:ki(a).variable(!1)});const o=Array.isArray(e)?e[s].tensor:e[t];if(null==o)return;const i=this.accumulatedFirstMoment[s].variable,u=this.accumulatedWeightedInfNorm[s].variable,l=yi(xi(i,this.beta1),xi(o,1-this.beta1)),c=xi(u,this.beta2),p=Li(o),h=Vi(c,p);i.assign(l),u.assign(h);const d=yi(xi(wi(r,n),wi(l,yi(h,this.epsilon))),a);a.assign(d)})),this.iteration.assign(yi(this.iteration,1)),this.accBeta1.assign(xi(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&ai(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&ai(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}ji.className="Adamax",zo(ji);class Ui extends Mi{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const s=Os.registeredVariables[t];si((()=>{const e=yi(xi(this.c,r),s);s.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=oi($i(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}Ui.className="SGD",zo(Ui);class Gi extends Ui{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=$i(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Os.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:si((()=>ki(r).variable(e)))}}const s=this.accumulations[n].variable,a=Array.isArray(e)?e[n].tensor:e[t];null!=a&&si((()=>{let e;const t=yi(xi(this.m,s),a);e=this.useNesterov?yi(xi(this.c,yi(a,xi(t,this.m))),r):yi(xi(this.c,t),r),s.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&ai(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}Gi.className="Momentum",zo(Gi);class Hi extends Mi{constructor(e,t=.9,n=0,r=null,s=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==r&&(this.epsilon=Os.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Os.registeredVariables[t],s=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:si((()=>ki(r).variable(s)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:si((()=>ki(r).variable(s)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:si((()=>ki(r).variable(s)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const o=this.accumulatedMeanSquares[n].variable,i=this.accumulatedMoments[n].variable;si((()=>{const e=yi(xi(o,this.decay),xi(vi(a),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,s=yi(xi(t,this.decay),xi(a,1-this.decay)),u=wi(xi(a,this.learningRate),Si(zi(e,yi(vi(s),this.epsilon)))),l=yi(xi(i,this.momentum),u);o.assign(e),t.assign(s),i.assign(l);const c=zi(r,l);r.assign(c)}else{const e=yi(xi(o,this.decay),xi(vi(a),1-this.decay)),t=yi(xi(i,this.momentum),wi(xi(a,this.learningRate),Si(yi(e,this.epsilon))));o.assign(e),i.assign(t);const n=zi(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&ai(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&ai(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&ai(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}Hi.className="RMSProp",zo(Hi);const Ki=js({acos_:function(e){const t={x:Bs(e,"x","acos")};return Os.runKernel(Ue,t)}}),Qi=js({acosh_:function(e){const t={x:Bs(e,"x","acosh")};return Os.runKernel(Ge,t)}}),Xi=js({addN_:function(e){Y(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),Y(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));const t=e.map(((e,t)=>Bs(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!se(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const r=t;return Os.runKernel(Ke,r)}}),Ji=js({all_:function(e,t=null,n=!1){const r={x:Bs(e,"x","all","bool")},s={axis:t,keepDims:n};return Os.runKernel(Qe,r,s)}}),Yi=js({any_:function(e,t=null,n=!1){const r={x:Bs(e,"x","any","bool")},s={axis:t,keepDims:n};return Os.runKernel(Xe,r,s)}}),Zi=js({argMax_:function(e,t=0){const n={x:Bs(e,"x","argMax")},r={axis:t};return Os.runKernel(Je,n,r)}}),eu=js({argMin_:function(e,t=0){const n={x:Bs(e,"x","argMin")},r={axis:t};return Os.runKernel(Ye,n,r)}}),tu=js({asin_:function(e){const t={x:Bs(e,"x","asin")};return Os.runKernel(Ze,t)}}),nu=js({asinh_:function(e){const t={x:Bs(e,"x","asinh")};return Os.runKernel(et,t)}}),ru=js({atan_:function(e){const t={x:Bs(e,"x","atan")};return Os.runKernel(tt,t)}}),su=js({atan2_:function(e,t){let n=Bs(e,"a","atan2"),r=Bs(t,"b","atan2");[n,r]=Is(n,r);const s={a:n,b:r};return Os.runKernel(rt,s)}}),au=js({atanh_:function(e){const t={x:Bs(e,"x","atanh")};return Os.runKernel(nt,t)}});function ou(e,t,n,r,s="NHWC",a){return lu(e,[...t,e[3]],n,a,r,null,null,bu(s))}function iu(e,t,n,r,s,a,o="channelsLast"){const[i,u]=hu(t);let l;if("channelsLast"===o)l=[i,u,e[3],e[3]];else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);l=[i,u,e[1],e[1]]}return lu(e,l,n,r,s,a,!1,o)}function uu(e,t,n,r,s,a,o="NDHWC"){const[i,u,l]=du(t);let c,p;if("NDHWC"===o)p="channelsLast",c=[i,u,l,e[4],e[4]];else{if("NCDHW"!==o)throw new Error(`Unknown dataFormat ${o}`);p="channelsFirst",c=[i,u,l,e[1],e[1]]}return cu(e,c,n,r,s,!1,p,a)}function lu(e,t,n,r,s,a,o=!1,i="channelsLast"){let[u,l,c,p]=[-1,-1,-1,-1];if("channelsLast"===i)[u,l,c,p]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[u,p,l,c]=e}const[h,d,,f]=t,[m,g]=hu(n),[y,b]=hu(r),w=fu(h,y),x=fu(d,b),{padInfo:S,outHeight:v,outWidth:k}=function(e,t,n,r,s,a,o,i,u){let l,c,p;if("number"==typeof e){l={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,s){null==r&&(r=pu(e,t,n));const a=e[1];return[mu((e[0]-t+2*r)/n+1,s),mu((a-t+2*r)/n+1,s)]}([t,n],a,r,e,i);c=s[0],p=s[1]}else if("same"===e){c=Math.ceil(t/r),p=Math.ceil(n/s);const e=Math.max(0,(c-1)*r+a-t),i=Math.max(0,(p-1)*s+o-n),u=Math.floor(e/2),h=e-u,d=Math.floor(i/2);l={top:u,bottom:h,left:d,right:i-d,type:"SAME"}}else if("valid"===e)l={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-a+1)/r),p=Math.ceil((n-o+1)/s);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const h="channelsLast"===u?e[1][0]:e[2][0],d="channelsLast"===u?e[1][1]:e[2][1],f="channelsLast"===u?e[2][0]:e[3][0],m="channelsLast"===u?e[2][1]:e[3][1];l={top:h,bottom:d,left:f,right:m,type:0===h&&0===d&&0===f&&0===m?"VALID":"EXPLICIT"},c=mu((t-a+h+d)/r+1,i),p=mu((n-o+f+m)/s+1,i)}}return{padInfo:l,outHeight:c,outWidth:p}}(s,l,c,m,g,w,x,a,i),N=o?f*p:f;let I;return"channelsFirst"===i?I=[u,N,v,k]:"channelsLast"===i&&(I=[u,v,k,N]),{batchSize:u,dataFormat:i,inHeight:l,inWidth:c,inChannels:p,outHeight:v,outWidth:k,outChannels:N,padInfo:S,strideHeight:m,strideWidth:g,filterHeight:h,filterWidth:d,effectiveFilterHeight:w,effectiveFilterWidth:x,dilationHeight:y,dilationWidth:b,inShape:e,outShape:I,filterShape:t}}function cu(e,t,n,r,s,a=!1,o="channelsLast",i){let[u,l,c,p,h]=[-1,-1,-1,-1,-1];if("channelsLast"===o)[u,l,c,p,h]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[u,h,l,c,p]=e}const[d,f,m,,g]=t,[y,b,w]=du(n),[x,S,v]=du(r),k=fu(d,x),N=fu(f,S),I=fu(m,v),{padInfo:T,outDepth:C,outHeight:A,outWidth:E}=function(e,t,n,r,s,a,o,i,u,l,c){let p,h,d,f;if("number"==typeof e){p={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,r,s,a){null==s&&(s=pu(e,t,r));const o=e[1],i=e[2];return[mu((e[0]-t+2*s)/r+1,a),mu((o-t+2*s)/r+1,a),mu((i-t+2*s)/r+1,a),1]}([t,n,r,1],i,0,s,e,c);h=a[0],d=a[1],f=a[2]}else if("same"===e){h=Math.ceil(t/s),d=Math.ceil(n/a),f=Math.ceil(r/o);const e=(h-1)*s+i-t,c=(d-1)*a+u-n,m=(f-1)*o+l-r,g=Math.floor(e/2),y=e-g,b=Math.floor(c/2),w=c-b,x=Math.floor(m/2);p={top:b,bottom:w,left:x,right:m-x,front:g,back:y,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);p={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},h=Math.ceil((t-i+1)/s),d=Math.ceil((n-u+1)/a),f=Math.ceil((r-l+1)/o)}return{padInfo:p,outDepth:h,outHeight:d,outWidth:f}}(s,l,c,p,y,b,w,k,N,I,i),P=a?g*h:g;let $;return"channelsFirst"===o?$=[u,P,C,A,E]:"channelsLast"===o&&($=[u,C,A,E,P]),{batchSize:u,dataFormat:o,inDepth:l,inHeight:c,inWidth:p,inChannels:h,outDepth:C,outHeight:A,outWidth:E,outChannels:P,padInfo:T,strideDepth:y,strideHeight:b,strideWidth:w,filterDepth:d,filterHeight:f,filterWidth:m,effectiveFilterDepth:k,effectiveFilterHeight:N,effectiveFilterWidth:I,dilationDepth:x,dilationHeight:S,dilationWidth:v,inShape:e,outShape:$,filterShape:t}}function pu(e,t,n,r=1){const s=fu(t,r);return Math.floor((e[0]*(n-1)-n+s)/2)}function hu(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function du(e){return"number"==typeof e?[e,e,e]:e}function fu(e,t){return t<=1?e:e+(e-1)*(t-1)}function mu(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function gu(e){const[t,n,r]=hu(e);return 1===t&&1===n&&1===r}function yu(e,t){return gu(e)||gu(t)}function bu(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}const wu=js({reshape_:function(e,t){const n={x:Bs(e,"x","reshape","string_or_numeric")},r={shape:t};return Os.runKernel(Jn,n,r)}}),xu=js({avgPool_:function(e,t,n,r,s){const a=Bs(e,"x","avgPool","float32");Y(yu(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let o=a,i=!1;3===a.rank&&(i=!0,o=wu(a,[1,a.shape[0],a.shape[1],a.shape[2]])),Y(4===o.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${o.rank}.`)),null!=s&&Y(ae(r),(()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const u={x:o},l={filterSize:t,strides:n,pad:r,dimRoundingMode:s};let c=Os.runKernel(st,u,l);return c=qa(c,a.dtype),i?wu(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Su=js({avgPool3d_:function(e,t,n,r,s,a="NDHWC",o){null==o?o=[1,1,1]:Zo("dilations is deprecated, this field will be gone in v3.0.0.");const i=Bs(e,"x","avgPool3d","float32");let u=i,l=!1;4===i.rank&&(l=!0,u=wu(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),Y(5===u.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${u.rank}.`)),Y("NDHWC"===a,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),Y(yu(n,o),(()=>`Error in avgPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`)),null!=s&&Y(ae(r),(()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const c={x:u},p={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:a,dilations:o};let h=Os.runKernel(ot,c,p);return h=qa(h,u.dtype),l?wu(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),vu=js({concat_:function(e,t=0){Y(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=Ws(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return Ba(n[0]);const r=n,s={axis:t};return Os.runKernel(yt,r,s)}}),ku=js({sigmoid_:function(e){const t={x:Bs(e,"x","sigmoid")};return Os.runKernel(dr,t)}}),Nu=js({slice_:function(e,t,n){const r=Bs(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const s={x:r},a={begin:t,size:n};return Os.runKernel(lr,s,a)}}),Iu=js({tanh_:function(e){const t={x:Bs(e,"x","tanh")};return Os.runKernel(Tr,t)}}),Tu=js({basicLSTMCell_:function(e,t,n,r,s,a){const o=Bs(e,"forgetBias","basicLSTMCell"),i=Bs(t,"lstmKernel","basicLSTMCell"),u=Bs(n,"lstmBias","basicLSTMCell"),l=Bs(r,"data","basicLSTMCell"),c=Bs(s,"c","basicLSTMCell"),p=Bs(a,"h","basicLSTMCell"),h=vu([l,p],1),d=oo(h,i),f=yi(d,u),m=f.shape[0],g=f.shape[1]/4,y=[m,g],b=Nu(f,[0,0],y),w=Nu(f,[0,g],y),x=Nu(f,[0,2*g],y),S=Nu(f,[0,3*g],y),v=yi(xi(ku(b),Iu(w)),xi(c,ku(yi(o,x))));return[v,xi(Iu(v),ku(S))]}}),Cu=js({batchToSpaceND_:function(e,t,n){const r=Bs(e,"x","batchToSpaceND"),s=t.reduce(((e,t)=>e*t));Y(r.rank>=1+t.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`)),Y(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),Y(r.shape[0]%s==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${s}`));const a={x:r},o={blockShape:t,crops:n};return Os.runKernel(lt,a,o)}}),Au=js({batchNorm_:function(e,t,n,r,s,a){null==a&&(a=.001);const o=Bs(e,"x","batchNorm"),i=Bs(t,"mean","batchNorm"),u=Bs(n,"variance","batchNorm");let l,c;null!=s&&(l=Bs(s,"scale","batchNorm")),null!=r&&(c=Bs(r,"offset","batchNorm")),Y(i.rank===u.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),Y(null==c||i.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),Y(null==l||i.rank===l.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const p={x:function(e){let t;return t=0===e.rank||1===e.rank?wu(e,[1,1,1,e.size]):2===e.rank?wu(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?wu(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(o),scale:l,offset:c,mean:i,variance:u},h={varianceEpsilon:a},d=Os.runKernel(Xt,p,h);return wu(d,o.shape)}}),Eu=js({batchNorm2d_:function(e,t,n,r,s,a){const o=Bs(e,"x","batchNorm"),i=Bs(t,"mean","batchNorm"),u=Bs(n,"variance","batchNorm");let l,c;return null!=s&&(l=Bs(s,"scale","batchNorm")),null!=r&&(c=Bs(r,"offset","batchNorm")),Y(2===o.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${o.rank}.`)),Y(2===i.rank||1===i.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`)),Y(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=l&&Y(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=c&&Y(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),Au(o,i,u,c,l,a)}}),Pu=js({batchNorm3d_:function(e,t,n,r,s,a){const o=Bs(e,"x","batchNorm"),i=Bs(t,"mean","batchNorm"),u=Bs(n,"variance","batchNorm");let l,c;return null!=s&&(l=Bs(s,"scale","batchNorm")),null!=r&&(c=Bs(r,"offset","batchNorm")),Y(3===o.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${o.rank}.`)),Y(3===i.rank||1===i.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`)),Y(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=l&&Y(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=c&&Y(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),Au(o,i,u,c,l,a)}}),$u=js({batchNorm4d_:function(e,t,n,r,s,a){const o=Bs(e,"x","batchNorm"),i=Bs(t,"mean","batchNorm"),u=Bs(n,"variance","batchNorm");let l,c;return null!=s&&(l=Bs(s,"scale","batchNorm")),null!=r&&(c=Bs(r,"offset","batchNorm")),Y(4===o.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${o.rank}.`)),Y(4===i.rank||1===i.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`)),Y(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=l&&Y(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=c&&Y(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),Au(o,i,u,c,l,a)}}),Mu=js({bincount_:function(e,t,n){const r=Bs(e,"x","bincount"),s=Bs(t,"weights","bincount");Y("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),Y(n>=0,(()=>`size must be non-negative, but got ${n}.`)),Y(s.size===r.size||0===s.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${s.shape}.`));const a={x:r,weights:s},o={size:n};return Os.runKernel(ct,a,o)}}),Ou=js({broadcastTo_:function(e,t){let n=Bs(e,"broadcastTo","x");const r=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=wu(n,e)}const s=n.shape,a=Array.from(t);for(let e=t.length-1;e>=0;e--)if(s[e]===t[e])a[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===a.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return Ba(n);const o={x:n},i={reps:a};return Os.runKernel(Cr,o,i)}}),_u=js({ceil_:function(e){const t={x:Bs(e,"x","ceil")};return Os.runKernel(dt,t)}}),Du=js({clipByValue_:function(e,t,n){const r=Bs(e,"x","clipByValue");Y(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`));const s={x:r},a={clipValueMin:t,clipValueMax:n};return Os.runKernel(ft,s,a)}}),Ru=js({concat1d_:function(e){return vu(e,0)}}),zu=js({concat2d_:function(e,t){return vu(e,t)}}),Fu=js({concat3d_:function(e,t){return vu(e,t)}}),Lu=js({concat4d_:function(e,t){return vu(e,t)}}),qu=js({conv2d_:function(e,t,n,r,s="NHWC",a=[1,1],o){const i=Bs(e,"x","conv2d"),u=Bs(t,"filter","conv2d");let l=i,c=!1;3===i.rank&&(c=!0,l=wu(i,[1,i.shape[0],i.shape[1],i.shape[2]])),Y(4===l.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`)),Y(4===u.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`)),null!=o&&Y(ae(r),(()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`));const p="NHWC"===s?l.shape[3]:l.shape[1];Y(p===u.shape[2],(()=>`Error in conv2d: depth of input (${p}) must match input depth for filter ${u.shape[2]}.`)),Y(yu(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`));const h={x:l,filter:u},d={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:o},f=Os.runKernel(bt,h,d);return c?wu(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Bu=js({conv1d_:function(e,t,n,r,s="NWC",a=1,o){const i=Bs(e,"x","conv1d"),u=Bs(t,"filter","conv1d");let l=i,c=!1;2===i.rank&&(c=!0,l=wu(i,[1,i.shape[0],i.shape[1]])),Y(3===l.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`)),Y(3===u.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`)),null!=o&&Y(ae(r),(()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`)),Y(l.shape[2]===u.shape[1],(()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${u.shape[1]}.`)),Y(yu(n,a),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`)),Y("NWC"===s,(()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`));const p=wu(u,[1,u.shape[0],u.shape[1],u.shape[2]]),h=wu(l,[l.shape[0],1,l.shape[1],l.shape[2]]),d=qu(h,p,[1,n],r,"NHWC",[1,a],o);return wu(d,c?[d.shape[2],d.shape[3]]:[d.shape[0],d.shape[2],d.shape[3]])}}),Wu=js({conv2DBackpropInput_:function(e,t,n,r,s,a="NHWC",o){Y(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let i=e,u=t,l=!1;3===t.rank&&(l=!0,u=wu(t,[1,t.shape[0],t.shape[1],t.shape[2]]),i=[1,e[0],e[1],e[2]]),Y(4===i.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${i.length}.`)),Y(4===u.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`)),Y(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===a?i[3]:i[1],p="NHWC"===a?u.shape[3]:u.shape[1];Y(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),Y(p===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${p}) must match output depth for filter ${n.shape[3]}.`)),null!=o&&Y(ae(s),(()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${o} but got pad ${s}.`));const h={dy:u,filter:n},d={strides:r,pad:s,dataFormat:a,dimRoundingMode:o,inputShape:i},f=Os.runKernel(xt,h,d);return l?wu(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Vu=js({conv2dTranspose_:function(e,t,n,r,s,a){const o=Bs(e,"x","conv2dTranspose"),i=Bs(t,"filter","conv2dTranspose");return Wu(n,o,i,r,s,"NHWC",a)}}),ju=js({conv3d_:function(e,t,n,r,s="NDHWC",a=[1,1,1]){const o=Bs(e,"x","conv3d"),i=Bs(t,"filter","conv3d");let u=o,l=!1;4===o.rank&&(l=!0,u=wu(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),Y(5===u.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`)),Y(5===i.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${i.rank}.`)),Y(u.shape[4]===i.shape[3],(()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${i.shape[3]}.`)),Y(yu(n,a),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),Y("NDHWC"===s,(()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`));const c={x:u,filter:i},p={strides:n,pad:r,dataFormat:s,dilations:a},h=Os.runKernel(St,c,p);return l?wu(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),Uu=js({conv3DBackpropInput_:function(e,t,n,r,s){Y(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let a=e,o=t,i=!1;4===t.rank&&(i=!0,o=wu(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),a=[1,e[0],e[1],e[2],e[3]]);const u=a[4],l=o.shape[4];Y(5===a.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${a.length}.`)),Y(5===o.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${o.rank}`)),Y(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),Y(u===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[3]}.`)),Y(l===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${n.shape[4]}.`));const c={dy:o,filter:n},p={pad:s,strides:r,inputShape:a},h=Os.runKernel(kt,c,p);return i?wu(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),Gu=js({conv3dTranspose_:function(e,t,n,r,s){const a=Bs(e,"x","conv3dTranspose"),o=Bs(t,"filter","conv3dTranspose");return Uu(n,a,o,r,s)}}),Hu=js({cos_:function(e){const t={x:Bs(e,"x","cos")};return Os.runKernel(Nt,t)}}),Ku=js({cosh_:function(e){const t={x:Bs(e,"x","cosh")};return Os.runKernel(It,t)}}),Qu=js({cumsum_:function(e,t=0,n=!1,r=!1){const s={x:Bs(e,"x","cumsum")},a={axis:t,exclusive:n,reverse:r};return Os.runKernel(Tt,s,a)}}),Xu=js({denseBincount_:function(e,t,n,r=!1){const s=Bs(e,"x","denseBincount"),a=Bs(t,"weights","denseBincount");Y("int32"===s.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${s.dtype}`)),Y(s.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${s.rank}.`)),Y(n>=0,(()=>`size must be non-negative, but got ${n}.`)),Y(a.size===s.size||0===a.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${s.shape}, weights shape: ${a.shape}.`));const o={x:s,weights:a},i={size:n,binaryOutput:r};return Os.runKernel(At,o,i)}}),Ju=js({depthToSpace_:function(e,t,n="NHWC"){const r=Bs(e,"x","depthToSpace"),s="NHWC"===n?r.shape[1]:r.shape[2],a="NHWC"===n?r.shape[2]:r.shape[3],o="NHWC"===n?r.shape[3]:r.shape[1];Y(s*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t}  for depthToSpace with input shape\n    ${r.shape}`)),Y(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t} for depthToSpace with input shape\n        ${r.shape}`)),Y(o%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${o} for depthToSpace with input shape ${r.shape}`));const i={x:r},u={blockSize:t,dataFormat:n};return Os.runKernel(Et,i,u)}}),Yu=js({depthwiseConv2d_:function(e,t,n,r,s="NHWC",a=[1,1],o){const i=Bs(e,"x","depthwiseConv2d"),u=Bs(t,"filter","depthwiseConv2d");let l=i,c=!1;3===i.rank&&(c=!0,l=wu(i,[1,i.shape[0],i.shape[1],i.shape[2]])),Y(4===l.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`)),Y(4===u.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`)),Y(l.shape[3]===u.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),null!=o&&Y(ae(r),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`));const p={x:l,filter:u},h={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:o},d=Os.runKernel(Pt,p,h);return c?wu(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),Zu=js({diag_:function(e){const t={x:Bs(e,"x","diag")};return Os.runKernel(Ot,t)}}),el=js({dilation2d_:function(e,t,n,r,s=[1,1],a="NHWC"){const o=Bs(e,"x","dilation2d"),i=Bs(t,"filter","dilation2d");Y(3===o.rank||4===o.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${o.rank}.`)),Y(3===i.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${i.rank}.`)),Y("NHWC"===a,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${a}`));let u=o,l=!1;3===o.rank&&(u=wu(o,[1,o.shape[0],o.shape[1],o.shape[2]]),l=!0);const c={x:u,filter:i},p={strides:n,pad:r,dilations:s},h=Os.runKernel(_t,c,p);return l?wu(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),tl=js({equal_:function(e,t){let n=Bs(e,"a","equal"),r=Bs(t,"b","equal");[n,r]=Is(n,r),Wi(n.shape,r.shape);const s={a:n,b:r};return Os.runKernel(Bt,s)}}),nl=js({where_:function(e,t,n){const r=Bs(t,"a","where"),s=Bs(n,"b","where"),a=Bs(e,"condition","where","bool"),o=Wi(r.shape,s.shape),i=Ou(r,o),u=Ou(s,o);1===a.rank&&Y(a.shape[0]===r.shape[0],(()=>"The first dimension of `a` must match the size of `condition`.")),1!==a.rank&&Z(a.shape,u.shape,"Error in where: ");const l={condition:a,t:i,e:u};return Os.runKernel(ir,l)}}),rl=js({divNoNan_:function(e,t){let n=Bs(e,"a","div"),r=Bs(t,"b","div");[n,r]=Is(n,r);const s=wi(n,r),a=ki(s),o=tl(r,a);return nl(o,a,s)}}),sl=js({dot_:function(e,t){const n=Bs(e,"t1","dot"),r=Bs(t,"t2","dot");Y(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const s=1===n.rank?n.size:n.shape[1],a=1===r.rank?r.size:r.shape[0];if(Y(s===a,(()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${a}.`)),1===n.rank&&1===r.rank){const e=wu(n,[1,-1]),t=wu(r,[-1,1]),s=oo(e,t);return wu(s,[])}if(1===n.rank&&2===r.rank){const e=wu(n,[1,-1]),t=wu(r,[r.shape[0],r.shape[1]]),s=oo(e,t);return wu(s,[s.size])}if(2===n.rank&&1===r.rank){const e=wu(r,[-1,1]),t=oo(n,e);return wu(t,[t.size])}{const e=wu(r,[r.shape[0],r.shape[1]]);return oo(n,e)}}}),al=js({elu_:function(e){const t={x:Bs(e,"x","elu")};return Os.runKernel(Ft,t)}}),ol=js({erf_:function(e){let t=Bs(e,"x","erf");Y("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=qa(t,"float32"));const n={x:t};return Os.runKernel(qt,n)}}),il=js({exp_:function(e){const t={x:Bs(e,"x","exp")};return Os.runKernel(Wt,t)}}),ul=js({expandDims_:function(e,t=0){const n=Bs(e,"x","expandDims","string_or_numeric");Y(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r={input:n},s={dim:t};return Os.runKernel(Vt,r,s)}}),ll=js({expm1_:function(e){const t={x:Bs(e,"x","expm1")};return Os.runKernel(jt,t)}}),cl=js({tile_:function(e,t){const n=Bs(e,"x","tile","string_or_numeric");Y(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const r={x:n},s={reps:t};return Os.runKernel(Cr,r,s)}}),pl=js({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const s=La([e,t],r),a=e<=t?e:t;for(let e=0;e<a;++e)s.set(1,e,e);const o=wu(s.toTensor(),[e,t]);if(null==n)return o;if(1===n.length)return cl(ul(o,0),[n[0],1,1]);if(2===n.length)return cl(ul(ul(o,0),0),[n[0],n[1],1,1]);if(3===n.length)return cl(ul(ul(ul(o,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}}),hl=js({floor_:function(e){const t={x:Bs(e,"x","floor")};return Os.runKernel(Kt,t)}}),dl=js({gather_:function(e,t,n=0,r=0){const s={x:Bs(e,"x","gather"),indices:Bs(t,"indices","gather","int32")},a={axis:n,batchDims:r};return Os.runKernel(Jt,s,a)}}),fl=js({greater_:function(e,t){let n=Bs(e,"a","greater"),r=Bs(t,"b","greater");[n,r]=Is(n,r),Wi(n.shape,r.shape);const s={a:n,b:r};return Os.runKernel(Zt,s)}}),ml=js({greaterEqual_:function(e,t){let n=Bs(e,"a","greaterEqual"),r=Bs(t,"b","greaterEqual");[n,r]=Is(n,r),Wi(n.shape,r.shape);const s={a:n,b:r};return Os.runKernel(en,s)}}),gl=js({imag_:function(e){const t={input:Bs(e,"input","imag")};return Os.runKernel(rn,t)}}),yl=js({isFinite_:function(e){const t={x:Bs(e,"x","isFinite")};return Os.runKernel(sn,t)}}),bl=js({isInf_:function(e){const t={x:Bs(e,"x","isInf")};return Os.runKernel(an,t)}}),wl=js({isNaN_:function(e){const t={x:Bs(e,"x","isNaN")};return Os.runKernel(on,t)}}),xl=js({leakyRelu_:function(e,t=.2){const n={x:Bs(e,"x","leakyRelu")},r={alpha:t};return Os.runKernel(un,n,r)}}),Sl=js({less_:function(e,t){let n=Bs(e,"a","less"),r=Bs(t,"b","less");[n,r]=Is(n,r),Wi(n.shape,r.shape);const s={a:n,b:r};return Os.runKernel(ln,s)}}),vl=js({lessEqual_:function(e,t){let n=Bs(e,"a","lessEqual"),r=Bs(t,"b","lessEqual");[n,r]=Is(n,r),Wi(n.shape,r.shape);const s={a:n,b:r};return Os.runKernel(cn,s)}});function kl(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:e,stop:t,num:n};return Os.runKernel(pn,{},r)}const Nl=js({localResponseNormalization_:function(e,t=5,n=1,r=1,s=.5){const a=Bs(e,"x","localResponseNormalization");Y(4===a.rank||3===a.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${a.rank}.`)),Y(ae(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let o=a,i=!1;3===a.rank&&(i=!0,o=wu(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const u={x:o},l={depthRadius:t,bias:n,alpha:r,beta:s},c=Os.runKernel(bn,u,l);return i?wu(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Il=js({log_:function(e){const t={x:Bs(e,"x","log")};return Os.runKernel(hn,t)}}),Tl=js({log1p_:function(e){const t={x:Bs(e,"x","log1p")};return Os.runKernel(dn,t)}}),Cl=js({neg_:function(e){const t={x:Bs(e,"x","neg")};return Os.runKernel(_n,t)}}),Al=js({softplus_:function(e){const t={x:Bs(e,"x","softplus")};return Os.runKernel(fr,t)}}),El=js({logSigmoid_:function(e){const t=Bs(e,"x","logSigmoid");return Ei((e=>({value:Cl(Al(Cl(e))),gradFunc:t=>xi(t,ku(Cl(e)))})))(t)}}),Pl=js({max_:function(e,t=null,n=!1){const r={x:Bs(e,"x","max")},s={reductionIndices:t,keepDims:n};return Os.runKernel(xn,r,s)}}),$l=js({sum_:function(e,t=null,n=!1){let r=Bs(e,"x","sum");"bool"===r.dtype&&(r=qa(r,"int32"));const s={x:r},a={axis:t,keepDims:n};return Os.runKernel(gr,s,a)}}),Ml=js({logSoftmax_:function(e,t=-1){const n=Bs(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return Ei(((e,n)=>{const r=Pl(e,t,!0),s=zi(e,r),a=zi(qa(s,"float32"),Il($l(il(s),t,!0)));return n([a]),{value:a,gradFunc:(e,n)=>{const[r]=n,s=il(r);return zi(e,xi($l(e,t,!0),s))}}}))(n)}});function Ol(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function _l(e,t,n){const r=e.length+t.length,s=[];let a=0,o=0;for(let i=0;i<r;i++)-1===n.indexOf(i)?s.push(e[a++]):s.push(t[o++]);return s}function Dl(e,t){const n=[],r=e.length;for(let s=0;s<r;s++)-1===t.indexOf(s)&&n.push(e[s]);return[n,t.map((t=>e[t]))]}function Rl(e,t){return _l(e,t.map((e=>1)),t)}function zl(e,t,n){Y(Ol(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function Fl(e,t){if(Ol(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function Ll(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function ql(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}const Bl=js({logSumExp_:function(e,t=null,n=!1){const r=Bs(e,"x","logSumExp"),s=he(t,r.shape),a=Pl(r,s,!0),o=zi(r,a),i=il(o),u=$l(i,s),l=Il(u),c=yi(wu(a,l.shape),l);if(n){const e=Rl(c.shape,s);return wu(c,e)}return c}}),Wl=js({logicalAnd_:function(e,t){const n=Bs(e,"a","logicalAnd","bool"),r=Bs(t,"b","logicalAnd","bool");Wi(n.shape,r.shape);const s={a:n,b:r};return Os.runKernel(fn,s)}}),Vl=js({logicalNot_:function(e){const t={x:Bs(e,"x","logicalNot","bool")};return Os.runKernel(mn,t)}}),jl=js({logicalOr_:function(e,t){const n=Bs(e,"a","logicalOr","bool"),r=Bs(t,"b","logicalOr","bool");Wi(n.shape,r.shape);const s={a:n,b:r};return Os.runKernel(gn,s)}}),Ul=js({logicalXor_:function(e,t){const n=Bs(e,"a","logicalXor","bool"),r=Bs(t,"b","logicalXor","bool");return Wi(n.shape,r.shape),Wl(jl(e,t),Vl(Wl(e,t)))}}),Gl=js({maxPool_:function(e,t,n,r,s){const a=Bs(e,"x","maxPool");let o=a,i=!1;3===a.rank&&(i=!0,o=wu(a,[1,a.shape[0],a.shape[1],a.shape[2]])),Y(4===o.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${o.rank}.`)),Y(yu(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),null!=s&&Y(ae(r),(()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const u={x:o},l={filterSize:t,strides:n,pad:r,dimRoundingMode:s},c=Os.runKernel(vn,u,l);return i?wu(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Hl=js({maxPool3d_:function(e,t=[1,1,1],n,r,s,a="NDHWC",o){null==o?o=[1,1,1]:Zo("dilations is deprecated, this field will be gone in v3.0.0.");const i=Bs(e,"x","maxPool3d");let u=i,l=!1;4===i.rank&&(l=!0,u=wu(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),Y(5===u.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${u.rank}.`)),Y("NDHWC"===a,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),Y(yu(n,o),(()=>`Error in maxPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`)),null!=s&&Y(ae(r),(()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const c={x:u},p={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:a,dilations:o},h=Os.runKernel(Nn,c,p);return l?wu(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),Kl=js({maxPoolWithArgmax_:function(e,t,n,r,s=!1){const a={x:Bs(e,"x","maxPoolWithArgmax")},o={filterSize:t,strides:n,pad:r,includeBatchInIndex:s},i=Os.runKernel(Tn,a,o);return{result:i[0],indexes:i[1]}}}),Ql=js({mean_:function(e,t=null,n=!1){const r={x:Bs(e,"x","mean")},s={axis:t,keepDims:n};return Os.runKernel(Cn,r,s)}}),Xl=js({min_:function(e,t=null,n=!1){const r={x:Bs(e,"x","min")},s={axis:t,keepDims:n};return Os.runKernel(An,r,s)}}),Jl=js({minimum_:function(e,t){let n=Bs(e,"a","minimum"),r=Bs(t,"b","minimum");[n,r]=Is(n,r),"bool"===n.dtype&&(n=qa(n,"int32"),r=qa(r,"int32")),Wi(n.shape,r.shape);const s={a:n,b:r};return Os.runKernel(En,s)}}),Yl=js({mirrorPad_:function(e,t,n){Y("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const r=Bs(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");Y(t.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`));const s="reflect"===n?1:0;for(let e=0;e<r.rank;e++)Y(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Y(t[e][0]>=0&&t[e][0]<=r.shape[e]-s&&t[e][1]>=0&&t[e][1]<=r.shape[e]-s,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${r.shape[e]-s} or less than 0 for input of shape ${r.shape}`));const a={paddings:t,mode:n},o={x:r};return Os.runKernel(Pn,o,a)}}),Zl=js({mod_:function(e,t){let n=Bs(e,"a","mod"),r=Bs(t,"b","mod");[n,r]=Is(n,r);const s={a:n,b:r};return Os.runKernel($n,s)}}),ec=js({moments_:function(e,t=null,n=!1){const r=he(t,(e=Bs(e,"x","moments")).shape),s=Ql(e,r,n);let a=s.shape;n||(a=Rl(s.shape,r));const o=vi(zi(qa(e,"float32"),wu(s,a)));return{mean:s,variance:Ql(o,r,n)}}}),tc=js({multiRNNCell_:function(e,t,n,r){const s=Bs(t,"data","multiRNNCell"),a=Ws(n,"c","multiRNNCell"),o=Ws(r,"h","multiRNNCell");let i=s;const u=[];for(let t=0;t<e.length;t++){const n=e[t](i,a[t],o[t]);u.push(n[0]),u.push(n[1]),i=n[1]}const l=[],c=[];for(let e=0;e<u.length;e+=2)l.push(u[e]),c.push(u[e+1]);return[l,c]}}),nc=js({multinomial_:function(e,t,n,r=!1){const s=Bs(e,"logits","multinomial"),a=s.size,o=s.rank;if(a<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${a}.`);if(o>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${o}`);n=n||Math.random();const i={logits:1===o?wu(s,[1,-1]):s},u={numSamples:t,seed:n,normalized:r},l=Os.runKernel(Mn,i,u);return 1===o?wu(l,[l.size]):l}}),rc=js({notEqual_:function(e,t){let n=Bs(e,"a","notEqual"),r=Bs(t,"b","notEqual");[n,r]=Is(n,r),Wi(n.shape,r.shape);const s={a:n,b:r};return Os.runKernel(Dn,s)}});function sc(e,t="float32"){if("complex64"===t){const t=sc(e,"float32"),n=sc(e,"float32");return Us(t,n)}const n=Me(ne(e),t);return Os.makeTensor(n,e,t)}function ac(e,t="float32"){if("complex64"===t){const t=ac(e,"float32"),n=sc(e,"float32");return Us(t,n)}const n=$e(ne(e),t);return Os.makeTensor(n,e,t)}const oc=js({onesLike_:function(e){const t={x:Bs(e,"x","onesLike")};return Os.runKernel(Ln,t)}}),ic=js({outerProduct_:function(e,t){const n=Bs(e,"v1","outerProduct"),r=Bs(t,"v2","outerProduct");Y(1===n.rank&&1===r.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`));const s=wu(n,[-1,1]),a=wu(r,[1,-1]);return oo(s,a)}}),uc=js({pad_:function(e,t,n=0){const r=Bs(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s={paddings:t,constantValue:n},a={x:r};return Os.runKernel(Wn,a,s)}}),lc=js({pad1d_:function(e,t,n=0){return Y(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),uc(e,[t],n)}}),cc=js({pad2d_:function(e,t,n=0){return Y(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),uc(e,t,n)}}),pc=js({pad3d_:function(e,t,n=0){return Y(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),uc(e,t,n)}}),hc=js({pad4d_:function(e,t,n=0){return Y(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),uc(e,t,n)}}),dc=js({spaceToBatchND_:function(e,t,n){const r=Bs(e,"x","spaceToBatchND");Y(r.rank>=1+t.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`)),Y(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),Y(r.shape.reduce(((e,r,s)=>s>0&&s<=t.length?e&&(r+n[s-1][0]+n[s-1][1])%t[s-1]==0:e),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const s={x:r},a={blockShape:t,paddings:n};return Os.runKernel(yr,s,a)}}),fc=js({pool_:function(e,t,n,r,s,a){null==s&&(s=[1,1]),null==a&&(a=1),0===r&&(r="valid");const o=Bs(e,"x","maxPool");let i=o,u=!1;3===o.rank&&(u=!0,i=wu(o,[1,o.shape[0],o.shape[1],o.shape[2]])),Y(yu(a,s),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`));const l=iu(i.shape,t,a,s,r),c=[l.dilationHeight,l.dilationWidth];let p;p="same"===r?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),r=n.map((e=>Math.floor(e/2))),s=n.map(((e,t)=>e-r[t]));return n.map(((e,t)=>[r[t],s[t]]))}([l.filterHeight,l.filterWidth],c):[[0,0],[0,0]];const h=1===c[0]&&1===c[1],[d,f]=function(e,t,n){const r=n.map((e=>e[0])),s=n.map((e=>e[1])),a=e.concat(r,s),o=t.map(((e,t)=>(e-a[t]%e)%e)),i=s.map(((e,t)=>e+o[t]));return[t.map(((e,t)=>[r[t],i[t]])),t.map(((e,t)=>[0,o[t]]))]}([l.inHeight,l.inWidth],c,p),m=h?r:"valid",g=h?i:dc(i,c,d),y=("avg"===n?()=>xu(g,t,a,m):()=>Gl(g,t,a,m))(),b=h?y:Cu(y,c,f);return u?wu(b,[b.shape[1],b.shape[2],b.shape[3]]):b}}),mc=js({prelu_:function(e,t){const n={x:Bs(e,"x","prelu"),alpha:Bs(t,"alpha","prelu")};return Os.runKernel(Un,n)}}),gc=js({prod_:function(e,t=null,n=!1){let r=Bs(e,"x","prod");"bool"===r.dtype&&(r=qa(r,"int32"));const s={x:r},a={axis:t,keepDims:n};return Os.runKernel(Gn,s,a)}}),yc=js({rand_:function(e,t,n){const r=ne(e);let s=null;if(null==n||"float32"===n)s=new Float32Array(r);else if("int32"===n)s=new Int32Array(r);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);s=new Uint8Array(r)}for(let e=0;e<r;e++)s[e]=t();return Os.makeTensor(s,e,n)}});var bc=n(377);class wc{constructor(e,t,n,r,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const a=s||Math.random();this.random=bc.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,s,a;do{r=2*this.random()-1,s=2*this.random()-1,a=r*r+s*s}while(a>=1||0===a);const o=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*r*o,t=this.mean+this.stdDev*s*o,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class xc{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;const s=r||Math.random();this.randu=bc.alea(s.toString()),this.randn=new wc(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,s,a;for(;;){do{r=this.randn.nextValue(),a=1+this.c*r}while(a<=0);if(a*=a*a,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-a+Math.log(a)),s=this.randu(),s<t||Math.log(s)<n)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class Sc{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=bc.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const vc=js({randomGamma_:function(e,t,n=1,r="float32",s){if(null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);const a=new xc(t,n,r,s),o=La(e,r);for(let e=0;e<o.values.length;e++)o.values[e]=a.nextValue();return o.toTensor()}}),kc=js({randomNormal_:function(e,t=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const a=new wc(t,n,r,!1,s),o=La(e,r);for(let e=0;e<o.values.length;e++)o.values[e]=a.nextValue();return o.toTensor()}}),Nc=js({randomUniform_:function(e,t=0,n=1,r="float32",s){const a=La(e,r),o=new Sc(t,n,null,s);for(let e=0;e<a.values.length;e++)a.values[e]=o.nextValue();return a.toTensor()}});function Ic(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const s={start:e,stop:t,step:n,dtype:r};return Os.runKernel(Hn,{},s)}const Tc=js({real_:function(e){const t={input:Bs(e,"input","real")};return Os.runKernel(Kn,t)}}),Cc=js({reciprocal_:function(e){const t={x:Bs(e,"x","reciprocal")};return Os.runKernel(Qn,t)}}),Ac=js({relu_:function(e){const t={x:Bs(e,"x","relu")};return Os.runKernel(Xn,t)}}),Ec=js({relu6_:function(e){const t={x:Bs(e,"x","relu6")};return Os.runKernel(nr,t)}}),Pc=js({reverse_:function(e,t){const n={x:Bs(e,"x","reverse")},r={dims:t};return Os.runKernel(rr,n,r)}}),$c=js({reverse1d_:function(e){const t=Bs(e,"x","reverse");return Y(1===t.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`)),Pc(t,0)}}),Mc=js({reverse2d_:function(e,t){const n=Bs(e,"x","reverse");return Y(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),Pc(n,t)}}),Oc=js({reverse3d_:function(e,t){const n=Bs(e,"x","reverse");return Y(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),Pc(n,t)}}),_c=js({reverse4d_:function(e,t){const n=Bs(e,"x","reverse");return Y(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),Pc(n,t)}}),Dc=js({round_:function(e){const t={x:Bs(e,"x","round")};return Os.runKernel(sr,t)}}),Rc=js({rsqrt_:function(e){const t={x:Bs(e,"x","rsqrt")};return Os.runKernel(ar,t)}}),zc=js({selu_:function(e){const t={x:Bs(e,"x","selu")};return Os.runKernel(ur,t)}}),Fc=js({separableConv2d_:function(e,t,n,r,s,a=[1,1],o="NHWC"){const i=Bs(e,"x","separableConv2d"),u=Bs(t,"depthwiseFilter","separableConv2d"),l=Bs(n,"pointwiseFilter","separableConv2d");let c=i,p=!1;if(3===i.rank&&(p=!0,c=wu(i,[1,i.shape[0],i.shape[1],i.shape[2]])),"NCHW"===o)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");Y(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),Y(4===u.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`)),Y(4===l.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`)),Y(1===l.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`)),Y(1===l.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`));const h=u.shape[2],d=u.shape[3];Y(l.shape[2]===h*d,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${h*d}, but got ${l.shape[2]}.`));const f=Yu(c,u,r,s,o,a),m=qu(f,l,1,"valid",o);return p?wu(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),Lc=async function(e,t){const n=Bs(e,"x","setdiff1d"),r=Bs(t,"y","setdiff1d");Y(n.dtype===r.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`)),Y(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),Y(1===r.rank,(()=>`y should be 1D tensor, but got y (${r.shape}).`));const s=await n.data(),a=await r.data(),o=new Set(a);let i=0;for(let e=0;e<s.length;e++)o.has(s[e])||i++;const u=new ps([i],n.dtype),l=new ps([i],"int32");for(let e=0,t=0;e<s.length;e++)o.has(s[e])||(u.values[t]=s[e],l.values[t]=e,t++);return[u.toTensor(),l.toTensor()]},qc=js({sign_:function(e){const t={x:Bs(e,"x","sign")};return Os.runKernel(hr,t)}}),Bc=js({sin_:function(e){const t={x:Bs(e,"x","sin")};return Os.runKernel(cr,t)}}),Wc=js({sinh_:function(e){const t={x:Bs(e,"x","sinh")};return Os.runKernel(pr,t)}}),Vc=js({slice1d_:function(e,t,n){const r=Bs(e,"x","slice1d");return Y(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),Nu(r,[t],[n])}}),jc=js({slice2d_:function(e,t,n){const r=Bs(e,"x","slice2d");return Y(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),Nu(r,t,n)}}),Uc=js({slice3d_:function(e,t,n){const r=Bs(e,"x","slice3d");return Y(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),Nu(r,t,n)}}),Gc=js({slice4d_:function(e,t,n){const r=Bs(e,"x","slice4d");return Y(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),Nu(r,t,n)}}),Hc=js({softmax_:function(e,t=-1){const n=Bs(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},s={dim:t};return Os.runKernel(wr,r,s)}}),Kc=js({fft_:function(e){Y("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return Os.runKernel(Ut,t)}}),Qc=js({ifft_:function(e){Y("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return Os.runKernel(nn,t)}}),Xc=js({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const s=wu(e,[n,t]);r=Qc(s)}else{const s=[n,2*(t-1)],a=wu(Tc(e),[n,t]),o=wu(gl(e),[n,t]),i=Pc(Nu(a,[0,1],[n,t-2]),1),u=xi(Pc(Nu(o,[0,1],[n,t-2]),1),$i(-1)),l=vu([a,i],1),c=vu([o,u],1),p=wu(Us(l,c),[s[0],s[1]]);r=Qc(p)}if(r=Tc(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=wu(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}}),Jc=js({split_:function(e,t,n=0){const r={x:Bs(e,"x","split")},s={numOrSizeSplits:t,axis:n};return Os.runKernel(br,r,s)}}),Yc=js({rfft_:function(e,t){Y("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const r=e.size/n;let s;if(null!=t&&t<n){const r=e.shape.map((e=>0)),a=e.shape.map((e=>e));a[e.shape.length-1]=t,s=Nu(e,r,a),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,s=vu([e,sc(r)],e.shape.length-1),n=t}else s=e;const a=ki(s),o=wu(Us(s,a),[r,n]),i=Kc(o),u=Math.floor(n/2)+1,l=Tc(i),c=gl(i),p=Jc(l,[u,n-u],l.shape.length-1),h=Jc(c,[u,n-u],c.shape.length-1),d=s.shape.slice();return d[s.shape.length-1]=u,wu(Us(p[0],h[0]),d)}}),Zc=js({squaredDifference_:function(e,t){let n=Bs(e,"a","squaredDifference"),r=Bs(t,"b","squaredDifference");[n,r]=Is(n,r),Wi(n.shape,r.shape);const s={a:n,b:r};return Os.runKernel(xr,s,{})}}),ep=js({squeeze_:function(e,t){const n=Bs(e,"x","squeeze");return wu(n,de(n.shape,t).newShape)}}),tp=js({stack_:function(e,t=0){const n=Ws(e,"tensors","stack","string_or_numeric");Y(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&Y(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const r=n,s={axis:t};return Os.runKernel(Bn,r,s)}}),np=js({step_:function(e,t=0){const n={x:Bs(e,"x","step")},r={alpha:t};return Os.runKernel(_r,n,r)}}),rp=js({stridedSlice_:function(e,t,n,r,s=0,a=0,o=0,i=0,u=0){const l={x:Bs(e,"x","stridedSlice")},c={begin:t,end:n,strides:r,beginMask:s,endMask:a,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:u};return Os.runKernel(Nr,l,c)}}),sp=js({tan_:function(e){const t={x:Bs(e,"x","tan")};return Os.runKernel(Ir,t)}});function ap(e,t){ee(e);const n=Fs(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Gs(e,null,n,t)}function op(e,t,n){if(ee(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=Fs(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Gs(e,t,r,n)}function ip(e,t,n){if(ee(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const r=Fs(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Gs(e,t,r,n)}function up(e,t,n){if(ee(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const r=Fs(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Gs(e,t,r,n)}function lp(e,t,n){if(ee(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const r=Fs(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return Gs(e,t=t||r,r,n)}const cp=js({topk_:function(e,t=1,n=!0){const r=Bs(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(t>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got ${t}`);const a={x:r},o={k:t,sorted:n},[i,u]=Os.runKernel(Ar,a,o);return{values:i,indices:u}}}),pp=js({truncatedNormal_:function(e,t=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const a=new wc(t,n,r,!0,s),o=La(e,r);for(let e=0;e<o.values.length;e++)o.values[e]=a.nextValue();return o.toTensor()}}),hp=js({unique_:function(e,t=0){const n=Bs(e,"x","unique","string_or_numeric");Y(n.rank>0,(()=>"The input tensor must be at least 1D"));const r={x:n},s={axis:t},[a,o]=Os.runKernel(Pr,r,s);return{values:a,indices:o}}}),dp=js({unsortedSegmentSum_:function(e,t,n){const r=Bs(e,"x","unsortedSegmentSum"),s=Bs(t,"segmentIds","unsortedSegmentSum","int32");Y(ae(n),(()=>"numSegments must be of dtype int"));const a={x:r,segmentIds:s},o={numSegments:n};return Os.runKernel(Mr,a,o)}}),fp=js({unstack_:function(e,t=0){const n=Bs(e,"x","unstack","string_or_numeric");Y(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const r={value:n},s={axis:t};return Os.runKernel($r,r,s)}});function mp(e,t=!0,n,r){return Os.makeVariable(e,t,n,r)}function gp(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const r=La(e,"int32"),s=La([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const a=r.indexToLoc(n[t]),o=t*e.length;s.values.set(a,o)}return s.toTensor()}const yp=async function(e){const t=Bs(e,"condition","whereAsync","bool"),n=await t.data(),r=gp(t.shape,n);return e!==t&&t.dispose(),r},bp=async function(e,t,n){const r=Bs(e,"tensor","boolMask"),s=Bs(t,"mask","boolMask","bool"),a=null==n?0:n,o=s.rank,i=r.shape;Y(o>0,(()=>"mask cannot be scalar")),Z(i.slice(a,a+o),s.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let e=a;e<a+o;e++)u*=i[e];const l=i.slice(0,a).concat([u],i.slice(a+o)),c=wu(r,l),p=wu(s,[-1]),h=await yp(p),d=ep(h,[1]),f=dl(c,d,a);return e!==r&&r.dispose(),t!==s&&s.dispose(),d.dispose(),c.dispose(),p.dispose(),h.dispose(),f},wp=js({equalStrict_:function(e,t){Zo("strict variants of ops have been deprecated and will be removed in future");const n=Bs(e,"a","equalStrict"),r=Bs(t,"b","equalStrict");return Z(n.shape,r.shape,"Error in equalStrict: "),tl(n,r)}}),xp=js({greaterEqualStrict_:function(e,t){Zo("strict variants of ops have been deprecated and will be removed in future");const n=Bs(e,"a","greaterEqualStrict"),r=Bs(t,"b","greaterEqualStrict");return Z(n.shape,r.shape,"Error in greaterEqualStrict: "),ml(n,r)}}),Sp=js({greaterStrict_:function(e,t){Zo("strict variants of ops have been deprecated and will be removed in future");const n=Bs(e,"a","greaterStrict"),r=Bs(t,"b","greaterStrict");return Z(n.shape,r.shape,"Error in greaterStrict: "),fl(n,r)}}),vp=js({lessEqualStrict_:function(e,t){Zo("strict variants of ops have been deprecated and will be removed in future");const n=Bs(e,"a","lessEqualStrict"),r=Bs(t,"b","lessEqualStrict");return Z(n.shape,r.shape,"Error in lessEqualStrict: "),vl(n,r)}}),kp=js({lessStrict_:function(e,t){Zo("strict variants of ops have been deprecated and will be removed in future");const n=Bs(e,"a","lessStrict"),r=Bs(t,"b","lessStrict");return Z(n.shape,r.shape,"Error in lessStrict: "),Sl(n,r)}}),Np=js({notEqualStrict_:function(e,t){Zo("strict variants of ops have been deprecated and will be removed in future");const n=Bs(e,"a","notEqualStrict"),r=Bs(t,"b","notEqualStrict");return Z(n.shape,r.shape,"Error in notEqualStrict: "),rc(n,r)}}),Ip=js({addStrict_:function(e,t){Zo("strict variants of ops have been deprecated and will be removed in future");const n=Bs(e,"a","addStrict"),r=Bs(t,"b","addStrict");return Z(n.shape,r.shape,"Error in addStrict: "),yi(n,r)}}),Tp=js({divStrict_:function(e,t){Zo("strict variants of ops have been deprecated and will be removed in future");const n=Bs(e,"a","div"),r=Bs(t,"b","div");return Z(n.shape,r.shape,"Error in divideStrict: "),wi(n,r)}}),Cp=js({maximumStrict_:function(e,t){Zo("strict variants of ops have been deprecated and will be removed in future");const n=Bs(e,"a","maximumStrict"),r=Bs(t,"b","maximumStrict");return Z(n.shape,r.shape,"Error in maximumStrict: "),Vi(n,r)}}),Ap=js({minimumStrict_:function(e,t){Zo("strict variants of ops have been deprecated and will be removed in future");const n=Bs(e,"a","minimumStrict"),r=Bs(t,"b","minimumStrict");return Z(n.shape,r.shape,"Error in minimumStrict: "),Jl(n,r)}}),Ep=js({modStrict_:function(e,t){Zo("strict variants of ops have been deprecated and will be removed in future");const n=Bs(e,"a","modStrict"),r=Bs(t,"b","modStrict");return Z(n.shape,r.shape,"Error in modStrict: "),Zl(n,r)}}),Pp=js({mulStrict_:function(e,t){Zo("strict variants of ops have been deprecated and will be removed in future");const n=Bs(e,"a","mul"),r=Bs(t,"b","mul");return Z(n.shape,r.shape,"Error in multiplyStrict: "),xi(n,r)}}),$p=js({powStrict_:function(e,t){return Zo("strict variants of ops have been deprecated and will be removed in future"),Z(e.shape,t.shape,"Error in powStrict: "),Ri(e,t)}}),Mp=js({squaredDifferenceStrict_:function(e,t){Zo("strict variants of ops have been deprecated and will be removed in future");const n=Bs(e,"a","squaredDifferenceStrict"),r=Bs(t,"b","squaredDifferenceStrict");return Z(n.shape,r.shape,"Error in squaredDifferenceStrict: "),Zc(n,r)}}),Op=js({subStrict_:function(e,t){Zo("strict variants of ops have been deprecated and will be removed in future");const n=Bs(e,"a","subStrict"),r=Bs(t,"b","subStrict");return Z(n.shape,r.shape,"Error in subStrict: "),zi(n,r)}});function _p(e,t,n=null){if(0===e.rank)return Li(e);if(1!==e.rank&&null===n)return _p(wu(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return $l(Li(e),n);if(t===1/0)return Pl(Li(e),n);if(t===-1/0)return Xl(Li(e),n);if("euclidean"===t||2===t)return Si($l(Ri(Li(e),$i(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return Pl($l(Li(e),n[0]),n[1]-1);if(t===1/0)return Pl($l(Li(e),n[1]),n[0]);if(t===-1/0)return Xl($l(Li(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return Si($l(vi(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const Dp=js({norm_:function(e,t="euclidean",n=null,r=!1){const s=_p(e=Bs(e,"x","norm"),t,n);let a=s.shape;if(r){const t=he(n,e.shape);a=Rl(s.shape,t)}return wu(s,a)}}),Rp=js({movingAverage_:function(e,t,n,r,s=!0){const a=Bs(e,"v","movingAverage"),o=Bs(t,"x","movingAverage"),i=Bs(n,"decay","movingAverage");Ts(a,o),Y(se(a.shape,o.shape),(()=>"Shape mismatch in v and x"));const u=$i(1),l=zi(u,i);let c=xi(zi(o,a),l);if(s){Y(null!=r,(()=>"When using zeroDebias: true, step is required."));const e=Bs(r,"step","movingAverage");c=wi(c,zi(u,Ri(i,e)))}return yi(a,c)}}),zp=js({scatterND_:function(e,t,n){const r=Bs(e,"indices","scatterND","int32"),s=Bs(t,"updates","scatterND");yo(s,r,n);const a={indices:r,updates:s},o={shape:n};return Os.runKernel(or,a,o)}}),Fp=js({sparseToDense_:function(e,t,n,r=0){const s=Bs(e,"sparseIndices","sparseToDense","int32"),a=Bs(t,"sparseValues","sparseToDense"),o=Bs(r,"defaultValue","sparseToDense",a.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const s=e.rank>0?e.shape[0]:1,a=e.rank>1?e.shape[1]:1;if(n.length!==a)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${a}.`);const o=t.size;if(0!==t.rank&&(1!==t.rank||o!==s))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${s}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(s,a,n,o);const i={sparseIndices:s,sparseValues:a,defaultValue:o},u={outputShape:n};return Os.runKernel(kr,i,u)}}),Lp=js({gatherND_:function(e,t){const n=Bs(t,"indices","gatherND","int32"),r={params:Bs(e,"x","gatherND"),indices:n};return Os.runKernel(Yt,r)}}),qp=js({dropout_:function(e,t,n,r){const s=Bs(e,"x","dropout");if(Y("float32"===s.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`)),Y(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof ms?s.clone():s;const a=function(e,t){if(null==t)return e.shape.slice();if(se(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(s,n),o=1-t,i=wi(hl(yi(Nc(a,0,1,"float32",r),o)),o);return xi(s,i)}});function Bp(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function Wp(e,t,n){const r=1-e%2,s=new Float32Array(e);for(let a=0;a<e;++a){const o=2*Math.PI*a/(e+r-1);s[a]=t-n*Math.cos(o)}return ap(s,"float32")}const Vp=async function(e,t,n=1){const r=Bs(e,"predictions","inTopK"),s=Bs(t,"targets","inTopK");Y(r.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`)),Y(r.rank-1===s.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${s.rank}`)),Z(r.shape.slice(0,r.shape.length-1),s.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const a=r.shape[r.shape.length-1];Y(n>0&&n<=a,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${a}), but got ${n}`));const o=await r.data(),i=await s.data(),[u,l]=[o.length/a,a],c=fe("bool",u);for(let e=0;e<u;e++){const t=e*l,r=o.subarray(t,t+l),s=[];for(let e=0;e<r.length;e++)s.push({value:r[e],index:e});s.sort(((e,t)=>t.value-e.value)),c[e]=0;for(let t=0;t<n;t++)if(s[t].index===i[e]){c[e]=1;break}}return e!==r&&r.dispose(),t!==s&&s.dispose(),Hs(c,s.shape,"bool")},jp=js({conv2DBackpropFilter_:function(e,t,n,r,s,a="NHWC",o){let i=e;3===e.rank&&(i=wu(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=wu(t,[1,t.shape[0],t.shape[1],t.shape[2]])),Y(4===i.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${i.shape}.`)),Y(4===u.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`)),Y(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const l="NHWC"===a?i.shape[3]:i.shape[1],c="NHWC"===a?u.shape[3]:u.shape[1];Y(l===n[2],(()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${n[2]}.`)),Y(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),null!=o&&Y(ae(s),(()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${o} but got pad ${s}.`));const p={x:i,dy:u},h={strides:r,pad:s,dataFormat:a,dimRoundingMode:o,filterShape:n};return Os.runKernel(wt,p,h)}});function Up(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return xi(e,np(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Gp(e,t){let n=t;const r=Bi(e.shape,t.shape);return r.length>0&&(n=$l(n,r)),wu(n,e.shape)}function Hp(e,t,n,r){if("linear"===t)return e;if("relu"===t)return Ac(e);if("elu"===t)return al(e);if("relu6"===t)return Ec(e);if("prelu"===t)return mc(e,n);if("leakyrelu"===t)return xl(e,r);throw new Error(`Unknown fused activation ${t}.`)}const Kp=(e,t)=>!(e>0)||"linear"===t,Qp=js({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:o,bias:i,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(u=u||"linear",!1===Kp(Os.state.gradientDepth,u)){let p=qu(e,t,n,r,s,a,o);return null!=i&&(p=yi(p,i)),Hp(p,u,l,c)}const p=Bs(e,"x","conv2d"),h=Bs(t,"filter","conv2d");let d=p,f=!1;3===p.rank&&(f=!0,d=wu(p,[1,p.shape[0],p.shape[1],p.shape[2]])),Y(4===d.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${d.rank}.`)),Y(4===h.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${h.rank}.`)),null!=o&&Y(ae(r),(()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`)),Y(d.shape[3]===h.shape[2],(()=>`Error in conv2d: depth of input (${d.shape[3]}) must match input depth for filter ${h.shape[2]}.`)),Y(yu(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),Y("NHWC"===s,(()=>`Error in conv2d: got dataFormat of ${s} but only NHWC is currently supported.`));const m=lu(d.shape,h.shape,n,a,r,o);let g,y;null!=i&&(g=Bs(i,"bias","fused conv2d"),[g]=Is(g,p),Wi(m.outShape,g.shape)),null!=l&&(y=Bs(l,"prelu weights","fused conv2d"));const b=(e,t)=>{const[s,o,i,l]=t,c=Up(e,i,u);Y(gu(a),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`));const p=[Wu(o.shape,c,s,n,r),jp(o,c,s.shape,n,r)];if(null!=l){const e=Gp(l,c);p.push(e)}return p},w={x:d,filter:h,bias:g,preluActivationWeights:y},x={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:o,activation:u,leakyreluAlpha:c};return null==i?Ei(((e,t,n)=>{let r=Os.runKernel(Fr,w,x);return n([t,e,r]),f&&(r=wu(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}))(d,h):Ei(((e,t,n,r)=>{let s=Os.runKernel(Fr,w,x);return r([t,e,s,n]),f&&(s=wu(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:b}}))(d,h,g)}}),Xp=js({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,s,a=[1,1],o){let i=e;3===e.rank&&(i=wu(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=wu(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={x:i,dy:u},c={strides:r,pad:s,dimRoundingMode:o,dilations:a,filterShape:n};return Os.runKernel($t,l,c)}}),Jp=js({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,s,a=[1,1],o){let i=t,u=!1;3===t.rank&&(u=!0,i=wu(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={dy:i,filter:n},c={strides:r,pad:s,dimRoundingMode:o,dilations:a,inputShape:e},p=Os.runKernel(Mt,l,c);return u?wu(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),Yp=js({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:o,bias:i,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(!1===Kp(Os.state.gradientDepth,u)){let p=Yu(e,t,n,r,s,a,o);return null!=i&&(p=yi(p,i)),Hp(p,u,l,c)}const p=Bs(e,"x","depthwiseConv2d"),h=Bs(t,"filter","depthwiseConv2d");let d=p,f=!1;3===p.rank&&(f=!0,d=wu(p,[1,p.shape[0],p.shape[1],p.shape[2]])),Y(4===d.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${d.rank}.`)),Y(4===h.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${h.rank}.`)),Y(d.shape[3]===h.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${d.shape[3]}) must match the inChannels dimension in filter ${h.shape[2]}.`)),null==a&&(a=[1,1]),Y(yu(n,a),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),null!=o&&Y(ae(r),(()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${o} but got pad ${r}.`));const m=lu(d.shape,h.shape,n,a,r,o,!0);let g,y;null!=i&&(g=Bs(i,"bias","fused conv2d"),[g]=Is(g,p),Wi(m.outShape,g.shape)),null!=l&&(y=Bs(l,"prelu weights","fused depthwiseConv2d"));const b=(e,t)=>{Y(gu(a),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`));const[s,i,l,c]=t,p=Up(e,l,u),h=Jp(i.shape,p,s,n,r,a,o),d=Xp(i,p,s.shape,n,r,a,o);return null!=c?[h,d,Gp(g,p)]:[h,d]},w={x:d,filter:h,bias:g,preluActivationWeights:y},x={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:o,activation:u,leakyreluAlpha:c};return null==i?Ei(((e,t,n)=>{let r=Os.runKernel(Lr,w,x);return n([t,e,r]),f&&(r=wu(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}))(d,h):Ei(((e,t,n,r)=>{let s=Os.runKernel(Lr,w,x);return r([t,e,s,n]),f&&(s=wu(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:b}}))(d,h,g)}}),Zp=js({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:s,activation:a="linear",preluActivationWeights:o,leakyreluAlpha:i}){if(!1===Kp(Os.state.gradientDepth,a)){let u=oo(e,t,n,r);return null!=s&&(u=yi(u,s)),Hp(u,a,o,i)}let u=Bs(e,"a","fused matMul"),l=Bs(t,"b","fused matMul");[u,l]=Is(u,l);const c=n?u.shape[u.rank-2]:u.shape[u.rank-1],p=r?l.shape[l.rank-1]:l.shape[l.rank-2],h=n?u.shape[u.rank-1]:u.shape[u.rank-2],d=r?l.shape[l.rank-2]:l.shape[l.rank-1],f=u.shape.slice(0,-2),m=l.shape.slice(0,-2),g=ne(f),y=ne(m);Y(u.rank>=2&&l.rank>=2&&u.rank===l.rank,(()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${u.rank} and ${l.rank}.`)),Y(se(f,m),(()=>`Error in fused matMul: outer dimensions (${f}) and (${m}) of Tensors with shapes ${u.shape} and ${l.shape} must match.`)),Y(c===p,(()=>`Error in fused matMul: inner shapes (${c}) and (${p}) of Tensors with shapes ${u.shape} and ${l.shape} and transposeA=${n} and transposeB=${r} must match.`));const b=u.shape.slice(0,-2).concat([h,d]),w=wu(u,n?[g,c,h]:[g,h,c]),x=wu(l,r?[y,d,p]:[y,p,d]);let S,v;null!=s&&(S=Bs(s,"bias","fused matMul"),[S]=Is(S,u),Wi(b,S.shape)),null!=o&&(v=Bs(o,"prelu weights","fused matMul"));const k=(e,t)=>{const[o,i,u,l]=t,c=Up(wu(e,u.shape),u,a);let p,h;return n||r?!n&&r?(p=oo(c,i,!1,!1),h=oo(c,o,!0,!1)):n&&!r?(p=oo(i,c,!1,!0),h=oo(o,c,!1,!1)):(p=oo(i,c,!0,!0),h=oo(c,o,!0,!0)):(p=oo(c,i,!1,!0),h=oo(o,c,!0,!1)),null!=s?[p,h,Gp(l,c)]:[p,h]},N={a:w,b:x,bias:S,preluActivationWeights:v},I={transposeA:n,transposeB:r,activation:a,leakyreluAlpha:i};return null==s?Ei(((e,t,n)=>{const r=Os.runKernel(zr,N,I);return n([e,t,r]),{value:wu(r,b),gradFunc:k}}))(w,x):Ei(((e,t,n,r)=>{const s=Os.runKernel(zr,N,I);return r([e,t,s,n]),{value:wu(s,b),gradFunc:k}}))(w,x,S)}}),eh=js({hammingWindow_:function(e){return Wp(e,.54,.46)}}),th=js({hannWindow_:function(e){return Wp(e,.5,.5)}}),nh=js({frame_:function(e,t,n,r=!1,s=0){let a=0;const o=[];for(;a+t<=e.size;)o.push(Nu(e,a,t)),a+=n;if(r)for(;a<e.size;){const r=a+t-e.size,i=vu([Nu(e,a,t-r),_i([r],s)]);o.push(i),a+=n}return 0===o.length?op([],[0,t]):wu(vu(o),[o.length,t])}}),rh=js({stft_:function(e,t,n,r,s=th){null==r&&(r=Bp(t));const a=nh(e,t,n),o=xi(a,s(t)),i=[];for(let e=0;e<a.shape[0];e++)i.push(Yc(Nu(o,[e,0],[1,t]),r));return vu(i)}}),sh=js({cropAndResize_:function(e,t,n,r,s="bilinear",a=0){const o=Bs(e,"image","cropAndResize"),i=Bs(t,"boxes","cropAndResize","float32"),u=Bs(n,"boxInd","cropAndResize","int32"),l=i.shape[0];Y(4===o.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${o.rank}.`)),Y(2===i.rank&&4===i.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${i.shape}.`)),Y(1===u.rank&&u.shape[0]===l,(()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${i.shape}.`)),Y(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),Y(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),Y("bilinear"===s||"nearest"===s,(()=>`method must be bilinear or nearest, but was ${s}`));const c={image:o,boxes:i,boxInd:u},p={method:s,extrapolationValue:a,cropSize:r};return Os.runKernel(Ct,c,p)}}),ah=js({flipLeftRight_:function(e){const t=Bs(e,"image","flipLeftRight","float32");Y(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return Os.runKernel(Ht,n,{})}}),oh=js({rotateWithOffset_:function(e,t,n=0,r=.5){const s=Bs(e,"image","rotateWithOffset","float32");Y(4===s.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`));const a={image:s},o={radians:t,fillValue:n,center:r};return Os.runKernel(Rr,a,o)}});function ih(e,t,n,r,s,a){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==a&&(a=0);const o=e.shape[0];return n=Math.min(n,o),Y(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),Y(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),Y(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),Y(1===t.rank,(()=>"scores must be a 1D tensor")),Y(t.shape[0]===o,(()=>`scores has incompatible shape with boxes. Expected ${o}, but was ${t.shape[0]}`)),Y(0<=a&&a<=1,(()=>`softNmsSigma must be in [0, 1], but was '${a}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:a}}const uh=js({nonMaxSuppression_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=Bs(e,"boxes","nonMaxSuppression"),o=Bs(t,"scores","nonMaxSuppression"),i=ih(a,o,n,r,s),u={maxOutputSize:n=i.maxOutputSize,iouThreshold:r=i.iouThreshold,scoreThreshold:s=i.scoreThreshold};return Os.runKernel(Rn,{boxes:a,scores:o},u)}});function lh(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,s=e.length,a=0,o=!1;for(;r<s;){a=r+(s-r>>>1);const i=n(t,e[a]);i>0?r=a+1:(s=a,o=!i)}return o?r:-r-1}(e,t,n||ch)}(e,t,n),s=r<0?-(r+1):r;e.splice(s,0,t)}function ch(e,t){return e>t?1:e<t?-1:0}function ph(e,t,n,r,s){return fh(e,t,n,r,s,0)}function hh(e,t,n,r,s,a){return fh(e,t,n,r,s,0,!1,a,!0)}function dh(e,t,n,r,s,a){return fh(e,t,n,r,s,a,!0)}function fh(e,t,n,r,s,a,o=!1,i=!1,u=!1){const l=[];for(let e=0;e<t.length;e++)t[e]>s&&l.push({score:t[e],boxIndex:e,suppressBeginIndex:0});l.sort(yh);const c=a>0?-.5/a:0,p=[],h=[];for(;p.length<n&&l.length>0;){const t=l.pop(),{score:n,boxIndex:a,suppressBeginIndex:o}=t;if(n<s)break;let i=!1;for(let n=p.length-1;n>=o;--n){const o=mh(e,a,p[n]);if(o>=r){i=!0;break}if(t.score=t.score*gh(r,c,o),t.score<=s)break}t.suppressBeginIndex=p.length,i||(t.score===n?(p.push(a),h.push(t.score)):t.score>s&&lh(l,t,yh))}const d=p.length,f=n-d;i&&f>0&&(p.push(...new Array(f).fill(0)),h.push(...new Array(f).fill(0)));const m={selectedIndices:p};return o&&(m.selectedScores=h),u&&(m.validOutputs=d),m}function mh(e,t,n){const r=e.subarray(4*t,4*t+4),s=e.subarray(4*n,4*n+4),a=Math.min(r[0],r[2]),o=Math.min(r[1],r[3]),i=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),l=Math.min(s[0],s[2]),c=Math.min(s[1],s[3]),p=Math.max(s[0],s[2]),h=Math.max(s[1],s[3]),d=(i-a)*(u-o),f=(p-l)*(h-c);if(d<=0||f<=0)return 0;const m=Math.max(a,l),g=Math.max(o,c),y=Math.min(i,p),b=Math.min(u,h),w=Math.max(y-m,0)*Math.max(b-g,0);return w/(d+f-w)}function gh(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function yh(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}const bh=js({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const o=Bs(e,"boxes","nonMaxSuppression"),i=Bs(t,"scores","nonMaxSuppression"),u=ih(o,i,n,r,s,a),l={boxes:o,scores:i},c={maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:s=u.scoreThreshold,softNmsSigma:a=u.softNmsSigma},p=Os.runKernel(Fn,l,c);return{selectedIndices:p[0],selectedScores:p[1]}}}),wh=js({nonMaxSuppressionPadded_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const o=Bs(e,"boxes","nonMaxSuppression"),i=Bs(t,"scores","nonMaxSuppression"),u=ih(o,i,n,r,s,null),l={boxes:o,scores:i},c={maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:a},p=Os.runKernel(zn,l,c);return{selectedIndices:p[0],validOutputs:p[1]}}}),xh=js({resizeBilinear_:function(e,t,n=!1,r=!1){const s=Bs(e,"images","resizeBilinear");Y(3===s.rank||4===s.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`)),Y(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),Y(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let a=s,o=!1;3===s.rank&&(o=!0,a=wu(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,i={images:a},u={alignCorners:n,halfPixelCenters:r,size:t},l=Os.runKernel(er,i,u);return o?wu(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),Sh=js({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){const s=Bs(e,"images","resizeNearestNeighbor");Y(3===s.rank||4===s.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`)),Y(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),Y("float32"===s.dtype||"int32"===s.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),Y(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let a=s,o=!1;3===s.rank&&(o=!0,a=wu(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,i={images:a},u={alignCorners:n,halfPixelCenters:r,size:t},l=Os.runKernel(Yn,i,u);return o?wu(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),vh=js({bandPart_:function(e,t,n){Y(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),Y(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=Bs(e,"a","bandPart");Y(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const s=r.shape,[a,o]=r.shape.slice(-2);if(!(t<=a))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`);if(!(n<=o))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${o}).`);t<0&&(t=a),n<0&&(n=o);const i=wu(Ic(0,a,1,"int32"),[-1,1]),u=Ic(0,o,1,"int32"),l=zi(i,u),c=Wl(vl(l,$i(+t,"int32")),ml(l,$i(-n,"int32"))),p=sc([a,o],r.dtype);return wu(tp(fp(wu(r,[-1,a,o])).map((e=>nl(c,e,p)))),s)}}),kh=js({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,Y(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)Y(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=Jc(e,e.shape[0],0).map((e=>ep(e,[0])));Y(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let t=0;t<e.length;++t)n.push(Os.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=xi($l(xi(n[r],e)),n[r]);e=zi(e,t)}return wi(e,Dp(e,"euclidean"))})));return t?tp(n,0):n}});function Nh(e,t=!1){return Os.tidy((()=>{Y(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let s=pl(n),a=Ba(e);const o=op([[1]],[1,1]);let i=Ba(o);const u=n>=r?r:n;for(let e=0;e<u;++e){const t=a,u=i,l=s;[i,a,s]=Os.tidy((()=>{const t=Nu(a,[e,e],[n-e,1]),u=Dp(t),l=Nu(a,[e,e],[1,1]),c=nl(fl(l,0),op([[-1]]),op([[1]])),p=zi(l,xi(c,u)),h=wi(t,p);i=1===h.shape[0]?Ba(o):vu([o,Nu(h,[1,0],[h.shape[0]-1,h.shape[1]])],0);const d=Cl(wi(oo(c,p),u)),f=Nu(a,[e,0],[n-e,r]),m=xi(d,i),g=uo(i);if(0===e)a=zi(f,oo(m,oo(g,f)));else{const t=zi(f,oo(m,oo(g,f)));a=vu([Nu(a,[0,0],[e,r]),t],0)}const y=uo(m),b=Nu(s,[0,e],[n,s.shape[1]-e]);if(0===e)s=zi(b,oo(oo(b,i),y));else{const t=zi(b,oo(oo(b,i),y));s=vu([Nu(s,[0,0],[n,e]),t],1)}return[i,a,s]})),ai([t,u,l])}return!t&&n>r&&(s=Nu(s,[0,0],[n,r]),a=Nu(a,[0,0],[r,r])),[s,a]}))}const Ih=js({qr_:function(e,t=!1){if(Y(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return Nh(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=fp(wu(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),s=[],a=[];return r.forEach((e=>{const[n,r]=Nh(e,t);s.push(n),a.push(r)})),[wu(tp(s,0),e.shape),wu(tp(a,0),e.shape)]}}});var Th;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(Th||(Th={}));const Ch=js({computeWeightedLoss_:function(e,t,n=Th.SUM_BY_NONZERO_WEIGHTS){const r=Bs(e,"losses","computeWeightedLoss");let s=null;null!=t&&(s=Bs(t,"weights","computeWeightedLoss"));const a=null==s?r:xi(r,s);if(n===Th.NONE)return a;if(n===Th.SUM)return $l(a);if(n===Th.MEAN){if(null==s)return Ql(a);{const e=r.size/s.size,t=wi($l(a),$l(s));return e>1?wi(t,$i(e)):t}}if(n===Th.SUM_BY_NONZERO_WEIGHTS){if(null==s)return wi($l(a),$i(r.size));{const e=xi(s,ac(r.shape)),t=qa($l(rc(e,$i(0))),"float32");return wi($l(a),t)}}throw Error(`Unknown reduction: ${n}`)}}),Ah=js({absoluteDifference_:function(e,t,n,r=Th.SUM_BY_NONZERO_WEIGHTS){const s=Bs(e,"labels","absoluteDifference"),a=Bs(t,"predictions","absoluteDifference");let o=null;null!=n&&(o=Bs(n,"weights","absoluteDifference")),Z(s.shape,a.shape,"Error in absoluteDifference: ");const i=Li(zi(s,a));return Ch(i,o,r)}}),Eh=js({cosineDistance_:function(e,t,n,r,s=Th.SUM_BY_NONZERO_WEIGHTS){const a=Bs(e,"labels","cosineDistance"),o=Bs(t,"predictions","cosineDistance");let i=null;null!=r&&(i=Bs(r,"weights","cosineDistance")),Z(a.shape,o.shape,"Error in cosineDistance: ");const u=$i(1),l=zi(u,$l(xi(a,o),n,!0));return Ch(l,i,s)}}),Ph=js({hingeLoss_:function(e,t,n,r=Th.SUM_BY_NONZERO_WEIGHTS){let s=Bs(e,"labels","hingeLoss");const a=Bs(t,"predictions","hingeLoss");let o=null;null!=n&&(o=Bs(n,"weights","hingeLoss")),Z(s.shape,a.shape,"Error in hingeLoss: ");const i=$i(1);s=zi(xi($i(2),s),i);const u=Ac(zi(i,xi(s,a)));return Ch(u,o,r)}}),$h=js({huberLoss_:function(e,t,n,r=1,s=Th.SUM_BY_NONZERO_WEIGHTS){const a=Bs(e,"labels","huberLoss"),o=Bs(t,"predictions","huberLoss");let i=null;null!=n&&(i=Bs(n,"weights","huberLoss")),Z(a.shape,o.shape,"Error in huberLoss: ");const u=$i(r),l=Li(zi(o,a)),c=Jl(l,u),p=zi(l,c),h=yi(xi($i(.5),vi(c)),xi(u,p));return Ch(h,i,s)}}),Mh=js({logLoss_:function(e,t,n,r=1e-7,s=Th.SUM_BY_NONZERO_WEIGHTS){const a=Bs(e,"labels","logLoss"),o=Bs(t,"predictions","logLoss");let i=null;null!=n&&(i=Bs(n,"weights","logLoss")),Z(a.shape,o.shape,"Error in logLoss: ");const u=$i(1),l=$i(r),c=Cl(xi(a,Il(yi(o,l)))),p=xi(zi(u,a),Il(yi(zi(u,o),l))),h=zi(c,p);return Ch(h,i,s)}}),Oh=js({meanSquaredError_:function(e,t,n,r=Th.SUM_BY_NONZERO_WEIGHTS){const s=Bs(e,"labels","meanSquaredError"),a=Bs(t,"predictions","meanSquaredError");let o=null;null!=n&&(o=Bs(n,"weights","meanSquaredError")),Z(s.shape,a.shape,"Error in meanSquaredError: ");const i=Zc(s,a);return Ch(i,o,r)}}),_h=js({sigmoidCrossEntropy_:function(e,t,n,r=0,s=Th.SUM_BY_NONZERO_WEIGHTS){let a=Bs(e,"multiClassLabels","sigmoidCrossEntropy");const o=Bs(t,"logits","sigmoidCrossEntropy");let i=null;if(null!=n&&(i=Bs(n,"weights","sigmoidCrossEntropy")),Z(a.shape,o.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=$i(r),t=$i(1),n=$i(.5);a=yi(xi(a,zi(t,e)),xi(n,e))}const u=function(e,t){const n=Bs(e,"labels","sigmoidCrossEntropyWithLogits"),r=Bs(t,"logits","sigmoidCrossEntropyWithLogits");Z(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=Ac(r),a=xi(r,n),o=Tl(il(Cl(Li(r))));return yi(zi(s,a),o)}(a,o);return Ch(u,i,s)}}),Dh=js({softmaxCrossEntropy_:function(e,t,n,r=0,s=Th.SUM_BY_NONZERO_WEIGHTS){let a=Bs(e,"onehotLabels","softmaxCrossEntropy");const o=Bs(t,"logits","softmaxCrossEntropy");let i=null;if(null!=n&&(i=Bs(n,"weights","softmaxCrossEntropy")),Z(a.shape,o.shape,"Error in softmaxCrossEntropy: "),r>0){const e=$i(r),t=$i(1),n=$i(a.shape[1]);a=yi(xi(a,zi(t,e)),wi(e,n))}const u=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return Ei(((e,t,r)=>{const s=Bl(t,[n],!0),a=zi(qa(t,"float32"),s);r([e,a]);const o=Cl(xi(a,e));return{value:$l(o,[n]),gradFunc:(e,t)=>{const[r,s]=t,a=Rl(e.shape,[n]);return[xi(wu(e,a),zi(qa(r,"float32"),il(s))),xi(wu(e,a),zi(il(s),qa(r,"float32")))]}}}))(e,t)}(a,o);return Ch(u,i,s)}}),Rh={fft:Kc,ifft:Qc,rfft:Yc,irfft:Xc},zh={hammingWindow:eh,hannWindow:th,frame:nh,stft:rh},Fh={flipLeftRight:ah,resizeNearestNeighbor:Sh,resizeBilinear:xh,rotateWithOffset:oh,cropAndResize:sh,nonMaxSuppression:uh,nonMaxSuppressionAsync:async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=Bs(e,"boxes","nonMaxSuppressionAsync"),o=Bs(t,"scores","nonMaxSuppressionAsync"),i=ih(a,o,n,r,s);n=i.maxOutputSize,r=i.iouThreshold,s=i.scoreThreshold;const u=await Promise.all([a.data(),o.data()]),l=u[0],c=u[1],{selectedIndices:p}=ph(l,c,n,r,s);return a!==e&&a.dispose(),o!==t&&o.dispose(),ap(p,"int32")},nonMaxSuppressionWithScore:bh,nonMaxSuppressionWithScoreAsync:async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const o=Bs(e,"boxes","nonMaxSuppressionAsync"),i=Bs(t,"scores","nonMaxSuppressionAsync"),u=ih(o,i,n,r,s,a);n=u.maxOutputSize,r=u.iouThreshold,s=u.scoreThreshold,a=u.softNmsSigma;const l=await Promise.all([o.data(),i.data()]),c=l[0],p=l[1],{selectedIndices:h,selectedScores:d}=dh(c,p,n,r,s,a);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:ap(h,"int32"),selectedScores:ap(d)}},nonMaxSuppressionPadded:wh,nonMaxSuppressionPaddedAsync:async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const o=Bs(e,"boxes","nonMaxSuppressionAsync"),i=Bs(t,"scores","nonMaxSuppressionAsync"),u=ih(o,i,n,r,s,null),l=u.maxOutputSize,c=u.iouThreshold,p=u.scoreThreshold,[h,d]=await Promise.all([o.data(),i.data()]),{selectedIndices:f,validOutputs:m}=hh(h,d,l,c,p,a);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:ap(f,"int32"),validOutputs:$i(m,"int32")}}},Lh={bandPart:vh,gramSchmidt:kh,qr:Ih},qh={absoluteDifference:Ah,computeWeightedLoss:Ch,cosineDistance:Eh,hingeLoss:Ph,huberLoss:$h,logLoss:Mh,meanSquaredError:Oh,sigmoidCrossEntropy:_h,softmaxCrossEntropy:Dh};class Bh{static sgd(e){return new Ui(e)}static momentum(e,t,n=!1){return new Gi(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,s=!1){return new Hi(e,t,n,r,s)}static adam(e=.001,t=.9,n=.999,r=null){return new Fi(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new Oi(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,s=0){return new ji(e,t,n,r,s)}static adagrad(e,t=.1){return new Di(e,t)}}const Wh={sgd:Bh.sgd,momentum:Bh.momentum,adadelta:Bh.adadelta,adagrad:Bh.adagrad,rmsprop:Bh.rmsprop,adamax:Bh.adamax,adam:Bh.adam},Vh="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function jh(){return new Promise((e=>Vh((()=>e()))))}function Uh(e,t){const n=e[0].length;e.forEach(((e,t)=>{Y(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),Y(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,s)=>{for(let a=0;a<n;a++)Y(a===t||e[a]===r[a],(()=>`Error in concat${n}D: Shape of tensors[${s}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`))}))}function Gh(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}const Hh=30;function Kh(e){return e<=Hh?e:Ce(e,Math.floor(Math.sqrt(e)))}function Qh(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function Xh(e,t,n,r=!0){let s=[];if(r)s=s.concat(t.slice(0)),s.push(e[0]/n),s=s.concat(e.slice(1));else{s=s.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)s=s.concat([e[r+1]/t[r],t[r]]);s=s.concat(e.slice(n+1))}return s}function Jh(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],s=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?s.push(r):n.push(r);r.push(...n),r.push(0),r.push(...s)}return r}function Yh(e,t,n,r=!0){const s=[];r?s.push(e[0]/n):s.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?s.push(t[n-1]*e[n]):s.push(e[n]/t[n-1]):s.push(e[n]);return s}function Zh(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function ed(e,t,n){const r=e.slice(0,1);for(let s=0;s<n;++s)r.push(e[s+1]-t[s][0]-t[s][1]);return r}const td=1.7580993408473768,nd=1.0507009873554805,rd=.3275911,sd=.254829592,ad=-.284496736,od=1.421413741,id=-1.453152027,ud=1.061405429;function ld(...e){Le().getBool("IS_TEST")||console.warn(...e)}function cd(...e){Le().getBool("IS_TEST")||console.log(...e)}function pd(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function hd(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function dd(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function fd(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function md(e,t){return{real:e[2*t],imag:e[2*t+1]}}function gd(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function yd(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let s=0;s<Math.ceil(e/2);s++){const a=(t?2:-2)*Math.PI*(s/e);n[s]=Math.cos(a),r[s]=Math.sin(a)}return{real:n,imag:r}}function bd(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}function wd(e,t,n=0){let r=[];if("number"==typeof t)Y(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{Y(t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0)<=1,(()=>"There should be only one negative value in split array."));const s=t.indexOf(-1);if(-1!==s){const r=t.reduce(((e,t)=>t>0?e+t:e));t[s]=e.shape[n]-r}Y(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}function xd(e,t){let n,r=!1;for(e<=Hh?(n=e,r=!0):n=Ce(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=Ce(e,n+1);return n}function Sd(e,t,n){const r=[],s=e.length;for(let a=0;a<s;a++)a!==t?r.push(e[a]):r.push(n);return r}function vd(e,t,n,r){const s=t.shape.length,a=e.shape.length;if(0!==r&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>a)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${a}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const o=e.shape[n],i=[];let u=1,l=1,c=1;for(let t=0;t<r;++t)i.push(e.shape[t]),u*=e.shape[t];for(let t=r;t<n;t++)i.push(e.shape[t]),l*=e.shape[t];for(let e=r;e<s;e++)i.push(t.shape[e]);for(let t=n+1;t<a;t++)i.push(e.shape[t]),c*=e.shape[t];return{batchSize:u,sliceSize:c,outerSize:l,dimSize:o,outputShape:i}}function kd(e,t,n){if("complex64"===t){if("complex64"===e.dtype)return e.clone();const t=sc(e.shape),r=qa(e,"float32"),s=n.complex(r,t);return t.dispose(),r.dispose(),s}if(!be(e.dtype,t))return Os.makeTensorFromDataId(e.dataId,e.shape,t);if("complex64"===e.dtype){const r=n.real(e),s=qa(r,t);return r.dispose(),s}if("int32"===t)return n.int(e);if("bool"===t){const t=$i(0,e.dtype),r=n.notEqual(e,t);return t.dispose(),r}throw new Error(`Error in Cast: failed to cast ${e.dtype} to ${t}`)}function Nd(e,t){return Os.makeTensorFromDataId(e.dataId,t,e.dtype)}function Id(e){try{return e.map((e=>cs(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function Td(e){return e.map((e=>ls(e)))}const Cd={kernelName:je,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>xi(e,np(qa(n,"float32"),-1))}}},Ad={kernelName:Ue,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=vi(qa(n,"float32")),r=Si(zi($i(1),t));return Cl(wi(e,r))}}}},Ed={kernelName:Ge,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Si(zi(vi(qa(n,"float32")),1));return wi(e,t)}}}},Pd={kernelName:He,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Wi(n.shape,r.shape);return{a:()=>{let t=e;const r=Bi(n.shape,s);return r.length>0&&(t=$l(t,r)),wu(t,n.shape)},b:()=>{let t=e;const n=Bi(r.shape,s);return n.length>0&&(t=$l(t,n)),wu(t,r.shape)}}}},$d={kernelName:Ke,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,r)=>{n[r]=()=>e.clone()})),n}},Md={kernelName:Je,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ki(n)}}},Od={kernelName:Ye,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ki(n)}}},_d={kernelName:Ze,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>wi(e,Si(zi($i(1),vi(qa(n,"float32")))))}}},Dd={kernelName:et,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Si(yi($i(1),vi(qa(n,"float32"))));return wi(e,t)}}}},Rd={kernelName:rt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Wi(n.shape,r.shape);return{a:()=>{const t=yi(vi(n),vi(r));let a=xi(e,wi(r,t));const o=Bi(n.shape,s);return o.length>0&&(a=$l(a,o)),wu(a,n.shape)},b:()=>{const t=yi(vi(n),vi(r));let a=Cl(xi(e,wi(n,t)));const o=Bi(r.shape,s);return o.length>0&&(a=$l(a,o)),wu(a,r.shape)}}}},zd={kernelName:tt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>wi(e,yi(vi(qa(n,"float32")),1))}}},Fd={kernelName:nt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>wi(e,zi($i(1),vi(qa(n,"float32"))))}}},Ld=js({avgPool3dGrad_:function(e,t,n,r,s=[1,1,1],a,o){const i=Bs(e,"dy","avgPool3dGrad"),u=Bs(t,"input","avgPool3dGrad");let l=i,c=u,p=!1;4===u.rank&&(p=!0,l=wu(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),c=wu(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),Y(5===l.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`)),Y(5===c.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${c.rank}.`)),Y(yu(r,s),(()=>`Error in avgPool3dGrad: Either strides or dilations must be 1. Got strides ${r} and dilations '${s}'`)),null!=o&&Y(ae(a),(()=>`Error in avgPool3dGrad: pad must be an integer when using, dimRoundingMode ${o} but got pad ${a}.`));const h={dy:l,input:c},d={filterSize:n,strides:r,dilations:s,pad:a,dimRoundingMode:o},f=Os.runKernel(it,h,d);return p?wu(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}}),qd={kernelName:ot,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:a,dilations:o,pad:i,dimRoundingMode:u}=n,l=null==o?[1,1,1]:o;return{x:()=>Ld(e,r,s,a,l,i,u)}}},Bd=js({avgPoolGrad_:function(e,t,n,r,s){const a=Bs(e,"dy","avgPoolGrad"),o=Bs(t,"input","avgPoolGrad");Y(o.rank===a.rank,(()=>`Rank of input (${o.rank}) does not match rank of dy (${a.rank})`));let i=o,u=a,l=!1;3===o.rank&&(l=!0,i=wu(o,[1,o.shape[0],o.shape[1],o.shape[2]]),u=wu(a,[1,a.shape[0],a.shape[1],a.shape[2]])),Y(4===u.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`)),Y(4===i.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${i.rank}.`));const c={dy:u,input:i},p={filterSize:n,strides:r,pad:s},h=Os.runKernel(at,c,p);return l?wu(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),Wd={kernelName:st,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:a,pad:o}=n;return{x:()=>Bd(e,r,s,a,o)}}},Vd={kernelName:ut,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,s]=t,{transposeA:a,transposeB:o}=n;return a||o?!a&&o?{a:()=>oo(e,s,!1,!1),b:()=>oo(e,r,!0,!1)}:a&&!o?{a:()=>oo(s,e,!1,!0),b:()=>oo(r,e,!1,!1)}:{a:()=>oo(s,e,!0,!0),b:()=>oo(e,r,!0,!0)}:{a:()=>oo(e,s,!1,!0),b:()=>oo(r,e,!0,!1)}}},jd={kernelName:lt,gradFunc:(e,t,n)=>{const{blockShape:r,crops:s}=n;return{x:()=>dc(e,r,s)}}},Ud={kernelName:pt,gradFunc:(e,t,n)=>{const r=n,s=r.inputShape,a=r.shape,o=Array.from(a);for(let e=s.length-1;e>=0;e--)if(s[e]===a[e])o[e]=1;else if(1!==s[e])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${a}].`);const i=[];for(let e=0;e<o.length;e++)o[e]>1&&i.push(e);return{x:()=>$l(e,i,!0)}}},Gd={kernelName:ht,gradFunc:e=>({x:()=>e.clone()})},Hd={kernelName:dt,gradFunc:e=>({x:()=>ki(e)})},Kd={kernelName:ft,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:s,clipValueMax:a}=n;return{x:()=>nl(Wl(ml(r,s),vl(r,a)),e,ki(e))}}},Qd={kernelName:gt,inputsToSave:["x"],gradFunc:Cd.gradFunc},Xd={kernelName:yt,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map((e=>e.shape)),{axis:s}=n,a=he(s,t[0].shape)[0],o=r.map((e=>e[a]));return Jc(e,o,a).map((e=>()=>e))}},Jd={kernelName:bt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{dilations:a,strides:o,pad:i,dataFormat:u}=n;return Y(gu(a),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`)),{x:()=>Wu(r.shape,e,s,o,i,u),filter:()=>jp(r,e,s.shape,o,i,u)}}},Yd={kernelName:xt,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{strides:a,pad:o,dataFormat:i,dimRoundingMode:u}=n;return{dy:()=>qu(e,s,a,o,i,1,u),filter:()=>jp(e,r,s.shape,a,o,i,u)}}},Zd=js({conv3DBackpropFilter_:function(e,t,n,r,s){let a=e;4===e.rank&&(a=wu(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let o=t;4===o.rank&&(o=wu(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),Y(5===a.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`)),Y(5===o.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${o.shape}.`)),Y(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),Y(a.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`)),Y(o.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${o.shape[4]}) must match output depth for filter (${n[4]}).`));const i={x:a,dy:o},u={strides:r,pad:s,filterShape:n};return Os.runKernel(vt,i,u)}}),ef={kernelName:St,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:a}=n;Y(gu(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[o,i]=t;return{x:()=>Uu(o.shape,e,i,s,a),filter:()=>Zd(o,e,i.shape,s,a)}}},tf={kernelName:Nt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>xi(Cl(Bc(qa(n,"float32"))),e)}}},nf={kernelName:It,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>xi(Wc(qa(n,"float32")),e)}}},rf={kernelName:Tt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s,exclusive:a,reverse:o}=n;return{x:()=>{const t=Fl([s],r.rank);let n=Qu(e,s,a,!o);return null!=t&&(n=uo(n,t)),n}}}},sf={kernelName:Pt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:a,dimRoundingMode:o}=n,i=null==r?[1,1]:r;Y(gu(i),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`));const[u,l]=t;return Y(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`)),Y(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${l.rank}.`)),Y(u.shape[3]===l.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),Y(yu(s,i),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations '${i}'.`)),null!=o&&Y(ae(a),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${a}.`)),{x:()=>Jp(u.shape,e,l,s,a,r,o),filter:()=>Xp(u,e,l.shape,s,a,r,o)}}},af={kernelName:_t,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,a={x:r,filter:s,dy:e},o={x:r,filter:s,dy:e};return{x:()=>Os.runKernel(Dt,a,n),filter:()=>Os.runKernel(Rt,o,n)}}},of={kernelName:Ft,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r={dy:e,y:n};return{x:()=>Os.runKernel(Lt,r)}}},uf={kernelName:qt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=xi(il(Cl(vi(n))),2/Math.sqrt(Math.PI));return{x:()=>xi(e,r)}}},lf={kernelName:Wt,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>xi(e,n)}}},cf={kernelName:Vt,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>wu(e,n.shape)}}},pf={kernelName:jt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>xi(e,il(n))}}},hf={kernelName:Kt,gradFunc:e=>({x:()=>ki(e)})},df={kernelName:Qt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Wi(n.shape,r.shape);return{a:()=>{const t=wi(e,qa(r,"float32")),a=Bi(n.shape,s);return a.length>0?wu($l(t,a),n.shape):t},b:()=>{let t=xi(e,qa(n,"float32"));const a=Bi(r.shape,s);a.length>0&&(t=wu($l(t,a),r.shape));const o=vi(r);return Cl(wi(t,qa(o,"float32")))}}}},ff={kernelName:Xt,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[s,a,o,i]=t,u=null==i?$i(1):i,l=Bi(a.shape,s.shape),c=[];if(1===a.rank){for(let e=0;e<s.shape.length-1;++e)c.push(s.shape[e]);c.push(1)}const p=zi(s,a),h=xi(e,u),d=Rc(yi(o,$i(r))),f=xi(xi(xi(d,d),d),$i(-.5));return{x:()=>1===a.rank?wu(xi(xi(e,cl(wu(d,[1,1,1,a.shape[0]]),c)),u),s.shape):wu(xi(xi(e,d),u),s.shape),mean:()=>{let e=xi(xi(d,$i(-1)),h);return 1===a.rank&&(e=$l(e,l)),wu(e,a.shape)},variance:()=>{let e=xi(xi(f,p),h);return 1===a.rank&&(e=$l(e,l)),wu(e,a.shape)},scale:()=>{const t=xi(p,d);let n=xi(e,t);return 1===a.rank&&(n=$l(n,l)),wu(n,a.shape)},offset:()=>{let t=e;return 1===a.rank&&(t=$l(t,l)),wu(t,a.shape)}}}},mf={kernelName:Jt,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,s]=t,{axis:a}=n,o=he(a,r.shape)[0];return{x:()=>{const t=r.shape,n=s.size,i=t.slice(0,o),u=i.length,l=t.slice(a,t.length).slice(1),c=l.length,p=gf(0,u),h=gf(u+1,u+1+c),d=yf([i,[n],l]),f=wu(e,d),m=wu(s,[n]),g=yf([[u],p,h]),y=uo(f,g);let b=dp(y,m,r.shape[o]);const w=Ll(g);return b=uo(b,w),b},indices:()=>s}}};function gf(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function yf(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}const bf={kernelName:en,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>ki(n),b:()=>ki(r)}}},wf={kernelName:tn,gradFunc:e=>({x:()=>qa(e,"float32")})},xf={kernelName:sn,gradFunc:e=>({x:()=>ki(e)})},Sf={kernelName:an,gradFunc:e=>({x:()=>ki(e)})},vf={kernelName:on,gradFunc:e=>({x:()=>ki(e)})},kf={kernelName:un,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{alpha:s}=n,a=fl(r,0);return{x:()=>nl(a,e,xi(e,s))}}},Nf={kernelName:dn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>wi(e,yi(n,1))}}},If={kernelName:hn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>wi(e,qa(n,"float32"))}}},Tf={kernelName:yn,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n;return{logits:()=>{const t=il(r);return zi(e,xi($l(e,s,!0),t))}}}},Cf=js({localResponseNormalizationBackprop_:function(e,t,n,r=5,s=1,a=1,o=.5){const i={x:e,y:t,dy:n},u={depthRadius:r,bias:s,alpha:a,beta:o};return Os.runKernel(wn,i,u)}}),Af={kernelName:bn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{depthRadius:a,bias:o,alpha:i,beta:u}=n;return{x:()=>Cf(r,s,e,a,o,i,u)}}};function Ef(e,t,n,r){return t.rank<n.rank&&(t=wu(t,Rl(t.shape,r))),e.rank<n.rank&&(e=wu(e,Rl(e.shape,r))),{x:()=>xi(e,qa(tl(n,t),e.dtype))}}const Pf={kernelName:xn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:s}=r,a=t[0],o=Ef(e,t[1],a,he(s,a.shape));return{x:()=>o.x()}}},$f={kernelName:Sn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>xi(e,qa(ml(n,r),"float32")),b:()=>xi(e,qa(Sl(n,r),"float32"))}}},Mf=js({maxPool3dGrad_:function(e,t,n,r,s,a=[1,1,1],o,i){const u=Bs(e,"dy","maxPool3dGrad"),l=Bs(t,"input","maxPool3dGrad"),c=Bs(n,"output","maxPool3dGrad");let p=u,h=l,d=c,f=!1;4===l.rank&&(f=!0,p=wu(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),h=wu(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=wu(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),Y(5===p.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${p.rank}.`)),Y(5===h.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`)),Y(5===d.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`)),Y(yu(s,a),(()=>`Error in maxPool3dGrad: Either strides or dilations must be 1. Got strides ${s} and dilations '${a}'`)),null!=i&&Y(ae(o),(()=>`Error in maxPool3dGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${o}.`));const m={dy:p,input:h,output:d},g={filterSize:r,strides:s,dilations:a,pad:o,dimRoundingMode:i},y=Os.runKernel(In,m,g);return f?wu(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}}),Of={kernelName:Nn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:a,strides:o,dilations:i,pad:u,dimRoundingMode:l}=n,c=null==i?[1,1,1]:i;return{x:()=>Mf(e,r,s,a,o,c,u,l)}}},_f=js({maxPoolGrad_:function(e,t,n,r,s,a,o){const i=Bs(e,"dy","maxPoolGrad"),u=Bs(t,"input","maxPoolGrad"),l=Bs(n,"output","maxPoolGrad");Y(u.rank===i.rank,(()=>`Rank of input (${u.rank}) does not match rank of dy (${i.rank})`)),Y(4===i.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${i.rank}.`)),Y(4===u.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`)),null!=o&&Y(ae(a),(()=>`Error in maxPoolGrad: pad must be an integer when using, dimRoundingMode ${o} but got pad ${a}.`));const c={dy:i,input:u,output:l},p={filterSize:r,strides:s,pad:a,dimRoundingMode:o};return Os.runKernel(kn,c,p)}}),Df={kernelName:Wn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,a=s.map((e=>e[0]));return{x:()=>Nu(e,a,r.shape)}}},Rf={kernelName:yr,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:s}=n;return{x:()=>Cu(e,r,s)}}},zf={kernelName:br,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>vu(e,r)}}},Ff=[Cd,Ad,Ed,Pd,$d,Md,Od,_d,Dd,Rd,zd,Fd,qd,Wd,Vd,jd,Ud,Gd,Hd,Kd,Qd,Xd,Yd,Jd,ef,tf,nf,rf,sf,af,{kernelName:zt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Wi(n.shape,r.shape);return{a:()=>{const t=wi(e,qa(r,"float32")),a=Bi(n.shape,s);return a.length>0?wu($l(t,a),n.shape):t},b:()=>{let t=xi(e,qa(n,"float32"));const a=Bi(r.shape,s);a.length>0&&(t=wu($l(t,a),r.shape));const o=vi(r);return Cl(wi(t,qa(o,"float32")))}}}},of,uf,lf,cf,pf,df,hf,ff,mf,bf,wf,xf,Sf,vf,kf,Nf,If,Tf,Af,Pf,Pf,$f,Of,{kernelName:vn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:a,strides:o,pad:i}=n;return{x:()=>_f(e,r,s,a,o,i)}}},{kernelName:Cn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n,a=he(s,r.shape),o=ne(Dl(r.shape,a)[1]);return{x:()=>{const t=r.shape.slice();a.forEach((e=>{t[e]=1}));const n=wu(e,t);return wi(xi(n,ac(r.shape,"float32")),o)}}}},{kernelName:An,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:s}=r,[a,o]=t,i=Ef(e,o,a,he(s,a.shape));return{x:()=>i.x()}}},{kernelName:En,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>xi(e,qa(vl(n,r),"float32")),b:()=>xi(e,qa(fl(n,r),"float32"))}}},{kernelName:Pn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,a=s.map((e=>e[0]));return{x:()=>Nu(e,a,r.shape)}}},{kernelName:$n,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Wi(n.shape,r.shape);return{a:()=>{const t=Bi(n.shape,s);return t.length>0?wu($l(e,t),n.shape):e},b:()=>{const t=xi(e,Cl(hl(wi(n,r)))),a=Bi(r.shape,s);return a.length>0?wu($l(t,a),r.shape):t}}}},{kernelName:On,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Wi(n.shape,r.shape);return{a:()=>{const t=xi(e,qa(r,"float32")),a=Bi(n.shape,s);return a.length>0?wu($l(t,a),n.shape):t},b:()=>{const t=xi(e,qa(n,"float32")),a=Bi(r.shape,s);return a.length>0?wu($l(t,a),r.shape):t}}}},{kernelName:_n,gradFunc:e=>({x:()=>Cl(e)})},{kernelName:qn,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>sc(n.shape,"float32")}}},{kernelName:Ln,gradFunc:e=>({x:()=>ki(e)})},{kernelName:Bn,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:r}=n;return fp(e,r).map((e=>()=>e))}},Df,Df,{kernelName:jn,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,s]=t,a=n,o=r,i=Wi(a.shape,o.shape);return{a:()=>{const t=qa(o,"float32");let n=xi(e,xi(t,Ri(a,zi(t,$i(1)))));const r=Bi(a.shape,i);return r.length>0&&(n=$l(n,r)),wu(n,a.shape)},b:()=>{const t=fl(a,0),n=nl(t,Il(a),ki(a));let r=xi(e,xi(s,n));const u=Bi(o.shape,i);return u.length>0&&(r=$l(r,u)),wu(r,o.shape)}}}},{kernelName:Un,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,s=fl(n,0);return{x:()=>nl(s,e,xi(e,r)),alpha:()=>{let t=nl(s,ki(e),xi(e,n));const a=Bi(r.shape,e.shape);return a.length>0&&(t=$l(t,a)),wu(t,r.shape)}}}},{kernelName:Qn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>wi(e,Cl(vi(n)))}}},{kernelName:nr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=xi(vl(n,6),np(n));return{x:()=>xi(e,qa(r,"float32"))}}},{kernelName:Xn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>xi(e,qa(np(n),"float32"))}}},{kernelName:Jn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>wu(e,n.shape)}}},{kernelName:er,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r};return{images:()=>Os.runKernel(tr,s,n)}}},{kernelName:Yn,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r};return{images:()=>Os.runKernel(Zn,s,n)}}},{kernelName:rr,gradFunc:(e,t,n)=>{const{dims:r}=n,s=he(r,e.shape);return{x:()=>Pc(e,s)}}},{kernelName:sr,gradFunc:e=>({x:()=>ki(e)})},{kernelName:ar,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Cl(wi(e,xi(Ri(n,1.5),2)))}}},{kernelName:ir,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>qa(ki(n),"float32"),t:()=>xi(e,qa(n,e.dtype)),e:()=>xi(e,qa(Vl(n),e.dtype))}}},{kernelName:ur,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=fl(n,$i(0)),r=$i(td),s=$i(nd),a=xi(e,s),o=xi(xi(e,r),il(qa(n,"float32")));return nl(t,a,o)}}}},{kernelName:dr,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>xi(e,xi(n,zi($i(1),n)))}}},{kernelName:hr,gradFunc:e=>({x:()=>ki(e)})},{kernelName:cr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>xi(Hu(qa(n,"float32")),e)}}},{kernelName:pr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>xi(Ku(qa(n,"float32")),e)}}},{kernelName:lr,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:s,size:a}=n,o=r.shape,[i,u]=Oo(r,s,a),l=[];for(let t=0;t<e.rank;t++)l.push([i[t],o[t]-i[t]-u[t]]);return{x:()=>uc(e,l)}}},{kernelName:wr,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:s}=n,a=xi(e,r);return{logits:()=>zi(a,xi($l(a,[s],!0),r))}}},{kernelName:fr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>xi(e,ku(n))}}},Rf,Rf,zf,zf,{kernelName:mr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>wi(e,xi(Si(qa(n,"float32")),2))}}},{kernelName:xr,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=$i(2);return{a:()=>xi(e,xi(s,zi(n,r))),b:()=>xi(e,xi(s,zi(r,n)))}}},{kernelName:Sr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>xi(e,xi(qa(n,"float32"),2))}}},{kernelName:_r,gradFunc:e=>({x:()=>ki(e)})},{kernelName:vr,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Wi(n.shape,r.shape);return{a:()=>{let t=e;const r=Bi(n.shape,s);return r.length>0&&(t=$l(t,r)),wu(t,n.shape)},b:()=>{let t=e;const n=Bi(r.shape,s);return n.length>0&&(t=$l(t,n)),wu(Cl(t),r.shape)}}}},{kernelName:gr,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,s=r.shape.slice(),{axis:a}=n;he(a,r.shape).forEach((e=>{s[e]=1}));const o=wu(e,s),i=xi(o,ac(r.shape,"float32"));return{x:()=>i}}},{kernelName:Ir,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>wi(e,vi(Hu(n)))}}},{kernelName:Tr,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>xi(zi($i(1),vi(n)),e)}}},{kernelName:Cr,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:s}=n;return{x:()=>{let t=ki(r);if(1===r.rank)for(let n=0;n<s[0];++n)t=yi(t,Nu(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)t=yi(t,Nu(e,[n*r.shape[0],a*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let o=0;o<s[2];++o)t=yi(t,Nu(e,[n*r.shape[0],a*r.shape[1],o*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let o=0;o<s[2];++o)for(let i=0;i<s[3];++i)t=yi(t,Nu(e,[n*r.shape[0],a*r.shape[1],o*r.shape[2],i*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},{kernelName:Er,gradFunc:(e,t,n)=>{const r=n,{perm:s}=r,a=Ll(s);return{x:()=>uo(e,a)}}},{kernelName:$r,gradFunc:(e,t,n)=>{const r=n,{axis:s}=r;return{value:()=>tp(e,s)}}},{kernelName:Mr,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=Vi(t,ki(t)),r=dl(e,n);let s=ml(t,$i(0,"int32"));const a=r.rank-s.rank;for(let e=0;e<a;++e)s=ul(s,e+1);s=Wl(s,ac(r.shape,"bool"));const o=ki(r);return nl(s,r,o)}(e,n)}}},{kernelName:Or,gradFunc:e=>({x:()=>ki(e)})}];for(const e of Ff)Gr(e);let Lf;function qf(){return null==Lf&&(Lf=mi().epsilon()),Lf}ms.prototype.abs=function(){return this.throwIfDisposed(),Li(this)},ms.prototype.acos=function(){return this.throwIfDisposed(),Ki(this)},ms.prototype.acosh=function(){return this.throwIfDisposed(),Qi(this)},ms.prototype.addStrict=function(e){return this.throwIfDisposed(),Ip(this,e)},ms.prototype.add=function(e){return this.throwIfDisposed(),yi(this,e)},ms.prototype.all=function(e,t){return this.throwIfDisposed(),Ji(this,e,t)},ms.prototype.any=function(e,t){return this.throwIfDisposed(),Yi(this,e,t)},ms.prototype.argMax=function(e){return this.throwIfDisposed(),Zi(this,e)},ms.prototype.argMin=function(e){return this.throwIfDisposed(),eu(this,e)},ms.prototype.asScalar=function(){return this.throwIfDisposed(),Y(1===this.size,(()=>"The array must have only 1 element.")),wu(this,[])},ms.prototype.asType=function(e){return this.throwIfDisposed(),qa(this,e)},ms.prototype.as1D=function(){return this.throwIfDisposed(),wu(this,[this.size])},ms.prototype.as2D=function(e,t){return this.throwIfDisposed(),wu(this,[e,t])},ms.prototype.as3D=function(e,t,n){return this.throwIfDisposed(),wu(this,[e,t,n])},ms.prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),wu(this,[e,t,n,r])},ms.prototype.as5D=function(e,t,n,r,s){return this.throwIfDisposed(),wu(this,[e,t,n,r,s])},ms.prototype.asin=function(){return this.throwIfDisposed(),tu(this)},ms.prototype.asinh=function(){return this.throwIfDisposed(),nu(this)},ms.prototype.atan=function(){return this.throwIfDisposed(),ru(this)},ms.prototype.atan2=function(e){return this.throwIfDisposed(),su(this,e)},ms.prototype.atanh=function(){return this.throwIfDisposed(),au(this)},ms.prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),xu(this,e,t,n,r)},ms.prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),Cu(this,e,t)},ms.prototype.batchNorm=function(e,t,n,r,s){return this.throwIfDisposed(),Au(this,e,t,n,r,s)},ms.prototype.broadcastTo=function(e){return this.throwIfDisposed(),Ou(this,e)},ms.prototype.cast=function(e){return this.throwIfDisposed(),qa(this,e)},ms.prototype.ceil=function(){return this.throwIfDisposed(),_u(this)},ms.prototype.clipByValue=function(e,t){return this.throwIfDisposed(),Du(this,e,t)},ms.prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof ms&&(e=[e]),vu([this,...e],t)},ms.prototype.conv1d=function(e,t,n,r,s,a){return this.throwIfDisposed(),Bu(this,e,t,n,r,s,a)},ms.prototype.conv2dTranspose=function(e,t,n,r,s){return this.throwIfDisposed(),Vu(this,e,t,n,r,s)},ms.prototype.conv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),qu(this,e,t,n,r,s,a)},ms.prototype.cos=function(){return this.throwIfDisposed(),Hu(this)},ms.prototype.cosh=function(){return this.throwIfDisposed(),Ku(this)},ms.prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),Qu(this,e,t,n)},ms.prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),Ju(this,e,t)},ms.prototype.depthwiseConv2D=function(e,t,n,r,s,a){return Zo("depthwiseConv2D is deprecated, use depthwiseConv2d instead"),this.throwIfDisposed(),Yu(this,e,t,n,r,s,a)},ms.prototype.depthwiseConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),Yu(this,e,t,n,r,s,a)},ms.prototype.dilation2d=function(e,t,n,r,s){return this.throwIfDisposed(),el(this,e,t,n,r,s)},ms.prototype.divNoNan=function(e){return this.throwIfDisposed(),rl(this,e)},ms.prototype.divStrict=function(e){return this.throwIfDisposed(),Tp(this,e)},ms.prototype.div=function(e){return this.throwIfDisposed(),wi(this,e)},ms.prototype.dot=function(e){return this.throwIfDisposed(),sl(this,e)},ms.prototype.elu=function(){return this.throwIfDisposed(),al(this)},ms.prototype.equalStrict=function(e){return this.throwIfDisposed(),wp(this,e)},ms.prototype.equal=function(e){return this.throwIfDisposed(),tl(this,e)},ms.prototype.erf=function(){return this.throwIfDisposed(),ol(this)},ms.prototype.exp=function(){return this.throwIfDisposed(),il(this)},ms.prototype.expandDims=function(e){return this.throwIfDisposed(),ul(this,e)},ms.prototype.expm1=function(){return this.throwIfDisposed(),ll(this)},ms.prototype.fft=function(){return this.throwIfDisposed(),Kc(this)},ms.prototype.flatten=function(){return this.throwIfDisposed(),wu(this,[this.size])},ms.prototype.floor=function(){return this.throwIfDisposed(),hl(this)},ms.prototype.floorDiv=function(e){return this.throwIfDisposed(),bi(this,e)},ms.prototype.gather=function(e,t){return this.throwIfDisposed(),dl(this,e,t)},ms.prototype.greaterEqualStrict=function(e){return this.throwIfDisposed(),xp(this,e)},ms.prototype.greaterEqual=function(e){return this.throwIfDisposed(),ml(this,e)},ms.prototype.greaterStrict=function(e){return this.throwIfDisposed(),Sp(this,e)},ms.prototype.greater=function(e){return this.throwIfDisposed(),fl(this,e)},ms.prototype.ifft=function(){return this.throwIfDisposed(),Qc(this)},ms.prototype.irfft=function(){return this.throwIfDisposed(),Xc(this)},ms.prototype.isFinite=function(){return this.throwIfDisposed(),yl(this)},ms.prototype.isInf=function(){return this.throwIfDisposed(),bl(this)},ms.prototype.isNaN=function(){return this.throwIfDisposed(),wl(this)},ms.prototype.leakyRelu=function(e){return this.throwIfDisposed(),xl(this,e)},ms.prototype.lessEqualStrict=function(e){return this.throwIfDisposed(),vp(this,e)},ms.prototype.lessEqual=function(e){return this.throwIfDisposed(),vl(this,e)},ms.prototype.lessStrict=function(e){return this.throwIfDisposed(),kp(this,e)},ms.prototype.less=function(e){return this.throwIfDisposed(),Sl(this,e)},ms.prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),Nl(this,e,t,n,r)},ms.prototype.logSigmoid=function(){return this.throwIfDisposed(),El(this)},ms.prototype.logSoftmax=function(e){return this.throwIfDisposed(),Ml(this,e)},ms.prototype.logSumExp=function(e,t){return this.throwIfDisposed(),Bl(this,e,t)},ms.prototype.log=function(){return this.throwIfDisposed(),Il(this)},ms.prototype.log1p=function(){return this.throwIfDisposed(),Tl(this)},ms.prototype.logicalAnd=function(e){return this.throwIfDisposed(),Wl(this,e)},ms.prototype.logicalNot=function(){return this.throwIfDisposed(),Vl(this)},ms.prototype.logicalOr=function(e){return this.throwIfDisposed(),jl(this,e)},ms.prototype.logicalXor=function(e){return this.throwIfDisposed(),Ul(this,e)},ms.prototype.matMul=function(e,t,n){return this.throwIfDisposed(),oo(this,e,t,n)},ms.prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),Gl(this,e,t,n,r)},ms.prototype.max=function(e,t){return this.throwIfDisposed(),Pl(this,e,t)},ms.prototype.maximumStrict=function(e){return this.throwIfDisposed(),Cp(this,e)},ms.prototype.maximum=function(e){return this.throwIfDisposed(),Vi(this,e)},ms.prototype.mean=function(e,t){return this.throwIfDisposed(),Ql(this,e,t)},ms.prototype.min=function(e,t){return this.throwIfDisposed(),Xl(this,e,t)},ms.prototype.minimumStrict=function(e){return this.throwIfDisposed(),Ap(this,e)},ms.prototype.minimum=function(e){return this.throwIfDisposed(),Jl(this,e)},ms.prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),Yl(this,e,t)},ms.prototype.modStrict=function(e){return this.throwIfDisposed(),Ep(this,e)},ms.prototype.mod=function(e){return this.throwIfDisposed(),Zl(this,e)},ms.prototype.mulStrict=function(e){return this.throwIfDisposed(),Pp(this,e)},ms.prototype.mul=function(e){return this.throwIfDisposed(),xi(this,e)},ms.prototype.neg=function(){return this.throwIfDisposed(),Cl(this)},ms.prototype.norm=function(e,t,n){return this.throwIfDisposed(),Dp(this,e,t,n)},ms.prototype.notEqualStrict=function(e){return this.throwIfDisposed(),Np(this,e)},ms.prototype.notEqual=function(e){return this.throwIfDisposed(),rc(this,e)},ms.prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),io(this,e,t,n)},ms.prototype.onesLike=function(){return this.throwIfDisposed(),oc(this)},ms.prototype.pad=function(e,t){return this.throwIfDisposed(),uc(this,e,t)},ms.prototype.pool=function(e,t,n,r,s){return this.throwIfDisposed(),fc(this,e,t,n,r,s)},ms.prototype.powStrict=function(e){return this.throwIfDisposed(),$p(this,e)},ms.prototype.pow=function(e){return this.throwIfDisposed(),Ri(this,e)},ms.prototype.prelu=function(e){return this.throwIfDisposed(),mc(this,e)},ms.prototype.prod=function(e,t){return this.throwIfDisposed(),gc(this,e,t)},ms.prototype.reciprocal=function(){return this.throwIfDisposed(),Cc(this)},ms.prototype.relu=function(){return this.throwIfDisposed(),Ac(this)},ms.prototype.relu6=function(){return this.throwIfDisposed(),Ec(this)},ms.prototype.reshapeAs=function(e){return this.throwIfDisposed(),wu(this,e.shape)},ms.prototype.reshape=function(e){return this.throwIfDisposed(),wu(this,e)},ms.prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),xh(this,e,t,n)},ms.prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),Sh(this,e,t,n)},ms.prototype.reverse=function(e){return this.throwIfDisposed(),Pc(this,e)},ms.prototype.rfft=function(){return this.throwIfDisposed(),Yc(this)},ms.prototype.round=function(){return this.throwIfDisposed(),Dc(this)},ms.prototype.rsqrt=function(){return this.throwIfDisposed(),Rc(this)},ms.prototype.selu=function(){return this.throwIfDisposed(),zc(this)},ms.prototype.separableConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),Fc(this,e,t,n,r,s,a)},ms.prototype.sigmoid=function(){return this.throwIfDisposed(),ku(this)},ms.prototype.sign=function(){return this.throwIfDisposed(),qc(this)},ms.prototype.sin=function(){return this.throwIfDisposed(),Bc(this)},ms.prototype.sinh=function(){return this.throwIfDisposed(),Wc(this)},ms.prototype.slice=function(e,t){return this.throwIfDisposed(),Nu(this,e,t)},ms.prototype.softmax=function(e){return this.throwIfDisposed(),Hc(this,e)},ms.prototype.softplus=function(){return this.throwIfDisposed(),Al(this)},ms.prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),dc(this,e,t)},ms.prototype.split=function(e,t){return this.throwIfDisposed(),Jc(this,e,t)},ms.prototype.sqrt=function(){return this.throwIfDisposed(),Si(this)},ms.prototype.square=function(){return this.throwIfDisposed(),vi(this)},ms.prototype.squaredDifference=function(e){return this.throwIfDisposed(),Zc(this,e)},ms.prototype.squaredDifferenceStrict=function(e){return this.throwIfDisposed(),Mp(this,e)},ms.prototype.squeeze=function(e){return this.throwIfDisposed(),ep(this,e)},ms.prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof ms?[this,e]:[this,...e];return tp(n,t)},ms.prototype.step=function(e){return this.throwIfDisposed(),np(this,e)},ms.prototype.stridedSlice=function(e,t,n,r,s,a,o,i){return this.throwIfDisposed(),rp(this,e,t,n,r,s,a,o,i)},ms.prototype.subStrict=function(e){return this.throwIfDisposed(),Op(this,e)},ms.prototype.sub=function(e){return this.throwIfDisposed(),zi(this,e)},ms.prototype.sum=function(e,t){return this.throwIfDisposed(),$l(this,e,t)},ms.prototype.tan=function(){return this.throwIfDisposed(),sp(this)},ms.prototype.tanh=function(){return this.throwIfDisposed(),Iu(this)},ms.prototype.tile=function(e){return this.throwIfDisposed(),cl(this,e)},ms.prototype.toBool=function(){return this.throwIfDisposed(),qa(this,"bool")},ms.prototype.toFloat=function(){return this.throwIfDisposed(),qa(this,"float32")},ms.prototype.toInt=function(){return this.throwIfDisposed(),qa(this,"int32")},ms.prototype.topk=function(e,t){return this.throwIfDisposed(),cp(this,e,t)},ms.prototype.transpose=function(e){return this.throwIfDisposed(),uo(this,e)},ms.prototype.unique=function(e){return this.throwIfDisposed(),hp(this,e)},ms.prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),dp(this,e,t)},ms.prototype.unstack=function(e){return this.throwIfDisposed(),fp(this,e)},ms.prototype.where=function(e,t){return this.throwIfDisposed(),nl(e,this,t)},ms.prototype.zerosLike=function(){return this.throwIfDisposed(),ki(this)};class Bf extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Bf.prototype)}}class Wf extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Wf.prototype)}}class Vf extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Vf.prototype)}}class jf extends Error{constructor(e){super(e),Object.setPrototypeOf(this,jf.prototype)}}class Uf extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Uf.prototype)}}function Gf(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function Hf(e,t){if(!e)throw new Uf(t)}function Kf(e,t){let n=0;for(const r of e)r===t&&n++;return n}function Qf(e){return 1===e.length?e[0]:e}function Xf(e){return Array.isArray(e)?e:[e]}function Jf(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function Yf(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}Error;let Zf={};function em(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function tm(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>tm(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?tm(t):e[n]=t.value)}}}function nm(e,t={},n={},r="object",s=!1){if("string"==typeof e){const s=e;let a;if(s in n)a=n[s];else if(s in Zf)a=Zf[s];else if(a=t[s],null==a)throw new Vf(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{const a=e;if(null==a.className||null==a.config)throw new Vf(`${r}: Improper config format: ${JSON.stringify(a)}.\n'className' and 'config' must set.`);const o=a.className;let i,u;if(o in n?[i,u]=n[o]:o in Zf?[i,u]=Zf.className:o in t&&([i,u]=t[o]),null==i)throw new Vf(`Unknown ${r}: ${o}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=u){const e={};for(const t of Object.keys(Zf))e[t]=Zf[t];for(const t of Object.keys(n))e[t]=n[t];a.config.customObjects=e;const t=Object.assign({},Zf);for(const e of Object.keys(n))Zf[e]=n[e];tm(a.config);const r=u(i,a.config,n,s);return Zf=Object.assign({},t),r}{const e=Object.assign({},Zf);for(const e of Object.keys(n))Zf[e]=n[e];const t=new i(a.config);return Zf=Object.assign({},e),t}}}function rm(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function sm(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function am(e){if(null==e)throw new Vf(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function om(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new Vf(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function im(e,t,n=0,r=1/0){return Hf(n>=0),Hf(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every((e=>typeof e===t))}function um(e,t){Array.isArray(e)?(Y(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>um(e,`element ${n+1} of ${t}`)))):Y(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${lm(e)}.`))}function lm(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>lm(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function cm(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}function pm(e,t){return si((()=>Si($l(xi(e,e),t,!0))))}class hm extends Do{getConfig(){return{}}}class dm extends hm{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return si((()=>{const t=pm(e,this.axis),n=Du(t,0,this.maxValue);return xi(e,wi(n,yi(qf(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}dm.className="MaxNorm",zo(dm);class fm extends hm{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return si((()=>wi(e,yi(qf(),pm(e,this.axis)))))}getConfig(){return{axis:this.axis}}}fm.className="UnitNorm",zo(fm);class mm extends hm{apply(e){return Ac(e)}}mm.className="NonNeg",zo(mm);class gm extends hm{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return si((()=>{const t=pm(e,this.axis),n=yi(xi(this.rate,Du(t,this.minValue,this.maxValue)),xi(1-this.rate,t));return xi(e,wi(n,yi(qf(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}gm.className="MinMaxNorm",zo(gm);const ym={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function bm(e){return em(e)}function wm(e,t={}){return nm(e,Ro.getMap().classNameMap,t,"constraint")}function xm(e){return null==e?null:"string"==typeof e?wm({className:e in ym?ym[e]:e,config:{}}):e instanceof hm?e:wm(e)}function Sm(e){return new dm(e)}function vm(e){return new fm(e)}function km(){return new mm}function Nm(e){return new gm(e)}const Im=["channelsFirst","channelsLast"],Tm=["nearest","bilinear"],Cm=["valid","same","causal"],Am=["max","avg"],Em=["sum","mul","concat","ave"],Pm=new Map;function $m(e){om(Im,"DataFormat",e)}function Mm(e){om(Cm,"PaddingMode",e)}function Om(e){om(Am,"PoolMode",e)}const _m=[];function Dm(e,t){_m.push(e);try{const e=t();return _m.pop(),e}catch(e){throw _m.pop(),e}}function Rm(e){if(!Lm(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===_m.length?"":_m.join("/")+"/")+e}function zm(e){if(!Lm(e))throw new Error("Not a valid tensor name: '"+e+"'");Pm.has(e)||Pm.set(e,0);const t=Pm.get(e);if(Pm.set(e,Pm.get(e)+1),t>0){const n=`${e}_${t}`;return Pm.set(n,1),n}return e}const Fm=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Lm(e){return!!e.match(Fm)}function qm(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let s=t;s<n;++s)r*=e[s];return r}function Bm(e){return ap(e=Array.isArray(e)?new Float32Array(e):e)}function Wm(e){return Xl(Bm(e)).dataSync()[0]}function Vm(e){return Pl(Bm(e)).dataSync()[0]}function jm(e,t){if(t<e)throw new Vf(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let r=e;r<t;++r)n.push(r);return n}function Um(e,t){return e.asType(t)}function Gm(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),e.reshape(n)}function Hm(e,t,n){return si((()=>{switch(e.rank){case 1:return Vc(e,t,n);case 2:return jc(e,[t,0],[n,e.shape[1]]);case 3:return Uc(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return Gc(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return Nu(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return Nu(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new Vf(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Km(e,t,n){return si((()=>{switch(e.rank){case 1:return Vc(e,t,n);case 2:return jc(e,[0,t],[e.shape[0],n]);case 3:return Uc(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return Gc(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new Vf(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Qm(e,t,n,r){return si((()=>{switch(e.rank){case 1:return Vc(e,t,n);case 2:switch(r){case 1:return Hm(e,t,n);case 2:return Km(e,t,n);default:throw new Vf(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return Hm(e,t,n);case 2:return Uc(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return Km(e,t,n);default:throw new Vf(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return Hm(e,t,n);case 2:return Gc(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return Gc(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return Km(e,t,n);default:throw new Vf(`The axis is not within the rank of the tensor ${r}`)}default:throw new Vf(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Xm(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),vu(e,t)}function Jm(e,t){switch(e.rank){case 1:return Ru([e,t]);case 2:return zu([e,t],0);case 3:return Fu([e,t],0);case 4:return Lu([e,t],0);default:throw new Vf(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function Ym(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new Vf(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return cl(e,t)}function Zm(e,t=0,n=1,r,s){return kc(e,t,n,r,s)}function eg(e,t,n,r){if(e.rank<2||t.rank<2)throw new jf(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3&&e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new jf(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`);if(2===e.rank&&2===t.rank)return Zp({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?rg(e.rank,r,"channelsLast"):null,activation:n});{const s=e.shape.slice(),a=s.pop();e=e.reshape([-1,a]);const o=t.shape.slice(),i=o.pop(),u=o.pop(),l=[...o,i],c=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=t.transpose(c).reshape([u,-1]);const p=[...s,...l];return Zp({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?rg(e.rank,r,"channelsLast"):null,activation:n}).reshape(p)}}function tg(e,t,n){return si((()=>(t=Array.isArray(t)?ap(t,"int32"):t.toInt(),dl(e,t,n))))}function ng(e){return xi(e,e)}function rg(e,t,n){const r=t.shape;if(1!==t.rank&&t.rank!==e)throw new Vf(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===r.length?t.reshape([1,r[0],1,1,1]):t.reshape([1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?t.reshape([1,1,1,1,r[0]]):t.reshape([1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?t.reshape([1,r[0],1,1]):t.reshape([1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?t.reshape([1,1,1,r[0]]):t.reshape([1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?t.reshape([1,r[0],1]):t.reshape([1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?t.reshape([1,1,r[0]]):t.reshape([1].concat(r))}else if(e<3)return t;throw new Vf(`Unsupported input rank by biasAdd: ${t.rank}`)}function sg(e,t,n){return si((()=>(null==n&&(n="channelsLast"),$m(n),e.add(rg(e.rank,t,n)))))}function ag(e,t,n,r){return si((()=>qp(e,t,n,r)))}function og(e,t,n=!1){return n?e():t()}const ig=["fanIn","fanOut","fanAvg"],ug=["normal","uniform","truncatedNormal"];class lg extends Do{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class cg extends lg{apply(e,t){return sc(e,t)}}cg.className="Zeros",zo(cg);class pg extends lg{apply(e,t){return ac(e,t)}}pg.className="Ones",zo(pg);class hg extends lg{constructor(e){if(super(),"object"!=typeof e)throw new Vf(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new Vf(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return si((()=>xi($i(this.value),ac(e,t))))}getConfig(){return{value:this.value}}}hg.className="Constant",zo(hg);class dg extends lg{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Nc(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}dg.className="RandomUniform",zo(dg);class fg extends lg{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new jf(`randomNormal does not support dType ${t}.`);return Zm(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}fg.className="RandomNormal",zo(fg);class mg extends lg{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new jf(`truncatedNormal does not support dType ${t}.`);return pp(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}mg.className="TruncatedNormal",zo(mg);class gg extends lg{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return si((()=>{if(2!==e.length||e[0]!==e[1])throw new Vf("Identity matrix initializer can only be used for 2D square matrices.");return xi(this.gain,pl(e[0]))}))}getConfig(){return{gain:this.gain}}}gg.className="Identity",zo(gg);class yg extends lg{constructor(e){if(super(),e.scale<0)throw new Vf(`scale must be a positive float. Got: ${e.scale}`);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,om(ig,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){om(ug,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,r;if($m(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=qm(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){const t=qm(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{const t=qm(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}(e),r=n[0],s=n[1];let a=this.scale;if("fanIn"===this.mode?a/=Math.max(1,r):"fanOut"===this.mode?a/=Math.max(1,s):a/=Math.max(1,(r+s)/2),"normal"===this.distribution){const n=Math.sqrt(a);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new jf(`${this.getClassName()} does not support dType ${t}.`);return pp(e,0,n,t,this.seed)}{const n=Math.sqrt(3*a);return Nc(e,-n,n,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}yg.className="VarianceScaling",zo(yg);class bg extends yg{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return yg.className}}bg.className="GlorotUniform",zo(bg);class wg extends yg{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return yg.className}}wg.className="GlorotNormal",zo(wg);class xg extends yg{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return yg.className}}xg.className="HeNormal",zo(xg);class Sg extends yg{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return yg.className}}Sg.className="HeUniform",zo(Sg);class vg extends yg{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return yg.className}}vg.className="LeCunNormal",zo(vg);class kg extends yg{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return yg.className}}kg.className="LeCunNormal",zo(kg);class Ng extends lg{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new jf("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return si((()=>{if(e.length<2)throw new jf("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const t=Zm(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32");let n=Lh.gramSchmidt(t);return e[0]>e[1]&&(n=n.transpose()),xi(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}Ng.className="Orthogonal",zo(Ng);const Ig={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Tg(e,t={}){return nm(e,Ro.getMap().classNameMap,t,"initializer")}function Cg(e){return em(e)}function Ag(e){if("string"==typeof e){const t=e in Ig?Ig[e]:e;if("GlorotNormal"===t)return new wg;if("GlorotUniform"===t)return new bg;if("HeNormal"===t)return new xg;if("HeUniform"===t)return new Sg;if("LeCunNormal"===t)return new vg;if("LeCunUniform"===t)return new kg;{const e={};return e.className=t,e.config={},Tg(e)}}return e instanceof lg?e:Tg(e)}function Eg(){return new cg}function Pg(){return new pg}function $g(e){return new hg(e)}function Mg(e){return new dg(e)}function Og(e){return new fg(e)}function _g(e){return new mg(e)}function Dg(e){return new gg(e)}function Rg(e){return new yg(e)}function zg(e){return new bg(e)}function Fg(e){return new wg(e)}function Lg(e){return new xg(e)}function qg(e){return new Sg(e)}function Bg(e){return new vg(e)}function Wg(e){return new kg(e)}function Vg(e){return new Ng(e)}let jg=0;function Ug(){return jg++}const Gg={};function Hg(e=""){return e in Gg||(Gg[e]=0),Gg[e]+=1,e+Gg[e].toString()}function Kg(e){return Array.isArray(e)&&Array.isArray(e[0])}function Qg(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function Xg(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new Vf(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function Jg(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return(e=e)[0];throw new Vf(`Expected exactly 1 Shape; got ${e.length}`)}return e}function Yg(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}class Zg{constructor(e,t="float32",n="Variable",r=!0,s=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=Ug(),n=null==n?"Variable":n,this.originalName=Rm(n),this.name=zm(this.originalName),this.trainable_=r,this.constraint=s,this.val=mp(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function ey(e){return e.map((e=>e.read()))}function ty(e){e.forEach((e=>{e[0].write(e[1])}))}class ny{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class ry{constructor(e,t,n,r,s,a,o){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=s,this.outputTensorIndex=o,this.id=Ug(),null!=a&&(this.originalName=Rm(a),this.name=zm(this.originalName)),this.rank=t.length}}let sy=0;class ay{constructor(e,t){this.callArgs=t,this.id=sy++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let oy=0;class iy extends Do{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=oy++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=Jf(e)+"_"+Hg(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new Wf(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new Vf(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Qf(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Qf(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Bf(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new Bf(`Layer ${this.name} is not connected, no input to return.`);return Qf(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new Bf(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Bf(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Qf(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=Xf(e),null==this.inputSpec||0===this.inputSpec.length)return;const t=Xf(this.inputSpec);if(e.length!==t.length)throw new Vf(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){const r=e[n],s=t[n];if(null==s)continue;const a=r.rank;if(null!=s.ndim&&a!==s.ndim)throw new Vf(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${a}`);if(null!=s.maxNDim&&a>s.maxNDim)throw new Vf(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${a}`);if(null!=s.minNDim&&a<s.minNDim)throw new Vf(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${a}.`);if(null!=s.dtype&&r.dtype!==s.dtype)throw new Vf(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${r.dtype}.`);if(s.axes){const e=r.shape;for(const t in s.axes){const r=Number(t),a=s.axes[t],o=r>=0?e[r]:e[e.length+r];if(null!=a&&-1===[a,null].indexOf(o))throw new Vf(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${a} but got shape ${e}.`)}}if(null!=s.shape)for(let e=0;e<s.shape.length;++e){const t=s.shape[e],a=r.shape[e];if(null!=t&&null!=a&&t!==a)throw new Vf(`Input ${n} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=Xf(e);let r=!0;for(const e of n)if(!(e instanceof ry)){r=!1;break}let s=!0;for(const e of n)if(e instanceof ry){s=!1;break}if(r===s)throw new Vf("Arguments to apply() must be all SymbolicTensors or all Tensors");return Dm(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of Xf(e))t.push(n.shape);this.build(Qf(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&s&&(this._refCount=1)}if(this.assertInputCompatibility(e),s){let r=this.call(e,t);const s=Xf(r),a=[];for(let e of s)-1!==n.indexOf(e)&&(e=e.clone()),a.push(e);if(r=Qf(a),null!=this.activityRegularizer)throw new jf("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(e){e=Xf(e);const t=[];for(const n of e)t.push(n.shape);return Qf(t)}(e),r=this.computeOutputShape(n);let s;const a="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),s=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new ry(a,n,this,Xf(e),t,this.name,r))):new ry(a,r,this,Xf(e),t,this.name),this.addInboundNode(e,s,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new jf("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new Bf(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new Bf(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Wf(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Yg(this.weights)}build(e){this.built=!0}getWeights(e=!1){return ey(e?this.trainableWeights:this.weights)}setWeights(e){si((()=>{const t=this.weights;if(t.length!==e.length)throw new Vf(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],r=ey(t);for(let s=0;s<r.length;++s){const a=r[s],o=t[s],i=e[s];if(!se(a.shape,i.shape))throw new Vf(`Layer weight shape ${a.shape} not compatible with provided weight shape ${i.shape}`);n.push([o,i])}ty(n)}))}addWeight(e,t,n,r,s,a,o){if(-1!==this._addedWeightNames.indexOf(e))throw new Vf(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=Ag("zeros"));const i=r.apply(t,n),u=new Zg(i,n,e,a,o);return i.dispose(),null!=s&&this.addLoss((()=>s.apply(u.read()))),null==a&&(a=!0),a?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=Xf(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}addInboundNode(e,t,n,r,s,a,o=null){const i=Xf(e);t=Xf(t),n=Xf(n),r=Xf(r),s=Qg(s),a=Qg(a);const u=[],l=[],c=[];for(const e of i)u.push(e.sourceLayer),l.push(e.nodeIndex),c.push(e.tensorIndex);new ay({outboundLayer:this,inboundLayers:u,nodeIndices:l,tensorIndices:c,inputTensors:i,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:s,outputShapes:a},o);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function uy(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const r=uy(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}class ly extends iy{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:Hg("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new Vf("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new Vf("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new Vf("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new ry(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new ay({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new Vf(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}function cy(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new Vf("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new ly({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}async function py(e){if(null==e)return;const t=[],n=[],r=[];for(const s in e){const a=e[s];if("number"!=typeof a){const e=a;t.push(e.data()),n.push(s),r.push(e)}}if(t.length>0){const s=await Promise.all(t);for(let t=0;t<s.length;++t)e[n[t]]=s[t][0];ai(r)}}function hy(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}var dy;ly.className="InputLayer",zo(ly),function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(dy||(dy={}));class fy{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class my{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class gy extends fy{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const e in t){const r=t[e];if("number"==typeof r)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+r*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;const s=si((()=>yi(this.totals[e],xi(r,n))));this.totals[e]=s,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:si((()=>{const n=xi(wi(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),oi(t[e])})))}}class yy extends fy{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){const e=[],t=[],n=[];for(const r in this.history){const s=this.history[r];for(let a=0;a<s.length;++a)if("number"!=typeof s[a]){const o=s[a];e.push(o.data()),t.push(r),n.push(a)}}const r=await Promise.all(e);for(let e=0;e<r.length;++e)this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=r[e][0]}}class by extends fy{constructor(e,t){if(super(),this.currentEpoch=0,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");Ne(this.yieldEvery)&&(this.maybeWait=function(e,t){let n,r=is();return(...s)=>{const a=is();return a-r<t||(r=a,n=e(...s)),n}}(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await py(n),r.push(this.yield(e,t,n))),r.push(jh()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await py(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await py(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(jh()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await py(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await py(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(jh()):Ne(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await py(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await py(e),await this.trainEnd(e))}}function wy(e,t){return null==e&&(e={}),e instanceof fy?[e]:Array.isArray(e)&&e[0]instanceof fy?e:Xf(e).map((e=>new by(e,t)))}class xy{constructor(){}static registerCallbackConstructor(e,t){Y(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),xy.checkForDuplicate(t),null==xy.constructors[e]&&(xy.constructors[e]=[]),xy.constructors[e].push(t)}static checkForDuplicate(e){for(const t in xy.constructors)xy.constructors[+t].forEach((t=>{if(t===e)throw new Vf("Duplicate callback constructor.")}))}static clear(){xy.constructors={}}static createCallbacks(e){const t=[];for(const n in xy.constructors){const r=+n;e>=r&&t.push(...xy.constructors[r])}return t.map((e=>new e))}}function Sy(e,t,n,r,s,a,o,i,u){const l=new yy,c=[new gy,...xy.createCallbacks(t)];null!=e&&c.push(...e),c.push(l);const p=new my(c);return p.setParams({epochs:n,initialEpoch:r,samples:s,steps:a,batchSize:o,verbose:t,doValidation:i,metrics:u}),{callbackList:p,history:l}}function vy(e,t={},n=!1){return nm(e,Ro.getMap().classNameMap,t,"layer",n)}function ky(e,t){return si((()=>{"float32"!==e.dtype&&(e=e.asType("float32"));const n=$l(ng(e),t,!0),r=_i(n.shape,qf()),s=Si(Vi(n,r));return wi(e,s)}))}function Ny(e,t){return si((()=>Ql(ng(zi(t,e)),-1)))}function Iy(e,t){return si((()=>Ql(Li(zi(t,e)),-1)))}function Ty(e,t){return si((()=>{const n=zi(e,t),r=Du(Li(e),qf(),Number.MAX_VALUE),s=Li(wi(n,r));return xi(100,Ql(s,-1))}))}function Cy(e,t,n=!1){return si((()=>{if(n)t=Hc(t);else{const e=$l(t,t.shape.length-1,!0);t=wi(t,e)}return t=Du(t,qf(),1-qf()),Cl($l(xi(e.toFloat(),Il(t)),t.shape.length-1))}))}function Ay(e,t,n=!1){return si((()=>{const r=hl(function(e){const t=[qm(e.shape)];return e.reshape(t)}(e)).toInt(),s=(t=Du(t,qf(),1-qf())).shape;return Cy(io(r,s[s.length-1]).reshape(s),t,n)}))}function Ey(e,t){return si((()=>{let n;return n=Du(t,qf(),1-qf()),n=Il(wi(n,zi(1,n))),Ql(function(e,t){if(!se(e.shape,t.shape))throw new Vf(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return si((()=>{const n=t.relu(),r=t.abs().neg();return n.sub(t.mul(e)).add(r.exp().log1p())}))}(e,n),-1)}))}function Py(e,t){return si((()=>{const n=ky(e,-1),r=ky(t,-1),s=xi(n,r);return Cl($l(s,-1))}))}xy.constructors={};const $y={meanSquaredError:Ny,meanAbsoluteError:Iy,meanAbsolutePercentageError:Ty,meanSquaredLogarithmicError:function(e,t){return si((()=>{const n=Du(t,qf(),Number.MAX_VALUE),r=Il(yi(1,n)),s=Du(e,qf(),Number.MAX_VALUE),a=Il(yi(1,s));return Ql(ng(zi(r,a)),-1)}))},squaredHinge:function(e,t){return si((()=>{const n=Vi(0,zi(1,xi(e,t)));return Ql(ng(n),-1)}))},hinge:function(e,t){return si((()=>{const n=Vi(0,zi(1,xi(e,t)));return Ql(n,-1)}))},categoricalHinge:function(e,t){return si((()=>{const n=$l(xi(e,t),-1),r=Pl(xi(zi(1,e),t),-1);return Vi(0,yi(1,zi(r,n)))}))},logcosh:function(e,t){return si((()=>{const n=Math.log(2),r=zi(t,e),s=zi(yi(r,Al(xi(-2,r))),n);return Ql(s,-1)}))},categoricalCrossentropy:Cy,sparseCategoricalCrossentropy:Ay,binaryCrossentropy:Ey,kullbackLeiblerDivergence:function(e,t){return si((()=>{const n=Du(e,qf(),1),r=Du(t,qf(),1);return $l(xi(e,Il(wi(n,r))),-1)}))},poisson:function(e,t){return si((()=>{const n=Il(yi(qf(),t));return Ql(zi(t,xi(e,n)),-1)}))},cosineProximity:Py};function My(e){if("string"==typeof e){if(e in $y)return $y[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new Vf(t)}return e}function Oy(e,t){return si((()=>{const n=xi(.5,oc(t)),r=Um(fl(t,n),e.dtype);return Ql(tl(e,r),-1)}))}function _y(e,t){return si((()=>Um(tl(Zi(e,-1),Zi(t,-1)),"float32")))}function Dy(e,t){return si((()=>Wl(e.equal(1),t.equal(1)).sum().cast("float32")))}function Ry(e,t){return si((()=>{const n=Dy(e,t),r=function(e,t){return si((()=>Wl(e.equal(0),t.equal(1)).sum().cast("float32")))}(e,t),s=n.add(r);return nl(fl(s,0),n.div(s),0).cast("float32")}))}function zy(e,t){return Ey(e,t)}function Fy(e,t){return e.rank===t.rank&&(e=e.squeeze([e.rank-1])),(t=t.argMax(-1)).dtype!==e.dtype&&(t=t.asType(e.dtype)),tl(e,t).asType("float32")}const Ly=Cy,qy=Ay,By={binaryAccuracy:Oy,categoricalAccuracy:_y,precision:Ry,categoricalCrossentropy:Ly,sparseCategoricalCrossentropy:qy,mse:Ny,MSE:Ny,mae:Iy,MAE:Iy,mape:Ty,MAPE:Ty,cosine:Py};function Wy(e){if("string"==typeof e&&e in By)return By[e];if("string"!=typeof e&&null!=e)return e;throw new Vf(`Unknown metric ${e}`)}function Vy(e){if(Hf(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys($y))if($y[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(By))if(By[n]===e){t=n;break}return void 0!==t?t:e.name}}function jy(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!Uy(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function Uy(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!Uy(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!Uy(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function Gy(e,t,n=console.log){let r="";for(let n=0;n<e.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=e[n],r=r.slice(0,t[n]),r+=" ".repeat(t[n]-r.length);n(r)}function Hy(e,t,n){let r;try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}Gy([`${e.name} (${e.getClassName()})`,r,e.countParams().toString()],t,n)}function Ky(e,t,n,r){let s;try{s=JSON.stringify(e.outputShape)}catch(e){s="multiple"}const a=[];for(const t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){const n=t.inboundLayers[e].name,r=t.nodeIndices[e],s=t.tensorIndices[e];a.push(`${n}[${r}][${s}]`)}const o=e.name,i=e.getClassName(),u=0===a.length?"":a[0];Gy([`${o} (${i})`,s,e.countParams().toString(),u],t,r);for(let e=1;e<a.length;++e)Gy(["","","",a[e]],t,r)}function Qy(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function Xy(e,t){if(null===e)return null;if("string"==typeof e)return Yf(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let s=0;s<r;++s){const r=e[s];Qy(t,s,r)?n.push(r):n.push(Xy(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{const e=Yf(n);t[e]=Xy(r,e)}}return t}}function Jy(e,t){if(null==e)return null;if("string"==typeof e)return Jf(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let s=0;s<r;++s){const r=e[s];Qy(t,s,r)?n.push(r):n.push(Jy(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];t[Jf(n)]="name"!==n&&"className"!==n||"string"!=typeof r?Jy(r,n):r}return t}}const Yy="2.8.6";class Zy{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Zy)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new Vf(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return qa(t,e.dtype)}catch(n){throw new Vf(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof ry){if(null==this.id2Value[e.id])throw new Vf(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new Vf(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof ry){if(null==this.id2Value[e.id])throw new Vf(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new Vf(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&ai(this.id2Mask)}}const eb={},tb={};function nb(e,t,n,r){const s=null!=n&&n.training,a=Array.isArray(e),o=a?e:[e],i=o.map((e=>e.name)),u=[],l=t.names();for(const e of i)-1!==l.indexOf(e)?u.push(t.getValue(e)):u.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const c=i.join(",")+"|"+t.names().join(",");let p,h;if(null==eb[c]){const e=function(e,t){Y(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===e.length){const s=sb(e[0],t);n=s.sorted,r=s.recipientMap}else{const s=new Set;for(const a of e){const{sorted:e,recipientMap:o}=sb(a,t);for(const t of e)s.has(t.name)||(n.push(t),s.add(t.name));for(const e in o)null==r[e]&&(r[e]=new Set),o[e].forEach((t=>r[e].add(t)))}}return{sorted:n,recipientCounts:rb(r)}}(o,t);p=e.sorted,h=e.recipientCounts,eb[c]=p,tb[c]=h}p=eb[c],h={},s||Object.assign(h,tb[c]);const d=new Zy(t);for(let e=0;e<p.length;++e){if(null!=r){const e=ni().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}const a=p[e],o=a.sourceLayer;if(o instanceof ly)continue;const l=[],c=[],f=[];let m=!1;for(const e of a.inputs){const n=d.getValue(e),r=d.getMask(e);l.push(n),c.push(r),null!=r&&(m=!0),s||(h[e.name]--,0!==h[e.name]||t.hasKey(e)||-1!==i.indexOf(e.name)||n.isDisposed||!0===e.sourceLayer.stateful||f.push(n))}m&&((n=n||{}).mask=c[0]);const g=Xf(o.apply(l,n));let y=null;o.supportsMasking&&(y=o.computeMask(l,c));const b=ab(a),w=Array.isArray(b)?b:[b];for(let e=0;e<w.length;++e){d.hasKey(w[e])||d.add(w[e],g[e],Array.isArray(y)?y[0]:y);const t=i.indexOf(w[e].name);-1!==t&&(u[t]=g[e])}s||ai(f)}return d.disposeMasks(),a?u:u[0]}function rb(e){const t={};for(const n in e)t[n]=e[n].size;return t}function sb(e,t){const n=new Set,r=[],s={};for(const e of t.names())n.add(e);const a=[],o=[];for(a.push(e);a.length>0;){const e=a[a.length-1];if(n.has(e.name)){a.pop();continue}const t=o[o.length-1]===a.length-1;if(0===e.inputs.length||t)a.pop(),r.push(e),n.add(e.name),t&&o.pop();else{o.push(a.length-1);for(const t of e.inputs)null==s[t.name]&&(s[t.name]=new Set),s[t.name].add(e.name),n.has(t.name)||a.push(t)}}return{sorted:r,recipientMap:s}}function ab(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}class ob extends iy{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=Hg(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],sm(this.inputs).length!==this.inputs.length)throw new Vf(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);sm(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const e of this.outputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(const e of this.inputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;Hf(0===n,"input layer has >1 nodes"),Hf(0===r,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t];if(!(n instanceof ly))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},r={},s={},a={},o=[],i=(e,t,n,r,s,u)=>{null!=r&&null!=s&&null!=u||(r=e.sourceLayer,s=e.nodeIndex,u=e.tensorIndex);const l=r.inboundNodes[s];if(-1!==n.indexOf(l))throw new Wf(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(l))return;this.containerNodes.add(ob.nodeKey(r,s)),r.id in a||(a[r.id]=Object.keys(a).length),-1===n.indexOf(l)&&n.push(l);const c=l.inboundLayers.length;for(let e=0;e<c;e++){const r=l.inputTensors[e],s=l.inboundLayers[e],a=l.nodeIndices[e],o=l.tensorIndices[e];i(r,t,n,s,a,o)}for(t.push(l);n.indexOf(l)>=0;)n.splice(n.indexOf(l),1);o.push(l)},u=[],l=[];for(const e of this.outputs)i(e,u,l);const c=o.slice().reverse();for(const e of c){n[e.id]=e,e.id in t||(t[e.id]=0);let a=t[e.id];const o=null==r[e.outboundLayer.id]?0:r[e.outboundLayer.id];a=Math.max(a,o),r[e.outboundLayer.id]=a,s[e.outboundLayer.id]=e.outboundLayer,t[e.id]=a;for(let r=0;r<e.inboundLayers.length;r++){const s=e.inboundLayers[r],o=e.nodeIndices[r],i=s.inboundNodes[o],u=null==t[i.id]?0:t[i.id];t[i.id]=Math.max(a+1,u),n[i.id]=i}}const p={};for(const e in t){const r=t[e];r in p||(p[r]=[]),p[r].push(n[e])}const h={};for(const e in r){const t=r[e];t in h||(h[t]=[]),h[t].push(s[e])}let d=Object.keys(h).map((e=>parseInt(e,10))).sort(rm);this.layers=[];for(const e of d){const t=h[e];t.sort(((e,t)=>{const n=a[e.id],r=a[t.id];return n<r?-1:n>r?1:0}));for(const e of t)e instanceof ob&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=h,d=Object.keys(p).map((e=>parseInt(e,10))).sort(rm);const f=this.inputs.slice(),m=[];for(const e of d)for(const t of p[e]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new Wf(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${m}`);for(const e of t.outputTensors)f.push(e);m.push(e.name)}}this.nodesByDepth=p;const g=this.layers.map((e=>e.name));for(const e of g){const t=g.filter((t=>t===e)).length;if(1!==t)throw new Wf(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new ay({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new Vf("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let r=0;for(const e of this.layers)for(const t of e.weights){if(null!=n[t.originalName])throw new Vf(`Duplicate weight name: ${t.originalName}`);n[t.originalName]=t,r++}const s=[];for(const r in e){let a=r;if(null==n[r]){const e=r.split("/");a=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[a])s.push([n[a],e[r]]);else if(t)throw new Vf(`Provided weight data has no target variable: ${r}`);delete n[a]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new Vf(`${e.length} of ${r} weights are not set: ${e}`)}ty(s)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${Yy}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=Jy(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return si((()=>{e=Xf(e);const n=new Zy;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return nb(this.outputs,n,t)}))}computeMask(e,t){return si((()=>{let n;return e=Xf(e),n=null==t?Gf(null,e.length):Xf(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=Qg(e);if(t.length!==this.inputLayers.length)throw new Vf(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let e=0;e<t.length;e++){const r=this.inputLayers[e],s=t[e];n[r.name+"_0_0"]=s}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(rm);if(r.length>1)for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;const r=[];for(let t=0;t<e.inboundLayers.length;t++){const s=e.inboundLayers[t],a=e.nodeIndices[t],o=e.tensorIndices[t],i=n[`${s.name}_${a}_${o}`];r.push(i)}const s=Qg(t.computeOutputShape(Qf(r))),a=t.inboundNodes.indexOf(e);for(let e=0;e<s.length;e++)n[`${t.name}_${a}_${e}`]=s[e]}}const s=[],a=[];for(let e=0;e<this.outputLayers.length;e++){const t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],r=this.outputLayersTensorIndices[e],s=`${t.name}_${n}_${r}`;a.push(s)}for(let e=0;e<a.length;e++){const t=a[e];Hf(t in n),s.push(n[t])}return Qf(s)}runInternalGraph(e,t){null==t&&(t=Gf(null,e.length));const n={};for(let r=0;r<this.inputs.length;++r){const s=this.inputs[r],a=e[r],o=t[r];n[s.id]=[a,o]}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(rm);for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer,r=e.inputTensors,s=e.outputTensors,a=new Array;for(const e of r)e.id in n&&a.push(n[e.id]);if(a.length===r.length){let r,o,i,u,l={};if(null!=e.callArgs&&(l=e.callArgs),1===a.length){const[e,n]=a[0];null==l.mask&&(l.mask=n),i=Xf(t.call(e,l)),u=Xf(t.computeMask(e,n)),r=[e],o=[n]}else r=a.map((e=>e[0])),o=a.map((e=>e[1])),null==l.mask&&(l.mask=o),i=Xf(t.call(r,l)),u=Xf(t.computeMask(r,o));if(t.activityRegularizer)throw new jf("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<s.length;++e){const t=s[e],r=i[e],a=u[e];n[t.id]=[r,a]}}}}const s=[],a=[],o=[];for(const e of this.outputs){Hf(e.id in n,`Could not compute output ${e.name} : ${e.id}`);const[t,r]=n[e.id];o.push(t.shape),s.push(t),a.push(r)}return[s,a,o]}buildNodeConversionMap(e){const t={};let n;for(const e of this.layers){n=e instanceof ob?1:0;for(let r=0;r<e.inboundNodes.length;r++){const s=ob.nodeKey(e,r);this.containerNodes.has(s)&&(t[s]=n,n+=1)}}return t}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new Vf(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new Vf("Provide either a layer name or layer index");for(const t of this.layers)if(t.name===e)return t;throw new Vf(`No such layer: ${e}`)}calculateLosses(){return si((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const r=ob.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const e of this.layers){const r=e.getClassName(),s=e.getConfig(),a=[];for(let n=0;n<e.inboundNodes.length;n++){const r=e.inboundNodes[n],s=ob.nodeKey(e,n);let o={};if(this.containerNodes.has(s)){if(r.callArgs)try{JSON.stringify(r.callArgs),o=r.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${r.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),o={}}if(r.inboundLayers.length>0){const e=[];for(let n=0;n<r.inboundLayers.length;n++){const s=r.inboundLayers[n],a=r.nodeIndices[n],i=r.tensorIndices[n];let u=t[ob.nodeKey(s,a)];null==u&&(u=0),e.push([s.name,u,i,o])}a.push(e)}}}const o={};o.name=e.name,o.className=r,o.config=s,o.inboundNodes=a,n.push(o)}e.layers=n;const r=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e],s=this.inputLayersNodeIndices[e],a=ob.nodeKey(n,s);if(!this.containerNodes.has(a))continue;let o=t[a];null==o&&(o=0);const i=this.inputLayersTensorIndices[e];r.push([n.name,o,i])}e.inputLayers=r;const s=[];for(let e=0;e<this.outputLayers.length;e++){const n=this.outputLayers[e],r=this.outputLayersNodeIndices[e],a=ob.nodeKey(n,r);if(!this.containerNodes.has(a))continue;let o=t[a];null==o&&(o=0);const i=this.outputLayersTensorIndices[e];s.push([n.name,o,i])}return e.outputLayers=s,e}static fromConfig(e,t,n={},r=!1){const s={},a={};function o(e,t){e.name in a?a[e.name].push(t):a[e.name]=[t]}function i(e,t){const n=[];let r;for(const a of t){const i=a[0],u=a[1],l=a[2];if(r=null==a[3]?{}:a[3],!(i in s))return void o(e,t);const c=s[i];if(c.inboundNodes.length<=u)return void o(e,t);const p=c.inboundNodes[u];n.push(p.outputTensors[l])}n.length>0&&e.apply(Qf(n),r)}function u(e){const n=e.name,a=vy(e,null!=t.customObjects?t.customObjects:{});a.setFastWeightInitDuringBuild(r),s[n]=a,e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new Vf(`Corrupted configuration, expected array for nodeData: ${e}`);o(a,e)}))}const l=t.name,c=t.layers;for(const e of c)u(e);for(;!am(a);)for(const e of c){const t=s[e.name];if(t.name in a){const e=a[t.name];delete a[t.name];for(const n of e)i(t,n)}}const p=[],h=[],d=t.inputLayers;for(const e of d){const t=e[0],n=e[1],r=e[2];Hf(t in s);const a=s[t].inboundNodes[n].outputTensors;p.push(a[r])}const f=t.outputLayers;for(const e of f){const t=e[0],n=e[1],r=e[2];Hf(t in s);const a=s[t].inboundNodes[n].outputTensors;h.push(a[r])}return new e({inputs:p,outputs:h,name:l})}get stateful(){if(this._stateful)throw new Vf("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){si((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function ib(e,t){return function(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function ub(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=si((()=>{if(1===e.shape.length)return e.clone();if(2===e.shape.length){if(e.shape[1]>1){const t=1;return e.argMax(t)}if(1===e.shape[1])return e.reshape([e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await t.data());ai(t);const s=[];return r.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);s.push(n[e])})),ap(s,"float32")}return null}function lb(e,t){return xi(e,t)}function cb(e,t){let n,r;const s=t;n=s.xs,r=s.ys,Y(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const a=pb("input",e.inputNames,n),o=pb("output",e.outputNames,r),i=a[0].shape[0];Y(a.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),Y(o.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${o.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let t=0;t<a.length;t++)Y(a[t].shape[0]===i,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${a[t].shape[0]}; expected  ${i} based on input ${e.inputNames[0]}.`));for(let t=0;t<o.length;t++)Y(o[t].shape[0]===i,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${o[t].shape[0]}; expected  ${i} based on input ${e.inputNames[0]}.`));return{xs:a,ys:o}}function pb(e,t,n){if(n instanceof ms)return[n];if(Array.isArray(n))return Y(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const r=[];for(const s of t){if(null==n[s])throw new Vf(`The feature data generated by the dataset lacks the required ${e} key '${s}'.`);r.push(n[s])}return r}}function hb(e){return"function"==typeof e.iterator}function db(e){Y(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function fb(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>Hm(e,t,n-t))):Hm(e,t,n-t)}function mb(e,t){return si((()=>null==e?null:Array.isArray(e)?e.map((e=>mb(e,t))):tg(e,"int32"===t.dtype?t:t.toInt())))}function gb(e,t){const n=[];let r=0,s=null;for(;r<e;)s=r+t,s>=e&&(s=e),n.push([r,s]),r=s;return n}function yb(e){const t=[];e instanceof ms&&(e=[e]);for(let n=0;n<e.length;++n){const r=e[n];if(1===r.rank)t.push(Gm(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function bb(e,t){if(null==e)return;const n=[];if(t instanceof ms)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const e in t){const r=t[e];n.push(r.id)}const r=[];if(e instanceof ms)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&r.push(e)}));else if(null!=e)for(const t in e){const s=e[t];-1===n.indexOf(s.id)&&r.push(s)}r.forEach((e=>{e.isDisposed||e.dispose()}))}function wb(e){return Array.isArray(e)}function xb(e){return!function(e){return e instanceof ms}(e)&&!wb(e)}function Sb(e,t,n,r=!0,s=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(wb(e)&&e.length>0)t=!0;else if(xb(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new Vf(`Error when checking model ${s} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let a;if(xb(e)){e=e,a=[];for(const n of t){if(null==e[n])throw new Vf(`No data provided for "${n}". Need data for each key in: ${t}`);a.push(e[n])}}else if(wb(e)){if((e=e).length!==t.length)throw new Vf(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);a=e}else{if(e=e,t.length>1)throw new Vf(`The model ${s} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);a=[e]}if(a=yb(a),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const o=a[e];if(o.shape.length!==n[e].length)throw new Vf(`Error when checking ${s}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${o.shape}`);for(let a=0;a<n[e].length;++a){if(0===a&&!r)continue;const i=o.shape[a],u=n[e][a];if(null!=u&&u>=0&&i!==u)throw new Vf(`Error when checking ${s}: expected ${t[e]} to have shape [${n[e]}], but got array with shape [${o.shape}].`)}}return a}function vb(e,t,n,r=!0,s=""){let a;if(Array.isArray(e)){if(e.length!==t.length)throw new Vf(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);a=e}else{if(t.length>1)throw new Vf(`The model expects ${t.length} ${s} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);a=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const o=a[e];if(o.shape.length!==n[e].length)throw new Vf(`Error when checking ${s}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(o.shape)}`);for(let a=0;a<n[e].length;++a){if(0===a&&!r)continue;const i=o.shape[a],u=n[e][a];if(null!=u&&u!==i)throw new Vf(`Error when checking ${s}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(o.shape)}.`)}}}class kb extends ob{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new Vf("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(e,t,n,r=console.log){const s=function(e){let t=!0;const n=[],r=[];for(const t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(const e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}r.push(...e)}if(t)for(const n of e.layers){let e=!1;for(const s of n.inboundNodes)if(-1!==r.indexOf(s)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),a=["Layer (type)","Output shape","Param #"];let o;if(s?(t=t||65,n=n||[.45,.85,1]):(t=t||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!s){a.push("Receives inputs"),o=[];for(const t in e.nodesByDepth)o.push(...e.nodesByDepth[t])}r("_".repeat(t)),Gy(a,n,r),r("=".repeat(t));const i=e.layers;for(let e=0;e<i.length;++e)s?Hy(i[e],n,r):Ky(i[e],n,o,r),r((e===i.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const u=function(e){let t;return t=null!=e.collectedTrainableWeights?Yg(e.collectedTrainableWeights):Yg(e.trainableWeights),t}(e),l=Yg(e.nonTrainableWeights);r(`Total params: ${u+l}`),r(`Trainable params: ${u}`),r(`Non-trainable params: ${l}`),r("_".repeat(t))}(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>Wh.adagrad(.01),Adadelta:()=>Wh.adadelta(1,.95,qf()),Adam:()=>Wh.adam(.001,.9,.999,qf()),Adamax:()=>Wh.adamax(.002,.9,.999,qf(),0),RMSProp:()=>Wh.rmsprop(.001,.9,0,qf()),SGD:()=>Wh.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new Vf(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Mi))throw new Vf("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new Vf(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>My(e)))}else{const n=My(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new Vf(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(My(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){const t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Dm("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),s=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};Dm("metric",(()=>{for(let e=0;e<this.outputs.length;++e)-1===n.indexOf(e)&&(t=>{let n,r,a;for(const o of t){if("string"==typeof o&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(o)){const t=this.internalOutputShapes[e];let s;1===t[t.length-1]||this.lossFunctions[e]===Ey?-1!==["accuracy","acc"].indexOf(o)?r=Oy:-1!==["crossentropy","ce"].indexOf(o)&&(r=zy):this.lossFunctions[e]===Ay?-1!==["accuracy","acc"].indexOf(o)?r=Fy:-1!==["crossentropy","ce"].indexOf(o)&&(r=qy):-1!==["accuracy","acc"].indexOf(o)?r=_y:-1!==["crossentropy","ce"].indexOf(o)&&(r=Ly),-1!==["accuracy","acc"].indexOf(o)?s="acc":-1!==["crossentropy","ce"].indexOf(o)&&(s="ce"),a=r,n=""+s}else{const e=Wy(o);a=e,n=""+Vy(o)}let t;Dm(n,(()=>{t=a})),s(e,n,t)}})(r[e])})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const r=null==n.batchSize?32:n.batchSize;db(r);const s=this.standardizeUserDataXY(e,t,!0,r);try{const a=s[0].concat(s[1]);this.makeTestFunction();const o=this.testFunction;return Qf(this.testLoop(o,a,r,n.verbose,n.steps))}finally{bb(s[0],e),bb(s[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const r=null!=(n=n||{}).batches,s=e.testFunction;let a=[];if(n.verbose>0)throw new jf("Verbose mode is not implemented yet.");Y(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const o="function"==typeof t.next?t:await t.iterator();let i=0,u=0;for(;!r||u<n.batches;){const t=await o.next();if(a=si((()=>{if(t.value){const{xs:n,ys:r}=cb(e,t.value),o=n.concat(r),l=si((()=>s(o)));if(ai(o),0===u)for(let e=0;e<l.length;++e)a.push($i(0));const c=o[0].shape[0];for(let e=0;e<l.length;++e){const t=l[e],n=a[e];a[e]=si((()=>yi(a[e],xi(c,t)))),u>0&&ai(n)}ai(l),i+=c,++u}return a})),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<a.length;++e){const t=a[e];a[e]=wi(a[e],i),ai(t)}return Qf(a)}(this,e,t)}checkNumSamples(e,t,n,r="steps"){let s;if(null!=n){if(s=null,null!=t)throw new Vf(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new Vf(`Either the input data should have a defined shape, or ${r} shoud be specified.`);s=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return s}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new Vf("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),r=n?t:[t],s=this.retrieveSymbolicTensors(r),a=new Zy;if(e instanceof ms&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new Vf(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)a.add(this.inputs[t],e[t])}else for(const t of this.inputs){const n=e[t.name];if(null==n)throw new Vf(`No value is provided for the model's input ${t.name}`);a.add(t,n)}const o=nb(s,a);return n?o:o[0]}retrieveSymbolicTensors(e){const t=Gf(null,e.length);let n=e.length;for(const r of this.layers){const s=Array.isArray(r.output)?r.output:[r.output],a=s.map((e=>e.name));for(let r=0;r<e.length;++r){const o=a.indexOf(e[r]);if(-1!==o&&(t[r]=s[o],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,r)=>{null==t&&n.push(e[r])})),new Vf(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return si((()=>{const r=this.checkNumSamples(e);if(n)throw new jf("Verbose predictLoop() is not implemented yet.");const s=gb(r,t),a=this.outputs.map((e=>[]));for(let t=0;t<s.length;++t)si((()=>{const n=s[t][0],r=s[t][1],a=fb(e,n,r),o=[];if(Array.isArray(a))for(let e=0;e<a.length;++e)o.push({key:this.inputs[e],value:a[e]});else o.push({key:this.inputs[0],value:a});const i=new Zy(o);return nb(this.outputs,i)})).forEach(((e,t)=>a[t].push(e)));return Qf(a.map((e=>vu(e,0))))}))}predict(e,t={}){const n=yb(e);vb(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==t.batchSize?32:t.batchSize;return db(r),this.predictLoop(n,r)}finally{bb(n,e)}}predictOnBatch(e){vb(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(null==this.optimizer_)throw new Wf("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const s=[];for(let e=0;e<this.feedOutputShapes.length;++e){const t=this.feedOutputShapes[e];this.feedLossFns[e]===Ay?s.push(t.slice(0,t.length-1).concat([1])):s.push(t)}if(function(e,t,n){const r=sm(e.map((e=>e.shape[0])));r.sort();const s=sm(t.map((e=>e.shape[0])));if(s.sort(),r.length>1)throw new Vf(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(s.length>1)throw new Vf(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(r.length>0&&s.length>0&&!se(r,s))throw new Vf(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${s[0]} target sample(s).`)}(e=Sb(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=Sb(t,this.feedOutputNames,s,!1,"target")),function(e,t,n){const r=[Ny,Ey,Cy];for(let s=0;s<e.length;++s){const a=e[s],o=t[s],i=n[s];if(null!=o){if(o===Cy&&1===a.shape[a.shape.length-1])throw new Vf(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(o)){const e=a.shape.slice(1),t=i.slice(1);for(let n=0;n<e.length;++n){const r=e[n],s=t[n];if(null!=s&&r!==s)throw new Vf(`A target Tensor with shape ${a.shape} was passed for an output of shape ${i}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&e[0].shape[0]%r!=0)throw new Vf(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,s=!0,a){const[o,i]=this.standardizeUserDataXY(e,t,s,a);if(null!=n)throw new Error("sample weight is not supported yet.");let u=null;if(null!=r){const e=ib(r,this.outputNames);u=[];for(let t=0;t<e.length;++t)u.push(await ub(i[t],null,e[t]))}return[o,i,u]}testLoop(e,t,n,r=0,s){return si((()=>{const a=this.checkNumSamples(t,n,s,"steps"),o=[];if(r>0)throw new jf("Verbose mode is not implemented yet.");if(null!=s)throw new jf("steps mode in testLoop() is not implemented yet");{const r=gb(a,n),s=ap(jm(0,a));for(let n=0;n<r.length;++n){const a=r[n][0],i=r[n][1],u=Hm(s,a,i-a),l=mb(t,u),c=e(l);if(0===n)for(let e=0;e<c.length;++e)o.push($i(0));for(let e=0;e<c.length;++e){const t=c[e];o[e]=yi(o[e],xi(i-a,t))}}for(let e=0;e<o.length;++e)o[e]=wi(o[e],a)}return o}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const r=e[n];let s=r;Kf(e,r)>1&&(s+=`_${Kf(e.slice(0,n),r)}`),t.push(s)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),a=[],o=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const o=new Zy(e),i=nb(this.outputs,o,{training:!0});let u;for(let e=0;e<this.lossFunctions.length;++e){let n=(0,this.lossFunctions[e])(r[e],i[e]);null!=s[e]&&(n=lb(n,s[e]));const a=Ql(n);t.push(a),u=0===e?n:yi(u,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{const t=this.metricsTensors[e][0],s=this.metricsTensors[e][1];n=Ql(t(r[s],i[s]))}oi(n),a.push(n)}return u=Ql(u),this.calculateLosses().forEach((e=>{u=yi(u,e)})),u}),!0,o)].concat(a)}}makeTestFunction(){this.testFunction=e=>si((()=>{const t=[];let n;const r=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let e=0;e<this.inputs.length;++e)a.push({key:this.inputs[e],value:r[e]});const o=new Zy(a),i=nb(this.outputs,o);for(let e=0;e<this.lossFunctions.length;++e){const r=this.lossFunctions[e],a=Ql(r(s[e],i[e]));n=0===e?a:yi(n,a),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],r=this.metricsTensors[e][1],a=Ql(n(s[r],i[r]));t.push(a)}return t}))}async fit(e,t,n={}){return async function(e,t,n,r={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let s,a,o,i,u,l,c;e.isTraining=!0;try{const p=null==r.batchSize?32:r.batchSize;db(p);const h=!1,d=await e.standardizeUserData(t,n,r.sampleWeight,r.classWeight,h,p);s=d[0],a=d[1],c=d[2];let f,m=!1;if(null!=r.validationData&&r.validationData.length>0){if(m=!0,2!==r.validationData.length)throw 3===r.validationData.length?new jf("validationData including sample weights is not supported yet."):new Vf(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);o=r.validationData[0],i=r.validationData[1];const t=!0,n=await e.standardizeUserData(o,i,null,null,t,p);u=n[0],l=n[1],f=u.concat(l)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){m=!0;const e=Math.floor(s[0].shape[0]*(1-r.validationSplit)),t=s[0].shape[0];u=fb(s,e,t),s=fb(s,0,e),l=fb(a,e,t),a=fb(a,0,e),f=u.concat(l)}else null!=r.validationSteps&&(m=!0);const g=s.concat(a).concat(c);e.checkTrainableWeightsConsistency();const y=e.makeTrainFunction(),b=e.getDedupedMetricsNames();let w,x;m?(e.makeTestFunction(),w=e.testFunction,x=b.slice().concat(b.map((e=>"val_"+e)))):(w=null,f=[],x=b.slice());const S=wy(r.callbacks,r.yieldEvery);return await async function(e,t,n,r,s,a,o,i,u,l,c,p,h,d,f){null==s&&(s=32),null==a&&(a=1),null==c&&(c=!0),null==h&&(h=0);let m=!1;null!=u&&null!=l&&(m=!0);const g=e.checkNumSamples(n,s,d,"steps_per_epoch");let y;null!=g&&(y=jm(0,g)),null==o&&(o=1);const{callbackList:b,history:w}=Sy(i,o,a,h,g,d,s,m,p);b.setModel(e),e.history=w,await b.onTrainBegin(),e.stopTraining_=!1;for(let o=h;o<a;++o){await b.onEpochBegin(o);const a={};{if("batch"===c)throw new jf("batch shuffling is not implemneted yet");c&&G(y);const o=ap(y),i=gb(g,s);for(let c=0;c<i.length;++c){const p={};if(await b.onBatchBegin(c,p),si((()=>{const h=i[c][0],d=i[c][1],f=Hm(o,h,d-h);p.batch=c,p.size=d-h;const g=mb(n,f),y=t(g);for(let e=0;e<r.length;++e){const t=r[e],n=y[e];p[t]=n,oi(n)}if(c===i.length-1&&m){const t=e.testLoop(u,l,s);for(let e=0;e<r.length;++e){const n=r[e],s=t[e];oi(s),a["val_"+n]=s}}})),await b.onBatchEnd(c,p),hy(p),e.stopTraining_)break}o.dispose()}if(await b.onEpochEnd(o,a),e.stopTraining_)break}return await b.onTrainEnd(),await e.history.syncData(),e.history}(e,y,g,b,p,r.epochs,r.verbose,S,w,f,r.shuffle,x,r.initialEpoch,null)}finally{e.isTraining=!1,bb(s,t),bb(a,n),bb(u,o),bb(l,i),null!=c&&ai(c)}}(this,e,t,n)}async fitDataset(e,t){return async function(e,t,n){const r=null!=n.batchesPerEpoch;if(Y(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),Y(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),Y(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),Y(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),Y(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const s=null!=n.validationData;let a,o;if(s)if(hb(n.validationData))Y(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(e){if(3===e.length)throw new jf("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);a=e.xs,o=e.ys}const i=e.makeTrainFunction(),u=e.getDedupedMetricsNames();let l;l=s?u.slice().concat(u.map((e=>"val_"+e))):u.slice();const c=wy(n.callbacks,n.yieldEvery),p=null==n.verbose?1:n.verbose,{callbackList:h,history:d}=Sy(c,p,n.epochs,null,null,function(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,s,l);h.setModel(e),e.history=d,await h.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){const l={};await h.onEpochBegin(f);let c=0,p=0;for(r||(m=await t.iterator());!r||c<n.batchesPerEpoch;){const t=await m.next();if(r&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:r,ys:s}=cb(e,t.value),a={};a.batch=p,a.size=r[0].shape[0],await h.onBatchBegin(p,a);const o=[];if(null!=n.classWeight){const t=ib(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)o.push(await ub(s[e],null,t[e]))}const l=r.concat(s).concat(o),d=i(l);ai(l);for(let e=0;e<u.length;++e){const t=u[e],n=d[e];a[t]=n,oi(n)}await h.onBatchEnd(p,a),hy(a),p++,c++}if(r?c>=n.batchesPerEpoch:t.done){if(s){let t;t=hb(n.validationData)?Xf(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):Xf(e.evaluate(a,o,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)l[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await h.onEpochEnd(f,l),f++,e.stopTraining_)break}return await h.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),r=n[0],s=n[1],a=this.makeTrainFunction()(r.concat(s)),o=[];for(const e of a){const t=await e.data();o.push(t[0])}return ai(a),Qf(o)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let e=0;e<r.length;++e)n&&!r[e].trainable||t.push({name:r[e].originalName,tensor:s[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=ni().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-ni().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=Jf(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>Jf(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=Jf(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[Jf(Vy(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>Jf(Vy(e))));{const e={};for(const t in this.metrics)e[t]=Jf(Vy(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=vy(Xy(e.optimizer_config));let n,r;if("string"==typeof e.loss)n=Yf(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>Yf(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=Yf(e.loss[t])}if(Array.isArray(e.metrics))r=e.metrics.map((e=>Yf(e)));else if(null!=e.metrics){r={};for(const t in e.metrics)r[t]=Yf(e.metrics[t])}this.compile({loss:n,metrics:r,optimizer:t})}async save(e,t){if("string"==typeof e){const t=ia(e);if(0===t.length)throw new Vf(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Vf(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Vf("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await Qs(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${Yy}`,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:s}=await Qs(await this.optimizer.getWeights(),e);n.specs.push(...s),n.data=ea([n.data,t])}if(null!=this.userDefinedMetadata){const e=!0;jy(this.userDefinedMetadata,this.name,e),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=n.data,r.weightSpecs=n.specs,e.save(r)}setUserDefinedMetadata(e){jy(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}kb.className="Model",zo(kb);class Nb extends kb{}async function Ib(e,t){"modelTopology"in e||(e={modelTopology:e});let n=(e=e).modelTopology;null!=n.model_config&&(n=n.model_config);const r=vy(Xy(n),t);if(null!=e.weightsManifest){const t=await Qa(e.weightsManifest,e.pathPrefix,r.weights.map((e=>e.originalName))),n={};for(const e of r.weights)n[e.originalName]=t[e.originalName];r.loadWeights(n),ai(t)}return r}Nb.className="Functional",zo(Nb);class Tb extends kb{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:Hg("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new Vf(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof Tb||e instanceof kb;let n;if(t){if(n=e,1!==n.outputs.length)throw new Vf("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new Vf("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new Vf("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=cy({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new Vf(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new Vf("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=uy(this.outputs[0])}this.inboundNodes=[],new ay({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Gf(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(Jg(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new kb({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new Wf("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new Wf("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new Wf("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new Wf("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let s,a={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new Vf("Legacy serialization format not supported yet.");s=t}else Y(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),s=t.layers,delete t.layers,a=t;const o=new e(a);if(!(o instanceof Tb))throw new jf(`Sequential.fromConfig called on non-Sequential input: ${o}`);for(const e of s){const t=vy(e,void 0,r);r&&t.setFastWeightInitDuringBuild(!0),o.add(t)}return o}set stopTraining(e){if(null==this.model)throw new Vf("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new Vf("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}function Cb(e){return new kb(e)}function Ab(e){return new Tb(e)}function Eb(e,t){return null==t&&(t={}),async function(e,t){if(null==t&&(t={}),"string"==typeof e){const n=ua(e,t);if(0===n.length)n.push(to(e,t));else if(n.length>1)throw new Vf(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return async function(e,t,n){if(null==n&&(n={}),null==e.load)throw new Vf("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const r=await e.load();let s=r.modelTopology;null!=s.model_config&&(s=s.model_config);const a=null==n.strict||n.strict,o=null!=r.weightData&&null!=r.weightSpecs&&a,i=vy(Xy(s),void 0,o),u=r.trainingConfig;if(null!=u&&i.loadTrainingConfig(u),null!=r.userDefinedMetadata&&i.setUserDefinedMetadata(r.userDefinedMetadata),null!=r.weightData){if(null==r.weightSpecs)throw new Vf("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:e,optimizerWeights:t}=function(e,t){const n=Xs(e,t),r={},s=[];return t.forEach((e=>{"optimizer"===e.group?s.push({name:e.name,tensor:n[e.name]}):r[e.name]=n[e.name]})),{modelWeights:r,optimizerWeights:s}}(r.weightData,r.weightSpecs);i.loadWeights(e,a),null!=i.optimizer&&t.length>0&&await i.optimizer.setWeights(t),ai(e),ai(t.map((e=>e.tensor)))}return i}(e,0,t)}(e,t)}function Pb(e){return cy(e)}function $b(e,t){xy.registerCallbackConstructor(e,t)}Tb.className="Sequential",zo(Tb);class Mb extends Do{getConfig(){return{}}}class Ob extends Mb{apply(e,t=1){return function(e,t=1){if(1!==t)throw new jf(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return al(e)}(e,t)}}Ob.className="elu",zo(Ob);class _b extends Mb{apply(e){return zc(e)}}_b.className="selu",zo(_b);class Db extends Mb{apply(e){return Ac(e)}}Db.className="relu",zo(Db);class Rb extends Mb{apply(e){return si((()=>Jl(6,Ac(e))))}}Rb.className="relu6",zo(Rb);class zb extends Mb{apply(e){return e}}zb.className="linear",zo(zb);class Fb extends Mb{apply(e){return ku(e)}}Fb.className="sigmoid",zo(Fb);class Lb extends Mb{apply(e){return function(e){return si((()=>{const t=yi(.5,xi(.2,e));return Du(t,0,1)}))}(e)}}Lb.className="hardSigmoid",zo(Lb);class qb extends Mb{apply(e){return Al(e)}}qb.className="softplus",zo(qb);class Bb extends Mb{apply(e){return function(e){return si((()=>wi(e,Li(e).add(1))))}(e)}}Bb.className="softsign",zo(Bb);class Wb extends Mb{apply(e){return Iu(e)}}Wb.className="tanh",zo(Wb);class Vb extends Mb{apply(e,t=-1){return Hc(e,t)}}Vb.className="softmax",zo(Vb);class jb extends Mb{apply(e,t=-1){return Ml(e,t)}}jb.className="logSoftmax",zo(jb);class Ub extends Mb{apply(e,t=1){return si((()=>ku(e.mul(t)).mul(e)))}}function Gb(e){return e.getClassName()}function Hb(e,t={}){return nm(e,Ro.getMap().classNameMap,t,"activation")}function Kb(e){if(null==e){return Hb({className:"linear",config:{}})}if("string"==typeof e){const t={};return t.className=e,t.config={},Hb(t)}return e instanceof Mb?e:Hb(e)}function Qb(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}Ub.className="swish",zo(Ub);class Xb extends Do{}class Jb extends Xb{constructor(e){super(),Qb(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return si((()=>{let t=sc([1]);return this.hasL1&&(t=yi(t,$l(xi(this.l1,Li(e))))),this.hasL2&&(t=yi(t,$l(xi(this.l2,ng(e))))),t.asScalar()}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}Jb.className="L1L2",zo(Jb);const Yb={l1l2:"L1L2"};function Zb(e){return em(e)}function ew(e,t={}){return nm(e,Ro.getMap().classNameMap,t,"regularizer")}function tw(e){return null==e?null:"string"==typeof e?ew({className:e in Yb?Yb[e]:e,config:{}}):e instanceof Xb?e:ew(e)}class nw extends iy{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=Xg(e);let n=Ac(e);return null!=this.maxValue&&(n=Du(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}nw.className="ReLU",zo(nw);class rw extends iy{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Xg(e);return xl(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}rw.className="LeakyReLU",zo(rw);class sw extends iy{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Ag(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=tw(e.alphaRegularizer),this.alphaConstraint=xm(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new Vf(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=Jg(e)).slice(1);if(null!=this.sharedAxes)for(const e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new ny({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Xg(e),mc(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Cg(this.alphaInitializer),alphaRegularizer:Zb(this.alphaRegularizer),alphaConstraint:bm(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}sw.className="PReLU",zo(sw);class aw extends iy{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new jf(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Xg(e);return al(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}aw.className="ELU",zo(aw);class ow extends iy{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=Xg(e);return n.mul(Um(n.greater(this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}ow.className="ThresholdedReLU",zo(ow);class iw extends iy{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new Vb).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){const n=Xg(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function uw(e,t,n){if("number"==typeof e)return Gf(e,t);if(e.length!==t)throw new Vf(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let s=0;s<t;++s){const a=e[s];if((r=a)!==parseInt(r.toString(),10))throw new Vf(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${a}`)}return e;var r}function lw(e,t,n,r,s=1){if(null==e)return e;let a;return a="same"===n?e:e-(t+(t-1)*(s-1))+1,Math.floor((a+r-1)/r)}function cw(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+Vm([n-t,0]);else{if("same"!==r)throw new Vf(`Unsupport padding mode: ${r}.`);e*=t}return e}function pw(e,t){return si((()=>($m(t),"channelsFirst"===t?uo(e,[0,2,3,1]):e)))}function hw(e,t){return si((()=>($m(t),"channelsFirst"===t?uo(e,[0,2,3,4,1]):e)))}function dw(e,t,n,r=[1,1],s="valid",a,o,i=null){return si((()=>{if(null==a&&(a="channelsLast"),$m(a),3!==e.rank&&4!==e.rank)throw new Vf(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new Vf(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let u=pw(e,a);if("causal"===s)throw new jf("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=Qp({x:u,filter:t,strides:r,pad:"same"===s?"same":"valid",dilations:o,dataFormat:"NHWC",bias:n,activation:i}),"channelsFirst"===a&&(u=uo(u,[0,3,1,2])),u}))}iw.className="Softmax",zo(iw);class fw extends iy{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",fw.verifyArgs(t),this.rank=e,um(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new jf(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=uw(t.kernelSize,e,"kernelSize"),this.strides=uw(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,Mm(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,$m(this.dataFormat),this.activation=Kb(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=Ag(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=xm(t.biasConstraint),this.biasRegularizer=tw(t.biasRegularizer),this.activityRegularizer=tw(t.activityRegularizer),this.dilationRate=uw(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new Vf(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new Vf(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new Vf(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(Hf("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!im(e.kernelSize,"number",1,3))throw new Vf(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Gb(this.activation),useBias:this.useBias,biasInitializer:Cg(this.biasInitializer),biasRegularizer:Zb(this.biasRegularizer),activityRegularizer:Zb(this.activityRegularizer),biasConstraint:bm(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class mw extends fw{constructor(e,t){super(e,t),this.kernel=null,mw.verifyArgs(t),this.filters=t.filters,um(this.filters,"filters"),this.kernelInitializer=Ag(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=xm(t.kernelConstraint),this.kernelRegularizer=tw(t.kernelRegularizer)}build(e){e=Jg(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Vf(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return si((()=>{let t;e=Xg(e);const n=null==this.bias?null:this.bias.read(),r=cm(this.activation.getClassName());if(null!=r&&2===this.rank)t=dw(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=function(e,t,n,r=1,s="valid",a,o=1){return si((()=>{if(null==a&&(a="channelsLast"),$m(a),3!==e.shape.length)throw new Vf(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new Vf(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new Vf(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===a&&(e=uo(e,[0,2,1])),"causal"===s)throw new jf("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let i=Bu(e,t,r,"same"===s?"same":"valid","NWC",o);return null!=n&&(i=sg(i,n)),i}))}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=dw(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new jf("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,r=[1,1,1],s="valid",a,o){return si((()=>{if(null==a&&(a="channelsLast"),$m(a),4!==e.rank&&5!==e.rank)throw new Vf(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new Vf(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let i=hw(e,a);if("causal"===s)throw new jf("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return i=ju(i,t,r,"same"===s?"same":"valid","NDHWC",o),null!=n&&(i=sg(i,n)),"channelsFirst"===a&&(i=uo(i,[0,4,1,2,3])),i}))}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=Jg(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){const r=lw(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(r)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:Cg(this.kernelInitializer),kernelRegularizer:Zb(this.kernelRegularizer),kernelConstraint:bm(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new Vf(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class gw extends mw{constructor(e){super(2,e),gw.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!im(e.kernelSize,"number",1,2))throw new Vf(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}gw.className="Conv2D",zo(gw);class yw extends mw{constructor(e){super(3,e),yw.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new Vf(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}yw.className="Conv3D",zo(yw);class bw extends gw{constructor(e){if(super(e),this.inputSpec=[new ny({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new Vf(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=Jg(e)).length)throw new Vf("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Vf("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new ny({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return si((()=>{let t=Xg(e);if(4!==t.shape.length)throw new Vf(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let s,a;"channelsFirst"===this.dataFormat?(s=2,a=3):(s=1,a=2);const o=n[s],i=n[a],u=this.kernelSize[0],l=this.kernelSize[1],c=this.strides[0],p=this.strides[1],h=[r,cw(o,c,u,this.padding),cw(i,p,l,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=uo(t,[0,2,3,1]));let d=Vu(t,this.kernel.read(),h,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(d=uo(d,[0,3,1,2])),null!=this.bias&&(d=sg(d,this.bias.read(),this.dataFormat)),null!=this.activation&&(d=this.activation.apply(d)),d}))}computeOutputShape(e){const t=(e=Jg(e)).slice();let n,r,s;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3):(n=3,r=1,s=2);const a=this.kernelSize[0],o=this.kernelSize[1],i=this.strides[0],u=this.strides[1];return t[n]=this.filters,t[r]=cw(t[r],i,a,this.padding),t[s]=cw(t[s],u,o,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}bw.className="Conv2DTranspose",zo(bw);class ww extends mw{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new Vf("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new Vf("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new Vf(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Ag(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=tw(t.depthwiseRegularizer),this.depthwiseConstraint=xm(t.depthwiseConstraint),this.pointwiseInitializer=Ag(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=tw(t.pointwiseRegularizer),this.pointwiseConstraint=xm(t.pointwiseConstraint)}build(e){if((e=Jg(e)).length<this.rank+2)throw new Vf(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new Vf(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let e=0;e<this.rank;++e)s.push(1);s.push(n*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new ny({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return si((()=>{let t;if(e=Xg(e),1===this.rank)throw new jf("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=uo(e,[0,2,3,1])),t=Fc(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=sg(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=uo(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Cg(this.depthwiseInitializer),e.pointwiseInitializer=Cg(this.pointwiseInitializer),e.depthwiseRegularizer=Zb(this.depthwiseRegularizer),e.pointwiseRegularizer=Zb(this.pointwiseRegularizer),e.depthwiseConstraint=bm(this.depthwiseConstraint),e.pointwiseConstraint=bm(this.pointwiseConstraint),e}}ww.className="SeparableConv";class xw extends ww{constructor(e){super(2,e)}}xw.className="SeparableConv2D",zo(xw);class Sw extends mw{constructor(e){super(1,e),Sw.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!im(e.kernelSize,"number",1,1))throw new Vf(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}Sw.className="Conv1D",zo(Sw);class vw extends iy{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return si((()=>{if(e=Xg(e),"channelsLast"===this.dataFormat){const t=Qm(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Qm(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=Qm(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Qm(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}vw.className="Cropping2D",zo(vw);class kw extends iy{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,$m(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,om(Tm,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return si((()=>{let t=Xg(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=uo(t,[0,2,3,1]);const e=this.size[0]*n[2],r=this.size[1]*n[3],s="nearest"===this.interpolation?t.resizeNearestNeighbor([e,r]):t.resizeBilinear([e,r]);return uo(s,[0,3,1,2])}{const e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?t.resizeNearestNeighbor([e,r]):t.resizeBilinear([e,r])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}kw.className="UpSampling2D",zo(kw);class Nw extends fw{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Ag(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=xm(e.depthwiseConstraint),this.depthwiseRegularizer=tw(e.depthwiseRegularizer)}build(e){if((e=Jg(e)).length<4)throw new Vf(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new Vf(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return si((()=>{let t=function(e,t,n=[1,1],r="valid",s,a){return si((()=>{null==s&&(s="channelsLast"),$m(s);let o=pw(e,s);if(4!==e.rank)throw new Vf(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new Vf(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return o=Yu(o,t,n,"same"===r?"same":"valid","NHWC",a),"channelsFirst"===s&&(o=uo(o,[0,3,1,2])),o}))}(e=Xg(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=sg(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=Jg(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,s=lw(t,this.kernelSize[0],this.padding,this.strides[0]),a=lw(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,s,a]:[e[0],s,a,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Cg(this.depthwiseInitializer),e.depthwiseRegularizer=Zb(this.depthwiseRegularizer),e.depthwiseConstraint=bm(this.depthwiseRegularizer),e}}function Iw(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new Vf("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function s(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=s(t),constants:n=s(n)}}function Tw(e,t,n,r=!1,s,a,o=!1,i=!1){return si((()=>{const u=t.shape.length;if(u<3)throw new Vf(`Input should be at least 3D, but is ${u}D.`);const l=[1,0].concat(jm(2,u));if(t=uo(t,l),null!=a)throw new jf("The rnn() functoin of the deeplearn.js backend does not support constants yet.");o&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=s&&((s=s.asType("bool").asType("float32")).rank===u-1&&(s=ul(s,-1)),s=uo(s,l)),r&&(t=Pc(t,0),null!=s&&(s=Pc(s,0)));const c=[];let p,h=n;const d=t.shape[0],f=fp(t);let m,g;null!=s&&(m=fp(s));for(let t=0;t<d;++t){const n=f[t],r=si((()=>e(n,h)));if(null==s)p=r[0],h=r[1];else{const e=si((()=>{const e=m[t],n=oc(e).sub(e);return{output:r[0].mul(e).add(h[0].mul(n)),newStates:h.map(((t,s)=>r[1][s].mul(e).add(t.mul(n))))}}));p=e.output,h=e.newStates}i&&c.push(p)}return i&&(g=tp(c,1)),[p,g,h]}))}Nw.className="DepthwiseConv2D",zo(Nw);class Cw extends iy{constructor(e){let t;if(super(e),null==e.cell)throw new Vf("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new Dw({cells:e.cell}):e.cell,null==t.stateSize)throw new Vf("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new ny({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?jm(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null)):this.states_}setStates(e){this.states_=e}computeOutputShape(e){Kg(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let r;if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const r of t)n.push([e[0],r]);return[r].concat(n)}return r}computeMask(e,t){return si((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new jf("Constants support is not implemented in RNN yet.");Kg(e)&&(e=e[0]),e=e;const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new ny({shape:[t,null,...n]});const r=[e[0]].concat(e.slice(2));let s;if(this.cell.build(r),s=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!se(this.stateSpec.map((e=>e.shape[e.shape.length-1])),s))throw new Vf(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=s.map((e=>new ny({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){si((()=>{if(!this.stateful)throw new Bf("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new Vf("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>sc([n,e]))):this.states_=[sc([n,this.cell.stateSize])];else if(null==e)ai(this.states_),null!=this.keptStates&&(ai(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>sc([n,e]))):this.states_[0]=sc([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Vf(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):ai(this.states_);for(let t=0;t<this.states_.length;++t){const r=e[t],s=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,a=[n,s];if(!se(r.shape,a))throw new Vf(`State ${t} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map((e=>oi(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const s=Iw(e,n,r,this.numConstants);e=s.inputs,n=s.initialState,r=s.constants;let a=[],o=[];if(null!=n){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new ny({shape:e.shape}));o=o.concat(this.stateSpec)}if(null!=r&&(t.constants=r,a=a.concat(r),this.numConstants=r.length),a[0]instanceof ry){const n=[e].concat(a),r=this.inputSpec.concat(o),s=this.inputSpec;this.inputSpec=r;const i=super.apply(n,t);return this.inputSpec=s,i}return super.apply(e,t)}call(e,t){return si((()=>{const n=null==t?null:t.mask,r=null==t?null:t.training;let s=null==t?null:t.initialState;e=Xg(e),null==s&&(s=this.stateful?this.states_:this.getInitialState(e));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==a)throw new Vf(`RNN Layer has ${a} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const o={training:r},i=Tw(((e,t)=>{const n=this.cell.call([e].concat(t),o);return[n[0],n.slice(1)]}),e,s,this.goBackwards,n,null,this.unroll,this.returnSequences),u=i[0],l=i[1],c=i[2];this.stateful&&this.resetStates(c,r);const p=this.returnSequences?l:u;return this.returnState?[p].concat(c):p}))}getInitialState(e){return si((()=>{let t=sc(e.shape);return t=$l(t,[1,2]),t=Gm(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?Ym(t,[1,e]):t)):this.cell.stateSize>1?[Ym(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===Cw.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t,n={}){const r=vy(t.cell,n);return new e(Object.assign(t,{cell:r}))}}Cw.className="RNN",zo(Cw);class Aw extends iy{}class Ew extends Aw{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,um(this.units,"units"),this.activation=Kb(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Ag(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ag(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ag(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=tw(e.kernelRegularizer),this.recurrentRegularizer=tw(e.recurrentRegularizer),this.biasRegularizer=tw(e.biasRegularizer),this.kernelConstraint=xm(e.kernelConstraint),this.recurrentConstraint=xm(e.recurrentConstraint),this.biasConstraint=xm(e.biasConstraint),this.dropout=Wm([1,Vm([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Wm([1,Vm([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Jg(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return si((()=>{if(2!==(e=e).length)throw new Vf(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const r=null!=t.training&&t.training;let s;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Rw({ones:()=>oc(e),rate:this.dropout,training:r})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Rw({ones:()=>oc(n),rate:this.recurrentDropout,training:r}));const a=this.dropoutMask,o=this.recurrentDropoutMask;s=eg(null!=a?xi(e,a):e,this.kernel.read()),null!=this.bias&&(s=sg(s,this.bias.read())),null!=o&&(n=xi(n,o));let i=yi(s,eg(n,this.recurrentKernel.read()));return null!=this.activation&&(i=this.activation.apply(i)),[i,i]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Gb(this.activation),useBias:this.useBias,kernelInitializer:Cg(this.kernelInitializer),recurrentInitializer:Cg(this.recurrentInitializer),biasInitializer:Cg(this.biasInitializer),kernelRegularizer:Zb(this.kernelRegularizer),recurrentRegularizer:Zb(this.recurrentRegularizer),biasRegularizer:Zb(this.biasRegularizer),activityRegularizer:Zb(this.activityRegularizer),kernelConstraint:bm(this.kernelConstraint),recurrentConstraint:bm(this.recurrentConstraint),biasConstraint:bm(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}}Ew.className="SimpleRNNCell",zo(Ew);class Pw extends Cw{constructor(e){e.cell=new Ew(e),super(e)}call(e,t){return si((()=>{null!=this.cell.dropoutMask&&(ai(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ai(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return new e(t)}}Pw.className="SimpleRNN",zo(Pw);class $w extends Aw{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new Vf("GRUCell does not support reset_after parameter set to true.");this.units=e.units,um(this.units,"units"),this.activation=Kb(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Kb(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Ag(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ag(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ag(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=tw(e.kernelRegularizer),this.recurrentRegularizer=tw(e.recurrentRegularizer),this.biasRegularizer=tw(e.biasRegularizer),this.kernelConstraint=xm(e.kernelConstraint),this.recurrentConstraint=xm(e.recurrentConstraint),this.biasConstraint=xm(e.biasConstraint),this.dropout=Wm([1,Vm([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Wm([1,Vm([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=Jg(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return si((()=>{if(2!==(e=e).length)throw new Vf(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Rw({ones:()=>oc(e),rate:this.dropout,training:n,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Rw({ones:()=>oc(r),rate:this.recurrentDropout,training:n,count:3}));const s=this.dropoutMask,a=this.recurrentDropoutMask;let o,i,u;0<this.dropout&&this.dropout<1&&(e=xi(e,s[0]));let l=eg(e,this.kernel.read());this.useBias&&(l=sg(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=xi(r,a[0]));const c=this.recurrentKernel.read(),[p,h]=Jc(c,[2*this.units,this.units],c.rank-1),d=eg(r,p),[f,m,g]=Jc(l,3,l.rank-1),[y,b]=Jc(d,2,d.rank-1);o=this.recurrentActivation.apply(yi(f,y)),i=this.recurrentActivation.apply(yi(m,b));const w=eg(xi(i,r),h);u=this.activation.apply(yi(g,w));const x=yi(xi(o,r),xi(yi(1,Cl(o)),u));return[x,x]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Gb(this.activation),recurrentActivation:Gb(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Cg(this.kernelInitializer),recurrentInitializer:Cg(this.recurrentInitializer),biasInitializer:Cg(this.biasInitializer),kernelRegularizer:Zb(this.kernelRegularizer),recurrentRegularizer:Zb(this.recurrentRegularizer),biasRegularizer:Zb(this.biasRegularizer),activityRegularizer:Zb(this.activityRegularizer),kernelConstraint:bm(this.kernelConstraint),recurrentConstraint:bm(this.recurrentConstraint),biasConstraint:bm(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}}$w.className="GRUCell",zo($w);class Mw extends Cw{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new $w(e),super(e)}call(e,t){return si((()=>{null!=this.cell.dropoutMask&&(ai(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ai(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Mw.className="GRU",zo(Mw);class Ow extends Aw{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,um(this.units,"units"),this.activation=Kb(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Kb(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Ag(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ag(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ag(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=tw(e.kernelRegularizer),this.recurrentRegularizer=tw(e.recurrentRegularizer),this.biasRegularizer=tw(e.biasRegularizer),this.kernelConstraint=xm(e.kernelConstraint),this.recurrentConstraint=xm(e.recurrentConstraint),this.biasConstraint=xm(e.biasConstraint),this.dropout=Wm([1,Vm([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Wm([1,Vm([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=Jg(e))[e.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;r=new((t=class extends lg{apply(t,r){const s=e.apply([n]),a=(new pg).apply([n]),o=e.apply([2*n]);return Jm(Jm(s,a),o)}}).className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return si((()=>{const n=null!=t.training&&t.training;if(3!==(e=e).length)throw new Vf(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const s=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Rw({ones:()=>oc(e),rate:this.dropout,training:n,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Rw({ones:()=>oc(r),rate:this.recurrentDropout,training:n,count:4}));const a=this.dropoutMask,o=this.recurrentDropoutMask;let i,u,l,c;0<this.dropout&&this.dropout<1&&(e=xi(e,a[0]));let p=eg(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=xi(r,o[0])),p=yi(p,eg(r,this.recurrentKernel.read())),this.useBias&&(p=sg(p,this.bias.read()));const[h,d,f,m]=Jc(p,4,p.rank-1);i=this.recurrentActivation.apply(h),u=this.recurrentActivation.apply(d),l=yi(xi(u,s),xi(i,this.activation.apply(f))),c=this.recurrentActivation.apply(m);const g=xi(c,this.activation.apply(l));return[g,g,l]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Gb(this.activation),recurrentActivation:Gb(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Cg(this.kernelInitializer),recurrentInitializer:Cg(this.recurrentInitializer),biasInitializer:Cg(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Zb(this.kernelRegularizer),recurrentRegularizer:Zb(this.recurrentRegularizer),biasRegularizer:Zb(this.biasRegularizer),activityRegularizer:Zb(this.activityRegularizer),kernelConstraint:bm(this.kernelConstraint),recurrentConstraint:bm(this.recurrentConstraint),biasConstraint:bm(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}}Ow.className="LSTMCell",zo(Ow);class _w extends Cw{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Ow(e),super(e)}call(e,t){return si((()=>{null!=this.cell.dropoutMask&&(ai(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ai(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}_w.className="LSTM",zo(_w);class Dw extends Aw{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return si((()=>{let n=(e=e).slice(1);const r=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();const s=[];let a;for(let o=0;o<this.cells.length;++o){const i=this.cells[o];n=r[o],a=0===o?[e[0]].concat(n):[a[0]].concat(n),a=i.call(a,t),s.push(a.slice(1))}n=[];for(const e of s.slice().reverse())n.push(...e);return[a[0]].concat(n)}))}build(e){let t;Kg(e)&&(e=e[0]),e=e,this.cells.forEach(((n,r)=>{Dm(`RNNCell_${r}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign({},e,t)}static fromConfig(e,t,n={}){const r=[];for(const e of t.cells)r.push(vy(e,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return ey(e)}setWeights(e){const t=[];for(const n of this.cells){const r=n.weights.length,s=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],s[e]])}ty(t)}}function Rw(e){const{ones:t,rate:n,training:r=!1,count:s=1}=e,a=()=>ag(t(),n),o=()=>og(a,t,r);return!s||s<=1?oi(o().clone()):Array(s).fill(void 0).map(o).map((e=>oi(e.clone())))}Dw.className="StackedRNNCells",zo(Dw);class zw extends Cw{constructor(e){if(e.unroll)throw new jf("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new jf("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new ny({ndim:5})]}call(e,t){return si((()=>{if(null!=this.cell.dropoutMask&&(ai(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ai(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new Vf("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return si((()=>{const{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),s=sc([r[0],...r.slice(2)]);return Array.isArray(t)?Array(t.length).fill(s):[s]}))}resetStates(e,t=!1){si((()=>{if(!this.stateful)throw new Bf("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),s=[r[0],...r.slice(2)];if(null==n[0])throw new Vf("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>sc(s))):this.states_=[sc(s)];else if(null==e)ai(this.states_),null!=this.keptStates&&(ai(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>sc(s))):this.states_[0]=sc(s);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Vf(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):ai(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],r=s;if(!se(n.shape,r))throw new Vf(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>oi(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:s,strides:a,dilationRate:o}=this.cell,i="channelsFirst"===t,u=e[i?3:2],l=e[i?4:3],c=lw(u,r[0],s,a[0],o[0]),p=lw(l,r[1],s,a[1],o[1]);return[...e.slice(0,2),...i?[n,c,p]:[c,p,n]]}}zw.className="ConvRNN2D";class Fw extends Ow{constructor(e){const{filters:t,kernelSize:n,strides:r,padding:s,dataFormat:a,dilationRate:o}=e;super(Object.assign({},e,{units:t})),this.filters=t,um(this.filters,"filters"),this.kernelSize=uw(n,2,"kernelSize"),this.kernelSize.forEach((e=>um(e,"kernelSize"))),this.strides=uw(r||1,2,"strides"),this.strides.forEach((e=>um(e,"strides"))),this.padding=s||"valid",Mm(this.padding),this.dataFormat=a||"channelsLast",$m(this.dataFormat),this.dilationRate=uw(o||1,2,"dilationRate"),this.dilationRate.forEach((e=>um(e,"dilationRate")))}build(e){var t;e=Jg(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new Vf(`The channel dimension of the input should be defined. Found ${e[n]}`);const r=e[n],s=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;e=new((t=class extends lg{apply(e,t){return Xm([n.apply([r]),ac([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return si((()=>{if(3!==e.length)throw new Vf(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,r=e[0],s=e[1],a=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Rw({ones:()=>oc(r),rate:this.dropout,training:n,count:4}));const o=this.dropoutMask,i=(e,t,n)=>t&&t[n]?xi(t[n],e):e;let u=i(r,o,0),l=i(r,o,1),c=i(r,o,2),p=i(r,o,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Rw({ones:()=>oc(s),rate:this.recurrentDropout,training:n,count:4}));const h=this.recurrentDropoutMask;let d=i(s,h,0),f=i(s,h,1),m=i(s,h,2),g=i(s,h,3);const[y,b,w,x]=Jc(this.kernel.read(),4,3),[S,v,k,N]=this.useBias?Jc(this.bias.read(),4):[null,null,null,null];u=this.inputConv(u,y,S,this.padding),l=this.inputConv(l,b,v,this.padding),c=this.inputConv(c,w,k,this.padding),p=this.inputConv(p,x,N,this.padding);const[I,T,C,A]=Jc(this.recurrentKernel.read(),4,3);d=this.recurrentConv(d,I),f=this.recurrentConv(f,T),m=this.recurrentConv(m,C),g=this.recurrentConv(g,A);const E=this.recurrentActivation.apply(yi(u,d)),P=this.recurrentActivation.apply(yi(l,f)),$=yi(xi(P,a),xi(E,this.activation.apply(yi(c,m)))),M=xi(this.recurrentActivation.apply(yi(p,g)),this.activation.apply($));return[M,M,$]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var s=0;for(r=Object.getOwnPropertySymbols(e);s<r.length;s++)t.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(e,r[s])&&(n[r[s]]=e[r[s]])}return n}(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,r)}inputConv(e,t,n,r){const s=qu(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?sg(s,n,this.dataFormat):s}recurrentConv(e,t){return qu(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}Fw.className="ConvLSTM2DCell",zo(Fw);class Lw extends zw{constructor(e){const t=new Fw(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}}Lw.className="ConvLSTM2D",zo(Lw);class qw extends iy{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return si((()=>{this.invokeCallHook(e,t);const n=Xg(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,r=this.getNoiseShape(n);return og((()=>ag(n,this.rate,r,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}qw.className="Dropout",zo(qw);class Bw extends qw{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}Bw.className="SpatialDropout1D",zo(Bw);class Ww extends iy{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,um(this.units,"units"),this.activation=Kb(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=Ag(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Ag(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=xm(e.kernelConstraint),this.biasConstraint=xm(e.biasConstraint),this.kernelRegularizer=tw(e.kernelRegularizer),this.biasRegularizer=tw(e.biasRegularizer),this.activityRegularizer=tw(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=Jg(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=Jg(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return si((()=>{this.invokeCallHook(e,t);const n=Xg(e),r=cm(this.activation.getClassName());let s;return null!=r?s=eg(n,this.kernel.read(),r,this.bias?this.bias.read():null):(s=eg(n,this.kernel.read()),null!=this.bias&&(s=sg(s,this.bias.read())),null!=this.activation&&(s=this.activation.apply(s))),s}))}getConfig(){const e={units:this.units,activation:Gb(this.activation),useBias:this.useBias,kernelInitializer:Cg(this.kernelInitializer),biasInitializer:Cg(this.biasInitializer),kernelRegularizer:Zb(this.kernelRegularizer),biasRegularizer:Zb(this.biasRegularizer),activityRegularizer:Zb(this.activityRegularizer),kernelConstraint:bm(this.kernelConstraint),biasConstraint:bm(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Ww.className="Dense",zo(Ww);class Vw extends iy{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Jg(e);for(const t of e.slice(1))if(null==t)throw new Vf(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],qm(e,1)]}call(e,t){return si((()=>{this.invokeCallHook(e,t);let n=Xg(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=n.transpose(e)}return function(e){if(e.rank<=1)throw new Vf(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],qm(e.shape,1)];return e.reshape(t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}Vw.className="Flatten",zo(Vw);class jw extends iy{constructor(e){super(e),this.supportsMasking=!0,this.activation=Kb(e.activation)}call(e,t){return si((()=>{this.invokeCallHook(e,t);const n=Xg(e);return this.activation.apply(n)}))}getConfig(){const e={activation:Gb(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}jw.className="Activation",zo(jw);class Uw extends iy{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return si((()=>{return e=Xg(e),t=e,n=this.n,si((()=>{if(2!==t.shape.length)throw new Vf(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return Ym(Gm(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}Uw.className="RepeatVector",zo(Uw);class Gw extends iy{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let s=1,a=null;for(let e=0;e<r.length;++e){const t=r[e];if(this.isUnknown(t)){if(null!==a)throw new Vf("Can only specifiy one unknown dimension.");a=e}else s*=t}const o=qm(e);if(null!==a){if(0===s||o%s!=0)throw new Vf(n);r[a]=o/s}else if(o!==s)throw new Vf(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return si((()=>{this.invokeCallHook(e,t);const n=Xg(e),r=n.shape,s=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return n.reshape(s)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}Gw.className="Reshape",zo(Gw);class Hw extends iy{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=jm(1,e.dims.length+1);if(!se(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new ny({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=Jg(e)).slice();return this.dims.forEach(((n,r)=>{t[r+1]=e[n]})),t}call(e,t){return uo(Xg(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}Hw.className="Permute",zo(Hw);class Kw extends iy{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=Xg(e);return Yi(rc(n,this.maskValue),-1)}call(e,t){return si((()=>{this.invokeCallHook(e,t);const n=Xg(e),r=Yi(rc(n,this.maskValue),-1,!0);return n.mul(r.asType(n.dtype))}))}}Kw.className="Masking",zo(Kw);class Qw extends iy{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(Xf(e.inputLength))}this.inputDim=e.inputDim,um(this.inputDim,"inputDim"),this.outputDim=e.outputDim,um(this.outputDim,"outputDim"),this.embeddingsInitializer=Ag(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=tw(e.embeddingsRegularizer),this.activityRegularizer=tw(e.activityRegularizer),this.embeddingsConstraint=xm(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return si((()=>this.maskZero?(e=Xg(e),rc(e,ki(e))):null))}computeOutputShape(e){if(e=Jg(e),null==this.inputLength)return[...e,this.outputDim];const t=Xf(this.inputLength);if(t.length!==e.length-1)throw new Vf(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){const s=t[r],a=e[r+1];if(null!=s&&null!=a&&s!==a)throw new Vf(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==s&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return si((()=>{this.invokeCallHook(e,t);let n=Xg(e);return"int32"!==n.dtype&&(n=Um(n,"int32")),tg(this.embeddings.read(),n.as1D()).reshape(Jg(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Cg(this.embeddingsInitializer),embeddingsRegularizer:Zb(this.embeddingsRegularizer),activityRegularizer:Zb(this.activityRegularizer),embeddingsConstraint:bm(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}Qw.className="Embedding",zo(Qw);class Xw extends iy{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new jf}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const s=e[e.length-t.length+r],a=t[r];if(null==s||null==a||s<0||a<0)n.push(null);else if(1===s)n.push(a);else if(1===a)n.push(s);else{if(s!==a)throw new Vf("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(s)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Jg(e)]),(e=e).length<2)throw new Vf(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=sm(t),t.length>1)throw new Vf(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){const r=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}const r=e.map((e=>e.length));-1===e.indexOf(null)&&1===sm(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return si((()=>{if(e=e,this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const r=Vm(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=Gm(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const r of e){const e=r.rank;if(null==e){const e=r.shape,s=e[0],a=e.slice(1).concat([s]);let o=r.reshape([s].concat(qm(e.slice(1))));o=uo(o,[1,0]),o=o.reshape(a),t.push(o),n=!0}else if(e>1){const s=jm(1,e).concat([0]);t.push(uo(r,s)),n=!0}else t.push(r)}let r=this.mergeFunction(t);const s=r.rank;if(n)if(null==s){const e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=uo(r.reshape([-1,t]),[1,0]).reshape(n)}else if(s>1){const e=[s-1].concat(jm(0,s-1));r=uo(r,e)}return r}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==(e=e)[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){const r=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(const t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=sm(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return si((()=>{if(null==t)return null;if(!Array.isArray(t))throw new Vf("`mask` should be an Array");if(!Array.isArray(e))throw new Vf("`inputs` should be an Array");if(t.length!==e.length)throw new Vf(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:ul(e,0))))[0];for(let e=1;e<t.length-1;++e)n=Wl(n,t[e]);return n}))}}class Jw extends Xw{constructor(e){super(e)}mergeFunction(e){return si((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=yi(t,e[n]);return t}))}}Jw.className="Add",zo(Jw);class Yw extends Xw{constructor(e){super(e)}mergeFunction(e){return si((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=xi(t,e[n]);return t}))}}Yw.className="Multiply",zo(Yw);class Zw extends Xw{constructor(e){super(e)}mergeFunction(e){return si((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=yi(t,e[n]);return xi(1/e.length,t)}))}}Zw.className="Average",zo(Zw);class ex extends Xw{constructor(e){super(e)}mergeFunction(e){return si((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Vi(t,e[n]);return t}))}}ex.className="Maximum",zo(ex);class tx extends Xw{constructor(e){super(e)}mergeFunction(e){return si((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Jl(t,e[n]);return t}))}}tx.className="Minimum",zo(tx);class nx extends Xw{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new Vf("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(const n of e)if(null!=n){t=!1;break}if(t)return;const n=[];for(let t=0;t<e.length;++t){const r=e[t].slice();r.splice(this.axis,1);let s=!1;for(const e of n)if(se(e,r)){s=!0;break}s||n.push(r)}if(n.length>1)throw new Vf("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return si((()=>Xm(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new Vf("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const e of t.slice(1)){if(null==n[r]||null==e[r]){n[r]=null;break}n[r]+=e[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new Vf("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new Vf("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new Vf(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return si((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const r=[];for(let n=0;n<e.length;++n)null==t[n]?r.push(oc(e[n]).asType("bool")):t[n].rank<e[n].rank?r.push(ul(t[n],-1)):r.push(t[n]);const s=vu(r,this.axis);return Ji(s,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function rx(e,t){for(;e<0;)e+=t;return e}nx.className="Concatenate",zo(nx);class sx extends Xw{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){Y(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new jf("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new Vf(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new Vf(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>rx(t,e[n].shape.length))):[rx(this.axes,n.shape.length),rx(this.axes,r.shape.length)],this.normalize&&(n=ky(n,t[0]),r=ky(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new jf("batchDot is not implemented for tensors of 4D or higher rank yet");if(Y(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),Y(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new jf("batchDot is not implemented for complex64-type Tensors yet.");const r=e.shape.length,s=t.shape.length;null==n&&(n=[r-1,s-2]);const a=n;return si((()=>{let n,o;if(r>s){n=r-s;const e=[];for(let t=0;t<n;++t)e.push(1);t=t.reshape(t.shape.concat(e))}else if(s>r){n=s-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=e.reshape(e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)o=a[0]===a[1]?e.mul(t).sum(a[0]):e.transpose([1,0]).mul(t).sum(a[1]);else{const n=a[0]!==e.shape.length-1,r=a[1]===t.shape.length-1;o=e.matMul(t,n,r)}if(n>0){let e;e=r>s?r+s-3:r-1;const t=[];for(let r=e;r<e+n;++r)t.push(r);o=o.squeeze(t)}return 1===o.shape.length&&(o=o.expandDims(1)),o}))}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[rx(this.axes,e.length),rx(this.axes,t.length)],n}computeOutputShape(e){Y(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new jf("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const s=t.concat(n);return 1===s.length&&s.push(1),s}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}sx.className="Dot",zo(sx);class ax extends iy{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return si((()=>{this.invokeCallHook(e,t);const n=Xg(e);return og((()=>Zm(n.shape,0,this.stddev).add(n)),(()=>n),t.training||!1)}))}}ax.className="GaussianNoise",zo(ax);class ox extends iy{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return si((()=>{this.invokeCallHook(e,t);const n=Xg(e);return this.rate>0&&this.rate<1?og((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return n.mul(Zm(n.shape,1,e))}),(()=>n),t.training||!1):n}))}}ox.className="GaussianDropout",zo(ox);class ix extends iy{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Xg(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return si((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e);return og((()=>{const t=Xg(e),r=-1.7580993408473766;let s=ml(Nc(n),this.rate);s=Um(s,"float32");const a=((1-this.rate)*(1+this.rate*r**2))**-.5,o=-a*r*this.rate;return t.mul(s).add(s.add(-1).mul(r)).mul(a).add(o)}),(()=>Xg(e)),t.training||!1)}return e}))}}function ux(e,t,n,r,s,a=.001){let o;if(2===e.rank)o=Eu(e,t,n,r,s,a);else if(3===e.rank)o=Pu(e,t,n,r,s,a);else{if(4!==e.rank)throw new jf(`batchNormalization is not implemented for array of rank ${e.rank} yet`);o=$u(e,t,n,r,s,a)}return o}ix.className="AlphaDropout",zo(ix);class lx extends iy{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Ag(e.betaInitializer||"zeros"),this.gammaInitializer=Ag(e.gammaInitializer||"ones"),this.movingMeanInitializer=Ag(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Ag(e.movingVarianceInitializer||"ones"),this.betaConstraint=xm(e.betaConstraint),this.gammaConstraint=xm(e.gammaConstraint),this.betaRegularizer=tw(e.betaRegularizer),this.gammaRegularizer=tw(e.gammaRegularizer)}build(e){e=Jg(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new Vf(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new ny({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return si((()=>{const n=null!=t.training&&t.training,r=Xg(e),s=r.shape,a=s.length,o=jm(0,a),i=this.axis>=0?this.axis:this.axis+a;o.splice(i,1);const u=Gf(1,a);u[i]=s[i];const l=o.slice();l.sort();const c=!se(l,jm(0,a).slice(0,a-1));if(!n)return(()=>{if(c){const e=this.movingMean.read().reshape(u),t=this.movingVariance.read().reshape(u),n=this.center?this.beta.read().reshape(u):null,s=this.scale?this.gamma.read().reshape(u):null;return ux(r,e,t,n,s,this.epsilon)}return ux(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[p,h,d]=function(e,t,n,r,s=.001){return se(r.slice().sort(),jm(0,e.rank-1))?function(e,t,n,r,s=.001){return si((()=>{const a=ec(e,r),o=a.mean,i=a.variance;return[ux(e,o,i,n,t,s),o,i]}))}(e,t,n,r,s):function(e,t,n,r,s=.001){return si((()=>{const a=ec(e,r),o=a.mean,i=a.variance,u=[];for(const t of jm(0,e.rank))-1!==r.indexOf(t)?u.push(1):u.push(e.shape[t]);const l=o.reshape(u),c=i.reshape(u),p=null==t?null:t.reshape(u),h=null==n?null:n.reshape(u);return[ux(e,l,c,h,p,s),o,i]}))}(e,t,n,r,s)}(r,this.gamma.read(),this.beta.read(),o,this.epsilon),f=(e,t,n)=>{si((()=>{const r=1-n,s=e.read(),a=s.sub(t).mul(r);e.write(s.sub(a))}))};return(()=>{f(this.movingMean,h,this.momentum),f(this.movingVariance,d,this.momentum)})(),p}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Cg(this.betaInitializer),gammaInitializer:Cg(this.gammaInitializer),movingMeanInitializer:Cg(this.movingMeanInitializer),movingVarianceInitializer:Cg(this.movingVarianceInitializer),betaRegularizer:Zb(this.betaRegularizer),gammaRegularizer:Zb(this.gammaRegularizer),betaConstraint:bm(this.betaConstraint),gammaConstraint:bm(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}lx.className="BatchNormalization",zo(lx);class cx extends iy{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Ag(e.betaInitializer||"zeros"),this.gammaInitializer=Ag(e.gammaInitializer||"ones"),this.betaRegularizer=tw(e.betaRegularizer),this.gammaRegularizer=tw(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=Jg(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(const e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==sm(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(e,t){const n=Xg(e),r=n.shape,s=r.length;return si((()=>{let{mean:e,variance:t}=ec(n,this.axis,!0);const a=Gf(1,s);for(const e of this.axis)a[e]=r[e];const o=e=>null!=e&&e.shape.length!==s&&this.axis!==[s-1]?e.reshape(a):e;let i=o(this.gamma.read()),u=o(this.beta.read());const l=[],c=[];for(let e=0;e<s;++e)-1!==this.axis.indexOf(e)?(l.push(r[e]),c.push(1)):(l.push(1),c.push(r[e]));return e=e.tile(l),t=t.tile(l),i=i.tile(c),u=u.tile(c),ux(n,e,t,u,i,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Cg(this.betaInitializer),gammaInitializer:Cg(this.gammaInitializer),betaRegularizer:Zb(this.betaRegularizer),gammaRegularizer:Zb(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}cx.className="LayerNormalization",zo(cx);class px extends iy{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new Vf(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new Vf(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new Vf(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new ny({ndim:4})]}computeOutputShape(e){let t,n;return e=Jg(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return si((()=>{return t=Xg(e),n=this.padding,r=this.dataFormat,si((()=>{if(4!==t.rank)throw new Vf(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new Vf("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new Vf(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],uc(t,e)}));var t,n,r}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function hx(e,t,n,r,s,a){return si((()=>{let o;$m(s),Om(a),Mm(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),e=pw(e,s);const i="same"===r?"same":"valid";return o="max"===a?Gl(e,t,n,i):xu(e,t,n,i),"channelsFirst"===s&&(o=uo(o,[0,3,1,2])),o}))}function dx(e,t,n,r,s,a){return si((()=>{let o;$m(s),Om(a),Mm(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),e=hw(e,s);const i="same"===r?"same":"valid";return o="max"===a?Hl(e,t,n,i):Su(e,t,n,i),"channelsFirst"===s&&(o=uo(o,[0,4,1,2,3])),o}))}px.className="ZeroPadding2D",zo(px);class fx extends iy{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new Vf(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(um(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new Vf(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}um(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,Mm(this.padding),this.inputSpec=[new ny({ndim:3})]}computeOutputShape(e){const t=lw((e=Jg(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return si((()=>{this.invokeCallHook(e,t),e=Gm(Xg(e),2);const n=this.poolingFunction(Xg(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return ep(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class mx extends fx{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return $m(s),Mm(r),hx(e,t,n,r,s,"max")}}mx.className="MaxPooling1D",zo(mx);class gx extends fx{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return $m(s),Mm(r),hx(e,t,n,r,s,"avg")}}gx.className="AveragePooling1D",zo(gx);class yx extends iy{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new Vf(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];um(this.poolSize,"poolSize"),um(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,$m(this.dataFormat),Mm(this.padding),this.inputSpec=[new ny({ndim:4})]}computeOutputShape(e){e=Jg(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=lw(t,this.poolSize[0],this.padding,this.strides[0]),n=lw(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return si((()=>(this.invokeCallHook(e,t),this.poolingFunction(Xg(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class bx extends yx{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return $m(s),Mm(r),hx(e,t,n,r,s,"max")}}bx.className="MaxPooling2D",zo(bx);class wx extends yx{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return $m(s),Mm(r),hx(e,t,n,r,s,"avg")}}wx.className="AveragePooling2D",zo(wx);class xx extends iy{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new Vf(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];um(this.poolSize,"poolSize"),um(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,$m(this.dataFormat),Mm(this.padding),this.inputSpec=[new ny({ndim:5})]}computeOutputShape(e){e=Jg(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=lw(t,this.poolSize[0],this.padding,this.strides[0]),n=lw(n,this.poolSize[1],this.padding,this.strides[1]),r=lw(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return si((()=>(this.invokeCallHook(e,t),this.poolingFunction(Xg(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Sx extends xx{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return $m(s),Mm(r),dx(e,t,n,r,s,"max")}}Sx.className="MaxPooling3D",zo(Sx);class vx extends xx{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return $m(s),Mm(r),dx(e,t,n,r,s,"avg")}}vx.className="AveragePooling3D",zo(vx);class kx extends iy{constructor(e){super(e),this.inputSpec=[new ny({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new jf}}class Nx extends kx{constructor(e){super(e||{})}call(e,t){return si((()=>{const t=Xg(e);return Ql(t,1)}))}}Nx.className="GlobalAveragePooling1D",zo(Nx);class Ix extends kx{constructor(e){super(e||{})}call(e,t){return si((()=>{const t=Xg(e);return Pl(t,1)}))}}Ix.className="GlobalMaxPooling1D",zo(Ix);class Tx extends iy{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,$m(this.dataFormat),this.inputSpec=[new ny({ndim:4})]}computeOutputShape(e){return e=e,"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new jf}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Cx extends Tx{call(e,t){return si((()=>{const t=Xg(e);return"channelsLast"===this.dataFormat?Ql(t,[1,2]):Ql(t,[2,3])}))}}Cx.className="GlobalAveragePooling2D",zo(Cx);class Ax extends Tx{call(e,t){return si((()=>{const t=Xg(e);return"channelsLast"===this.dataFormat?Pl(t,[1,2]):Pl(t,[2,3])}))}}Ax.className="GlobalMaxPooling2D",zo(Ax);class Ex extends iy{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const r=vy(t.layer,n);delete t.layer;const s={layer:r};return Object.assign(s,t),new e(s)}}class Px extends Ex{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=Jg(e)).length<3)throw new Vf(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=Jg(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return si((()=>Tw(((e,n)=>[Xg(this.layer.call(e,t)),[]]),e=Xg(e),[],!1,null,null,!1,!0)[1]))}}Px.className="TimeDistributed",zo(Px);class $x extends Ex{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=vy(n),t.goBackwards=!0!==t.goBackwards;const r={};var s;if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=vy(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,s=this.mergeMode,om(Em,"BidirectionalMergeMode",s),e.weights)throw new jf("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,s=this.forwardLayer.computeOutputShape(e);return Array.isArray(s)&&Array.isArray(s[0])||(s=[s]),s=s,this.returnState?(r=s.slice(1),t=s[0]):t=s[0],t=t,"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):Qf(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const s=Iw(e,n,r,this.numConstants);if(e=s.inputs,n=s.initialState,r=s.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const a=[],o=[];if(null!=n){const e=n.length;if(e%2>0)throw new Vf("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);const r=n.map((e=>new ny({shape:e.shape})));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),o.push(...r)}if(null!=r)throw new jf("Support for constants in Bidirectional layers is not implemented yet.");const i=a[0]instanceof ry;for(const e of a)if(e instanceof ry!==i)throw new Vf("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(i){const n=[e].concat(a),r=this.inputSpec.concat(o),s=this.inputSpec;this.inputSpec=r;const i=super.apply(n,t);return this.inputSpec=s,i}return super.apply(e,t)}call(e,t){return si((()=>{const n=t.initialState;let r,s,a,o;if(null==n)r=this.forwardLayer.call(e,t),s=this.backwardLayer.call(e,t);else{const a=n.slice(0,n.length/2),o=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:a})),s=this.backwardLayer.call(e,Object.assign(t,{initialState:o}))}return this.returnState&&(Array.isArray(r)&&(a=r.slice(1).concat(s.slice(1))),r=r[0],s=s[0]),this.returnSequences&&(s=Pc(s,1)),"concat"===this.mergeMode?o=Xm([r,s]):"sum"===this.mergeMode?o=yi(r,s):"ave"===this.mergeMode?o=xi(.5,yi(r,s)):"mul"===this.mergeMode?o=xi(r,s):null==this.mergeMode&&(o=[r,s]),this.returnState?null==this.mergeMode?o.concat(a):[o].concat(a):o}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Dm(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),Dm(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=vy(t.layer);if(delete t.layer,null!=t.numConstants)throw new jf("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=n,new e(r)}}function Mx(e){return new ly(e)}function Ox(e){return new aw(e)}function _x(e){return new nw(e)}function Dx(e){return new rw(e)}function Rx(e){return new sw(e)}function zx(e){return new iw(e)}function Fx(e){return new ow(e)}function Lx(e){return new Sw(e)}function qx(e){return new gw(e)}function Bx(e){return new bw(e)}function Wx(e){return new yw(e)}function Vx(e){return new xw(e)}function jx(e){return new vw(e)}function Ux(e){return new kw(e)}function Gx(e){return new Nw(e)}function Hx(e){return new jw(e)}function Kx(e){return new Ww(e)}function Qx(e){return new qw(e)}function Xx(e){return new Bw(e)}function Jx(e){return new Vw(e)}function Yx(e){return new Uw(e)}function Zx(e){return new Gw(e)}function eS(e){return new Hw(e)}function tS(e){return new Qw(e)}function nS(e){return new Jw(e)}function rS(e){return new Zw(e)}function sS(e){return new nx(e)}function aS(e){return new ex(e)}function oS(e){return new tx(e)}function iS(e){return new Yw(e)}function uS(e){return new sx(e)}function lS(e){return new lx(e)}function cS(e){return new cx(e)}function pS(e){return new px(e)}function hS(e){return new gx(e)}function dS(e){return hS(e)}function fS(e){return hS(e)}function mS(e){return new wx(e)}function gS(e){return mS(e)}function yS(e){return mS(e)}function bS(e){return new vx(e)}function wS(e){return bS(e)}function xS(e){return bS(e)}function SS(e){return new Nx(e)}function vS(e){return new Cx(e)}function kS(e){return new Ix(e)}function NS(e){return new Ax(e)}function IS(e){return new mx(e)}function TS(e){return new bx(e)}function CS(e){return new Sx(e)}function AS(e){return new Mw(e)}function ES(e){return new $w(e)}function PS(e){return new _w(e)}function $S(e){return new Ow(e)}function MS(e){return new Pw(e)}function OS(e){return new Ew(e)}function _S(e){return new Lw(e)}function DS(e){return new Fw(e)}function RS(e){return new Cw(e)}function zS(e){return new Dw(e)}function FS(e){return new $x(e)}function LS(e){return new Px(e)}$x.className="Bidirectional",zo($x);const qS=kS,BS=NS,WS=IS,VS=TS;function jS(e){return new ax(e)}function US(e){return new ox(e)}function GS(e){return new ix(e)}function HS(e){return new Kw(e)}function KS(e,t){return Oy(e,t)}function QS(e,t){return zy(e,t)}function XS(e,t){return Fy(e,t)}function JS(e,t){return _y(e,t)}function YS(e,t){return Ly(e,t)}function ZS(e,t){return Ry(e,t)}function ev(e,t){return function(e,t){return si((()=>{const n=Dy(e,t),r=function(e,t){return si((()=>Wl(e.equal(1),t.equal(0)).sum().cast("float32")))}(e,t),s=n.add(r);return nl(fl(s,0),n.div(s),0).cast("float32")}))}(e,t)}function tv(e,t){return Py(e,t)}function nv(e,t){return Iy(e,t)}function rv(e,t){return Ty(e,t)}function sv(e,t){return Ty(e,t)}function av(e,t){return Ty(e,t)}function ov(e,t){return Ny(e,t)}function iv(e,t){return Ny(e,t)}function uv(e,t){return Ny(e,t)}function lv(e){return new Jb(e)}function cv(e){return Qb(t=e),new Jb({l1:null!=t?t.l1:null,l2:0});var t}function pv(e){return Qb(t=e),new Jb({l2:null!=t?t.l2:null,l1:0});var t}class hv extends fy{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof kb))throw new Error("model must be a LayersModel, not some other Container");this.model=e}}function dv(e,t){return e<t}function fv(e,t){return e>t}class mv extends hv{constructor(e){if(super(),null==e&&(e={}),e.restoreBestWeights)throw new jf("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,-1===["auto","min","max"].indexOf(this.mode)&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),"min"===this.mode?this.monitorFunc=dv:"max"===this.mode||-1!==this.monitor.indexOf("acc")?this.monitorFunc=fv:this.monitorFunc=dv,this.monitorFunc===dv&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,null!=this.baseline?this.best=this.baseline:this.best=this.monitorFunc===dv?1/0:-1/0}async onEpochEnd(e,t){await py(t);const n=this.getMonitorValue(t);null!=n&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){null==e&&(e={});const t=e[this.monitor];return null==t&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}}const gv={earlyStopping:function(e){return new mv(e)}};var yv,bv;!function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"}(yv||(yv={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(bv||(bv={}));const wv={};function xv(e,t){const n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};wv[e]=n}function Sv(e){return wv[e]}function vv(e){delete wv[e]}function kv(e,t,n,r,s){const a=t.inputParams[e];if(a&&void 0!==a.inputIndexStart){const e=a.inputIndexStart,o=0===a.inputIndexEnd?void 0:void 0===a.inputIndexEnd?e+1:a.inputIndexEnd;if("tensor"===a.type)return Nv(t.inputNames[a.inputIndexStart],n,r,s);if("tensors"===a.type)return t.inputNames.slice(e,o).map((e=>Nv(e,n,r,s)));const i=Nv(t.inputNames.slice(e)[0],n,r,s),u=i.dataSync();return"number"===a.type?u[0]:Pe(i.shape,u)}const o=t.attrParams[e];return o&&o.value}function Nv(e,t,n,r){const[s,a]=Cv(e);if(null!=r){const e=r.getHashTableHandleByName(s);if(null!=e)return e}const o=n.currentContextIds.find((e=>!!t[Tv(s,e)]));return void 0!==o?t[Tv(s,o)][a]:void 0}function Iv(e,t){const[n,r]=Cv(e);return[Tv(n,t&&t.currentContextId),r]}function Tv(e,t){return t?`${e}-${t}`:e}function Cv(e){const t=e.split(":");return 1===t.length?[e,0]:[t[0],Number(t[t.length-1])]}function Av(e,t,n){let r=kv("pad",e,t,n);if("explicit"===r){r=kv("explicitPaddings",e,t,n);const s=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)s[e][0]=r[2*e],s[e][1]=r[2*e+1];return s}return r}function Ev(e){return e.kept?e:Ba(e)}const Pv=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],$v=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Mv=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}],Ov=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],_v=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],Dv=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Rv=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],zv=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],Fv=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]}],Lv=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}],qv=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Bv=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Wv=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],Vv=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],jv=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],Uv=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],Gv=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]}];class Hv{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[N,I,T,C,A,E,P,_,O,$,D,R,z,F,L,q,M].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e,t={}){const n=e.node,r=[],s=[],a=[],o=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?s.push(e[t.name]):null!=t.input&&0!==t.input.length||a.push(e[t.name]),e)),{});let i=[];const u=[];let l={},c={};null!=t&&(l=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));const p=Object.keys(o);p.forEach((e=>{const t=o[e];t.inputNames.forEach((e=>{const[n]=Iv(e);t.inputs.push(o[n]),o[n].children.push(t)}))})),0===Object.keys(c).length?p.forEach((e=>{const t=o[e];0===t.children.length&&u.push(t)})):Object.keys(c).forEach((e=>{const[t]=Iv(e),n=o[t];null!=n&&(n.signatureKey=c[e],u.push(n))})),Object.keys(l).length>0?Object.keys(l).forEach((e=>{const[t]=Iv(e),n=o[t];n&&(n.signatureKey=l[e],i.push(n))})):i=r;let h={};null!=e.library&&null!=e.library.function&&(h=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const d={nodes:o,inputs:i,outputs:u,weights:s,placeholders:r,signature:t,functions:h};return a.length>0&&(d.initNodes=a),d}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=Sv(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.substr(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const r=n.type;let s;switch(n.type){case"string":s=Qv(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=Qv(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":s=ak(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=ak(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":s=Jv(e.attr,n.tfName,n.defaultValue||0),void 0===s&&n.tfDeprecatedName&&(s=Jv(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":s=sk(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=sk(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":s=Xv(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=Xv(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":s=ik(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=ik(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":s=rk(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=rk(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":s=ok(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=ok(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":s=ek(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=ek(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":s=tk(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=tk(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":s=Zv(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=Zv(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:s,type:r},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let r={};null!=t&&(r=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const s=[],a=[];e.signature.inputArg.forEach((e=>{const[t]=Iv(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:Yv(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,s.push(n),r[t]=n})),Object.keys(r).forEach((e=>{const t=r[e];t.inputNames.forEach((e=>{const[n]=Iv(e);t.inputs.push(r[n]),r[n].children.push(t)}))}));const o=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=Iv(o[e.name]),s=r[t];null!=s&&(s.defaultOutput=n,a.push(s))}));const i=this.mapArgsToSignature(e);return{nodes:r,inputs:s,outputs:a,weights:n,placeholders:[],signature:i}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function Kv(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=Le().global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function Qv(e,t,n,r=!1){const s=e[t];return null!=s?Kv(s.s,r):n}function Xv(e,t,n){const r=e[t];return r?r.b:n}function Jv(e,t,n){const r=e[t]||{},s=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof s?s:parseInt(s,10)}function Yv(e){switch("string"==typeof e&&(e=yv[e]),e){case yv.DT_FLOAT:return"float32";case yv.DT_INT32:case yv.DT_INT64:case yv.DT_INT8:case yv.DT_UINT8:return"int32";case yv.DT_BOOL:return"bool";case yv.DT_DOUBLE:return"float32";case yv.DT_STRING:return"string";default:return null}}function Zv(e,t,n){const r=e[t];return r&&r.func?r.func.name:n}function ek(e,t,n){const r=e[t];return r&&r.type?Yv(r.type):n}function tk(e,t,n){const r=e[t];return r&&r.list&&r.list.type?r.list.type.map((e=>Yv(e))):n}function nk(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"==typeof e.size?e.size:parseInt(e.size,10))):[]}function rk(e,t,n){const r=e[t];return r&&r.shape?nk(r.shape):n}function sk(e,t,n){const r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((e=>"number"==typeof e?e:parseInt(e,10))):n}function ak(e,t,n,r=!1){const s=e[t];return s&&s.list&&s.list.s?s.list.s.map((e=>Kv(e,r))):n}function ok(e,t,n){const r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map((e=>nk(e))):n}function ik(e,t,n){const r=e[t];return r&&r.list&&r.list.b?r.list.b:n}class uk{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return Nv(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return Nv(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return Jv(this.node.rawAttrs,e,t);if(null!=n.s)return Qv(this.node.rawAttrs,e,t);if(null!=n.b)return Xv(this.node.rawAttrs,e,t);if(null!=n.shape)return rk(this.node.rawAttrs,e,t);if(null!=n.type)return ek(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return sk(this.node.rawAttrs,e,t);if(null!=n.list.s)return ak(this.node.rawAttrs,e,t);if(null!=n.list.shape)return ok(this.node.rawAttrs,e,t);if(null!=n.list.b)return ik(this.node.rawAttrs,e,t);if(null!=n.list.type)return tk(this.node.rawAttrs,e,t)}return t}}function lk(e,t,n=""){Y(function(e,t){if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(-1!==e[n]&&-1!==t[n]&&e[n]!==t[n])return!1;return!0}(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}class ck{constructor(e,t,n,r,s,a,o){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=s,this.dynamicSize=a,this.clearAfterRead=o,this.tensors=[],this.closed_=!1,this.idTensor=$i(0),oi(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),lk(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,oi(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return Hs([],[0].concat(this.elementShape));const n=this.readMany(e);return lk(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),tp(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return Hs([],[0].concat(this.elementShape));const t=[];for(let e=0;e<this.size();e++)t.push(e);const n=this.readMany(t);return lk(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),vu(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,fp(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const r=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const s=0===n?0:t.size/n,a=[];si((()=>{t=wu(t,[1,n,s]);for(let n=0;n<e.length;++n){const o=[0,0===n?0:r[n-1],0],i=[1,e[n],s];a[n]=wu(Nu(t,o,i),this.elementShape)}return a}));const o=[];for(let t=0;t<e.length;t++)o[t]=t;this.writeMany(o,a)}}class pk{constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);lk(t,e.shape,"TensorList shape mismatch: "),oi(e)})),this.idTensor=$i(0),this.maxNumElements=r,oi(this.idTensor)}get id(){return this.idTensor.id}copy(){return new pk([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);return lk(e,this.elementShape,"TensorList shape mismatch: "),si((()=>{const t=this.tensors.map((t=>wu(t,e)));return tp(t,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=this.tensors.pop();return lk(n.shape,e,"TensorList shape mismatch: "),wu(n,e)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(lk(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");oi(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);return lk(this.tensors[e].shape,t,"TensorList shape mismatch: "),this.tensors[e]}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);lk(this.elementShape,t.shape,"TensorList shape mismatch: "),oi(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);return lk(this.elementShape,n,"TensorList shape mismatch: "),0===(e=e.slice(0,this.size())).length?Hs([],[0].concat(this.elementShape)):si((()=>{const t=e.map((e=>wu(this.tensors[e],n)));return tp(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);return lk(this.elementShape,t,"TensorList shape mismatch: "),0===this.size()?Hs([],[0].concat(this.elementShape)):si((()=>{const e=this.tensors.map((e=>wu(e,t)));return vu(e,0)}))}}function hk(e,t,n){const[r,s]=kv("fusedOps",e,t,n),a="biasadd"===r,o="prelu"===s,i="fusedbatchnorm"===r,u=kv("numArgs",e,t,n);if(a){if(o&&2!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&1!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(i)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported.");const l=kv("strides",e,t,n),c=Av(e,t,n),p=kv("dataFormat",e,t,n).toUpperCase(),h=kv("dilations",e,t,n),[d,f]=kv("args",e,t,n);return{stride:l,pad:c,dataFormat:p,dilations:h,biasArg:d,preluArg:f,activationFunc:s,leakyreluAlpha:kv("leakyreluAlpha",e,t,n)}}function dk(e,t,n){return{boxes:kv("boxes",e,t,n),scores:kv("scores",e,t,n),maxOutputSize:kv("maxOutputSize",e,t,n),iouThreshold:kv("iouThreshold",e,t,n),scoreThreshold:kv("scoreThreshold",e,t,n),softNmsSigma:kv("softNmsSigma",e,t,n)}}class fk{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=$i(0),this.tensorMap=new Map,oi(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),si((()=>{const e=fp(t),r=n.length,s=e.length;Y(r===s,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${s} elements.`));for(let t=0;t<r;t++){const r=n[t],s=e[t];oi(s),this.tensorMap.set(r,s)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return si((()=>{const e=[];for(let r=0;r<n.length;r++){const s=n[r],a=this.findWithDefault(s,t);e.push(a)}return tp(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}function mk(e,t,n,r){const s=((e,t,n)=>{switch(e.category){case"arithmetic":return si((()=>((e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[yi(kv("a",e,t,n),kv("b",e,t,n))];case"AddN":return[Xi(kv("tensors",e,t,n))];case"FloorMod":case"Mod":return[Zl(kv("a",e,t,n),kv("b",e,t,n))];case"Mul":return[xi(kv("a",e,t,n),kv("b",e,t,n))];case"RealDiv":case"Div":return[wi(kv("a",e,t,n),kv("b",e,t,n))];case"DivNoNan":return[rl(kv("a",e,t,n),kv("b",e,t,n))];case"FloorDiv":return[bi(kv("a",e,t,n),kv("b",e,t,n))];case"Sub":return[zi(kv("a",e,t,n),kv("b",e,t,n))];case"Minimum":return[Jl(kv("a",e,t,n),kv("b",e,t,n))];case"Maximum":return[Vi(kv("a",e,t,n),kv("b",e,t,n))];case"Pow":return[Ri(kv("a",e,t,n),kv("b",e,t,n))];case"SquaredDifference":return[Zc(kv("a",e,t,n),kv("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"basic_math":return si((()=>((e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":return[Li(kv("x",e,t,n))];case"Acos":return[Ki(kv("x",e,t,n))];case"Acosh":return[Qi(kv("x",e,t,n))];case"Asin":return[tu(kv("x",e,t,n))];case"Asinh":return[nu(kv("x",e,t,n))];case"Atan":return[ru(kv("x",e,t,n))];case"Atan2":return[su(kv("x",e,t,n),kv("y",e,t,n))];case"Atanh":return[au(kv("x",e,t,n))];case"Ceil":return[_u(kv("x",e,t,n))];case"Complex":return[Us(kv("real",e,t,n),kv("imag",e,t,n))];case"Cos":return[Hu(kv("x",e,t,n))];case"Cosh":return[Ku(kv("x",e,t,n))];case"Elu":return[al(kv("x",e,t,n))];case"Erf":return[ol(kv("x",e,t,n))];case"Exp":return[il(kv("x",e,t,n))];case"Expm1":return[ll(kv("x",e,t,n))];case"Floor":return[hl(kv("x",e,t,n))];case"Log":return[Il(kv("x",e,t,n))];case"Log1p":return[Tl(kv("x",e,t,n))];case"Imag":return[gl(kv("x",e,t,n))];case"Neg":return[Cl(kv("x",e,t,n))];case"Reciprocal":return[Cc(kv("x",e,t,n))];case"Real":return[Tc(kv("x",e,t,n))];case"Relu":return[Ac(kv("x",e,t,n))];case"Round":return[Dc(kv("x",e,t,n))];case"Selu":return[zc(kv("x",e,t,n))];case"Sigmoid":return[ku(kv("x",e,t,n))];case"Sin":return[Bc(kv("x",e,t,n))];case"Sign":return[qc(kv("x",e,t,n))];case"Sinh":return[Wc(kv("x",e,t,n))];case"Softplus":return[Al(kv("x",e,t,n))];case"Sqrt":return[Si(kv("x",e,t,n))];case"Square":return[vi(kv("x",e,t,n))];case"Tanh":return[Iu(kv("x",e,t,n))];case"Tan":return[sp(kv("x",e,t,n))];case"ClipByValue":return[Du(kv("x",e,t,n),kv("clipValueMin",e,t,n),kv("clipValueMax",e,t,n))];case"Relu6":return[Ec(kv("x",e,t,n))];case"Rsqrt":return[Rc(Nv(e.inputNames[0],t,n))];case"Prod":return[gc(kv("x",e,t,n),kv("axes",e,t,n))];case"LeakyRelu":return[xl(kv("x",e,t,n),kv("alpha",e,t,n))];case"Prelu":return[mc(kv("x",e,t,n),kv("alpha",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"control":return(async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const r=kv("thenBranch",e,t,n),s=kv("elseBranch",e,t,n),a=kv("cond",e,t,n),o=kv("args",e,t,n);return(await a.data())[0]?n.functionMap[r].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap):n.functionMap[s].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=kv("body",e,t,n),s=kv("cond",e,t,n),a=kv("args",e,t,n),o=await n.functionMap[s].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap),i=a.map((e=>e.id));let u=await o[0].data();o.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||e.dispose()}));let l=a;for(;u[0];){const e=l;l=await n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);const t=l.map((e=>e.id));e.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const a=await n.functionMap[s].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);u=await a[0].data(),a.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return l}case"LoopCond":return[Ev(kv("pred",e,t,n))];case"Switch":{const r=kv("pred",e,t,n);let s=kv("data",e,t,n);return s.kept||(s=Ev(s)),(await r.data())[0]?[void 0,s]:[s,void 0]}case"Merge":{const r=e.inputNames.find((e=>void 0!==Nv(e,t,n)));return r?[Ev(Nv(r,t,n))]:void 0}case"Enter":{const r=kv("frameName",e,t,n),s=kv("tensor",e,t,n);return n.enterFrame(r),[Ev(s)]}case"Exit":{const r=kv("tensor",e,t,n);return n.exitFrame(),[Ev(r)]}case"NextIteration":{const r=kv("tensor",e,t,n);return n.nextIteration(),[Ev(r)]}case"TensorArrayV3":{const r=kv("size",e,t,n),s=kv("dtype",e,t,n),a=kv("elementShape",e,t,n),o=kv("dynamicSize",e,t,n),i=kv("clearAfterRead",e,t,n),u=kv("identicalElementShapes",e,t,n),l=kv("name",e,t,n),c=new ck(l,s,r,a,u,o,i);return n.addTensorArray(c),[c.idTensor,$i(1)]}case"TensorArrayWriteV3":{const r=kv("tensorArrayId",e,t,n),s=kv("index",e,t,n),a=kv("tensor",e,t,n),o=n.getTensorArray(r.id);return o.write(s,a),[o.idTensor]}case"TensorArrayReadV3":{const r=kv("tensorArrayId",e,t,n),s=kv("index",e,t,n);return[n.getTensorArray(r.id).read(s)]}case"TensorArrayGatherV3":{const r=kv("tensorArrayId",e,t,n),s=kv("indices",e,t,n),a=kv("dtype",e,t,n);return[n.getTensorArray(r.id).gather(s,a)]}case"TensorArrayScatterV3":{const r=kv("tensorArrayId",e,t,n),s=kv("indices",e,t,n),a=kv("tensor",e,t,n),o=n.getTensorArray(r.id);return o.scatter(s,a),[o.idTensor]}case"TensorArrayConcatV3":{const r=kv("tensorArrayId",e,t,n),s=n.getTensorArray(r.id),a=kv("dtype",e,t,n);return[s.concat(a)]}case"TensorArraySplitV3":{const r=kv("tensorArrayId",e,t,n),s=kv("tensor",e,t,n),a=kv("lengths",e,t,n),o=n.getTensorArray(r.id);return o.split(a,s),[o.idTensor]}case"TensorArraySizeV3":{const r=kv("tensorArrayId",e,t,n);return[$i(n.getTensorArray(r.id).size(),"int32")]}case"TensorArrayCloseV3":{const r=kv("tensorArrayId",e,t,n),s=n.getTensorArray(r.id);return s.clearAndClose(),[s.idTensor]}case"TensorListSetItem":{const r=kv("tensorListId",e,t,n),s=kv("index",e,t,n),a=kv("tensor",e,t,n),o=n.getTensorList(r.id);return o.setItem(s,a),[o.idTensor]}case"TensorListGetItem":{const r=kv("tensorListId",e,t,n),s=kv("index",e,t,n),a=kv("elementShape",e,t,n),o=kv("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(s,a,o)]}case"TensorListScatterV2":case"TensorListScatter":{const r=kv("indices",e,t,n),s=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const s=Math.max(...t);if(null!=r&&-1!==r&&s>=r)throw new Error(`Max index must be < array size (${s}  vs. ${r})`);const a=new pk([],n,e.dtype,r),o=fp(e,0);return t.forEach(((e,t)=>{a.setItem(e,o[t])})),a}(kv("tensor",e,t,n),r,kv("elementShape",e,t,n),kv("numElements",e,t,n));return n.addTensorList(s),[s.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=kv("elementShape",e,t,n),s=kv("elementDType",e,t,n);let a;a="TensorListReserve"===e.op?"numElements":"maxNumElements";const o=function(e,t,n){return new pk([],e,t,n)}(r,s,kv(a,e,t,n));return n.addTensorList(o),[o.idTensor]}case"TensorListGather":{const r=kv("tensorListId",e,t,n),s=kv("indices",e,t,n),a=kv("elementShape",e,t,n),o=kv("elementDType",e,t,n);return[n.getTensorList(r.id).gather(s,o,a)]}case"TensorListStack":{const r=kv("tensorListId",e,t,n),s=kv("elementShape",e,t,n),a=kv("elementDType",e,t,n),o=kv("numElements",e,t,n);return[n.getTensorList(r.id).stack(s,a,o)]}case"TensorListFromTensor":{const r=function(e,t,n){const r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);lk(e.shape.slice(1),t,"TensorList shape mismatch: ");const s=fp(e);return new pk(s,t,r)}(kv("tensor",e,t,n),kv("elementShape",e,t,n),kv("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":{const r=kv("tensorListId",e,t,n),s=n.getTensorList(r.id),a=kv("dtype",e,t,n),o=kv("elementShape",e,t,n);return[s.concat(a,o)]}case"TensorListPushBack":{const r=kv("tensorListId",e,t,n),s=kv("tensor",e,t,n),a=n.getTensorList(r.id);return a.pushBack(s),[a.idTensor]}case"TensorListPopBack":{const r=kv("tensorListId",e,t,n),s=kv("elementShape",e,t,n),a=kv("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(s,a)]}case"TensorListSplit":{const r=kv("tensor",e,t,n),s=kv("elementShape",e,t,n),a=function(e,t,n){let r=0;const s=t.map((e=>(r+=e,r)));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);const a=0===r?0:e.size/r,o=si((()=>{const o=[];e=wu(e,[1,r,a]);for(let r=0;r<t.length;++r){const i=[0,0===r?0:s[r-1],0],u=[1,t[r],a];o[r]=wu(Nu(e,i,u),n)}return e.dispose(),o})),i=new pk([],n,e.dtype,t.length);for(let e=0;e<o.length;e++)i.setItem(e,o[e]);return i}(r,kv("lengths",e,t,n),s);return n.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"convolution":return si((()=>((e,t,n)=>{switch(e.op){case"Conv1D":{const r=kv("stride",e,t,n),s=kv("pad",e,t,n),a=kv("dataFormat",e,t,n).toUpperCase(),o=kv("dilation",e,t,n);return[Bu(kv("x",e,t,n),kv("filter",e,t,n),r,s,a,o)]}case"Conv2D":{const r=kv("strides",e,t,n),s=Av(e,t,n),a=kv("dataFormat",e,t,n).toUpperCase(),o=kv("dilations",e,t,n);return[qu(kv("x",e,t,n),kv("filter",e,t,n),[r[1],r[2]],s,a,[o[1],o[2]])]}case"_FusedConv2D":{const{stride:r,pad:s,dataFormat:a,dilations:o,biasArg:i,preluArg:u,activationFunc:l,leakyreluAlpha:c}=hk(e,t,n);return[Qp({x:kv("x",e,t,n),filter:kv("filter",e,t,n),strides:[r[1],r[2]],pad:s,dataFormat:a,dilations:[o[1],o[2]],bias:i,activation:l,preluActivationWeights:u,leakyreluAlpha:c})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:s,dataFormat:a,dilations:o,biasArg:i,preluArg:u,activationFunc:l,leakyreluAlpha:c}=hk(e,t,n);return[Yp({x:kv("x",e,t,n),filter:kv("filter",e,t,n),strides:[r[1],r[2]],pad:s,dataFormat:a,dilations:[o[1],o[2]],bias:i,activation:l,preluActivationWeights:u,leakyreluAlpha:c})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=kv("outputShape",e,t,n),s=kv("strides",e,t,n),a=Av(e,t,n);return[Vu(kv("x",e,t,n),kv("filter",e,t,n),r,[s[1],s[2]],a)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=kv("strides",e,t,n),s=Av(e,t,n),a=kv("dilations",e,t,n),o=kv("dataFormat",e,t,n).toUpperCase();return[Yu(kv("input",e,t,n),kv("filter",e,t,n),[r[1],r[2]],s,o,[a[1],a[2]])]}case"Conv3D":{const r=kv("strides",e,t,n),s=kv("pad",e,t,n),a=kv("dataFormat",e,t,n).toUpperCase(),o=kv("dilations",e,t,n);return[ju(kv("x",e,t,n),kv("filter",e,t,n),[r[1],r[2],r[3]],s,a,[o[1],o[2],o[3]])]}case"AvgPool":{const r=kv("strides",e,t,n),s=kv("pad",e,t,n),a=kv("kernelSize",e,t,n);return[xu(kv("x",e,t,n),[a[1],a[2]],[r[1],r[2]],s)]}case"MaxPool":{const r=kv("strides",e,t,n),s=kv("pad",e,t,n),a=kv("kernelSize",e,t,n);return[Gl(kv("x",e,t,n),[a[1],a[2]],[r[1],r[2]],s)]}case"MaxPoolWithArgmax":{const r=kv("strides",e,t,n),s=kv("pad",e,t,n),a=kv("kernelSize",e,t,n),o=kv("includeBatchInIndex",e,t,n),{result:i,indexes:u}=Kl(kv("x",e,t,n),[a[1],a[2]],[r[1],r[2]],s,o);return[i,u]}case"AvgPool3D":{const r=kv("strides",e,t,n),s=kv("pad",e,t,n),a=kv("kernelSize",e,t,n);return[Su(kv("x",e,t,n),[a[1],a[2],a[3]],[r[1],r[2],r[3]],s)]}case"MaxPool3D":{const r=kv("strides",e,t,n),s=kv("pad",e,t,n),a=kv("kernelSize",e,t,n);return[Hl(kv("x",e,t,n),[a[1],a[2],a[3]],[r[1],r[2],r[3]],s)]}case"Dilation2D":{const r=kv("strides",e,t,n),s=kv("pad",e,t,n),a=kv("dilations",e,t,n),o=r[1],i=r[2],u=a[1],l=a[2];return[el(kv("x",e,t,n),kv("filter",e,t,n),[o,i],s,[u,l],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"creation":return si((()=>((e,t,n)=>{switch(e.op){case"Fill":{const r=kv("shape",e,t,n),s=kv("dtype",e,t,n);return[_i(r,kv("value",e,t,n),s)]}case"LinSpace":return[kl(kv("start",e,t,n),kv("stop",e,t,n),kv("num",e,t,n))];case"Multinomial":{const r=kv("logits",e,t,n),s=kv("numSamples",e,t,n),a=kv("seed",e,t,n);return[nc(r,s,a)]}case"OneHot":{const r=kv("indices",e,t,n),s=kv("depth",e,t,n),a=kv("onValue",e,t,n),o=kv("offValue",e,t,n);return[io(r,s,a,o)]}case"Ones":return[ac(kv("shape",e,t,n),kv("dtype",e,t,n))];case"OnesLike":return[oc(kv("x",e,t,n))];case"RandomUniform":return[Nc(kv("shape",e,t,n),kv("minval",e,t,n),kv("maxval",e,t,n),kv("dtype",e,t,n))];case"Range":return[Ic(kv("start",e,t,n),kv("stop",e,t,n),kv("step",e,t,n),kv("dtype",e,t,n))];case"TruncatedNormal":{const r=kv("shape",e,t,n),s=kv("mean",e,t,n),a=kv("stdDev",e,t,n),o=kv("seed",e,t,n);return[pp(r,s,a,kv("dtype",e,t,n),o)]}case"Zeros":return[sc(kv("shape",e,t,n),kv("dtype",e,t,n))];case"ZerosLike":return[ki(kv("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"dynamic":return(async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:s,maxOutputSize:a,iouThreshold:o,scoreThreshold:i,softNmsSigma:u}=dk(e,t,n),l=await Fh.nonMaxSuppressionWithScoreAsync(r,s,a,o,i,u);return[l.selectedIndices,l.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:s,maxOutputSize:a,iouThreshold:o,scoreThreshold:i}=dk(e,t,n),u=kv("padToMaxOutputSize",e,t,n),l=await Fh.nonMaxSuppressionPaddedAsync(r,s,a,o,i,u);return[l.selectedIndices,l.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:s,maxOutputSize:a,iouThreshold:o,scoreThreshold:i}=dk(e,t,n);return[await Fh.nonMaxSuppressionAsync(r,s,a,o,i)]}case"Where":{const r=qa(kv("condition",e,t,n),"bool"),s=[await yp(r)];return r.dispose(),s}case"ListDiff":return Lc(kv("x",e,t,n),kv("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return si((()=>((e,t,n)=>{switch(e.op){case"TopKV2":{const r=kv("x",e,t,n),s=kv("k",e,t,n),a=kv("sorted",e,t,n),o=cp(r,s,a);return[o.values,o.indices]}case"Unique":{const r=kv("x",e,t,n),s=hp(r);return[s.values,s.indices]}case"UniqueV2":{const r=kv("x",e,t,n),s=kv("axis",e,t,n),a=hp(r,s);return[a.values,a.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"image":return si((()=>((e,t,n)=>{switch(e.op){case"ResizeBilinear":{const r=kv("images",e,t,n),s=kv("size",e,t,n),a=kv("alignCorners",e,t,n),o=kv("halfPixelCenters",e,t,n);return[Fh.resizeBilinear(r,[s[0],s[1]],a,o)]}case"ResizeNearestNeighbor":{const r=kv("images",e,t,n),s=kv("size",e,t,n),a=kv("alignCorners",e,t,n),o=kv("halfPixelCenters",e,t,n);return[Fh.resizeNearestNeighbor(r,[s[0],s[1]],a,o)]}case"CropAndResize":{const r=kv("image",e,t,n),s=kv("boxes",e,t,n),a=kv("boxInd",e,t,n),o=kv("cropSize",e,t,n),i=kv("method",e,t,n),u=kv("extrapolationValue",e,t,n);return[Fh.cropAndResize(r,s,a,o,i,u)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"graph":return si((()=>((e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const r=kv("default",e,t,n);return[Nv(e.name,t,n)||r];case"Placeholder":return[Nv(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":return[Ev(kv("x",e,t,n))];case"IdentityN":return kv("x",e,t,n).map((e=>Ev(e)));case"Snapshot":return[Ev(kv("x",e,t,n))];case"Shape":return[ap(kv("x",e,t,n).shape,"int32")];case"ShapeN":return kv("x",e,t,n).map((e=>ap(e.shape)));case"Size":return[$i(kv("x",e,t,n).size,"int32")];case"Rank":return[$i(kv("x",e,t,n).rank,"int32")];case"NoOp":return[$i(1)];case"Print":const s=kv("x",e,t,n),a=kv("data",e,t,n),o=kv("message",e,t,n),i=kv("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(o);for(let e=0;e<a.length;e++)console.log(Array.prototype.slice.call(a[e].dataSync()).slice(0,i));return[s];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"logical":return si((()=>((e,t,n)=>{switch(e.op){case"Equal":return[tl(kv("a",e,t,n),kv("b",e,t,n))];case"NotEqual":return[rc(kv("a",e,t,n),kv("b",e,t,n))];case"Greater":return[fl(kv("a",e,t,n),kv("b",e,t,n))];case"GreaterEqual":return[ml(kv("a",e,t,n),kv("b",e,t,n))];case"Less":return[Sl(kv("a",e,t,n),kv("b",e,t,n))];case"LessEqual":return[vl(kv("a",e,t,n),kv("b",e,t,n))];case"LogicalAnd":return[Wl(kv("a",e,t,n),kv("b",e,t,n))];case"LogicalNot":return[Vl(kv("a",e,t,n))];case"LogicalOr":return[jl(kv("a",e,t,n),kv("b",e,t,n))];case"Select":case"SelectV2":return[nl(kv("condition",e,t,n),kv("a",e,t,n),kv("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"matrices":return si((()=>((e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[oo(kv("a",e,t,n),kv("b",e,t,n),kv("transposeA",e,t,n),kv("transposeB",e,t,n))];case"Transpose":return[uo(kv("x",e,t,n),kv("perm",e,t,n))];case"_FusedMatMul":const[r,s]=kv("fusedOps",e,t,n),a="biasadd"===r,o="prelu"===s,i=kv("numArgs",e,t,n),u=kv("leakyreluAlpha",e,t,n);if(a){if(o&&2!==i)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&1!==i)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[l,c]=kv("args",e,t,n);return[Zp({a:kv("a",e,t,n),b:kv("b",e,t,n),transposeA:kv("transposeA",e,t,n),transposeB:kv("transposeB",e,t,n),bias:l,activation:s,preluActivationWeights:c,leakyreluAlpha:u})];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"normalization":return si((()=>((e,t,n)=>{switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[Au(kv("x",e,t,n),kv("mean",e,t,n),kv("variance",e,t,n),kv("offset",e,t,n),kv("scale",e,t,n),kv("epsilon",e,t,n))];case"LRN":return[Nl(kv("x",e,t,n),kv("radius",e,t,n),kv("bias",e,t,n),kv("alpha",e,t,n),kv("beta",e,t,n))];case"Softmax":return[Hc(kv("x",e,t,n))];case"LogSoftmax":return[Ml(kv("x",e,t,n))];case"SparseToDense":return[Fp(kv("sparseIndices",e,t,n),kv("outputShape",e,t,n),kv("sparseValues",e,t,n),kv("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"reduction":return si((()=>((e,t,n)=>{switch(e.op){case"Max":{const r=kv("axis",e,t,n),s=kv("keepDims",e,t,n);return[Pl(kv("x",e,t,n),r,s)]}case"Mean":{const r=kv("axis",e,t,n),s=kv("keepDims",e,t,n);return[Ql(kv("x",e,t,n),r,s)]}case"Min":{const r=kv("axis",e,t,n),s=kv("keepDims",e,t,n);return[Xl(kv("x",e,t,n),r,s)]}case"Sum":{const r=kv("axis",e,t,n),s=kv("keepDims",e,t,n);return[$l(kv("x",e,t,n),r,s)]}case"All":{const r=kv("axis",e,t,n),s=kv("keepDims",e,t,n);return[Ji(kv("x",e,t,n),r,s)]}case"Any":{const r=kv("axis",e,t,n),s=kv("keepDims",e,t,n);return[Yi(kv("x",e,t,n),r,s)]}case"ArgMax":{const r=kv("axis",e,t,n);return[Zi(kv("x",e,t,n),r)]}case"ArgMin":{const r=kv("axis",e,t,n);return[eu(kv("x",e,t,n),r)]}case"Prod":{const r=kv("axis",e,t,n),s=kv("keepDims",e,t,n);return[gc(kv("x",e,t,n),r,s)]}case"Cumsum":{const r=kv("axis",e,t,n),s=kv("exclusive",e,t,n),a=kv("reverse",e,t,n);return[Qu(kv("x",e,t,n),r,s,a)]}case"Bincount":const r=kv("x",e,t,n),s=kv("weights",e,t,n),a=kv("size",e,t,n);return[Mu(r,s,a)];case"DenseBincount":{const r=kv("x",e,t,n),s=kv("weights",e,t,n),a=kv("size",e,t,n),o=kv("binaryOutput",e,t,n);return[Xu(r,s,a,o)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"slice_join":return si((()=>((e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{const r=kv("n",e,t,n),s=kv("axis",e,t,n);let a=kv("tensors",e,t,n);return a=a.slice(0,r),[vu(a,s)]}case"Gather":{const r=kv("x",e,t,n),s=kv("indices",e,t,n);return[dl(r,qa(s,"int32"),0)]}case"GatherV2":{const r=kv("axis",e,t,n),s=kv("batchDims",e,t,n),a=kv("x",e,t,n),o=kv("indices",e,t,n);return[dl(a,qa(o,"int32"),r,s)]}case"Reverse":{const r=kv("dims",e,t,n),s=[];for(let e=0;e<r.length;e++)r[e]&&s.push(e);const a=kv("x",e,t,n);return[Pc(a,s)]}case"ReverseV2":{const r=kv("axis",e,t,n),s=kv("x",e,t,n);return[Pc(s,r)]}case"Slice":{const r=kv("begin",e,t,n),s=kv("size",e,t,n);return[Nu(kv("x",e,t,n),r,s)]}case"StridedSlice":{const r=kv("begin",e,t,n),s=kv("end",e,t,n),a=kv("strides",e,t,n),o=kv("beginMask",e,t,n),i=kv("endMask",e,t,n),u=kv("ellipsisMask",e,t,n),l=kv("newAxisMask",e,t,n),c=kv("shrinkAxisMask",e,t,n),p=kv("x",e,t,n);return[rp(p,r,s,a,o,i,u,l,c)]}case"Pack":return si((()=>{const r=kv("axis",e,t,n),s=kv("tensors",e,t,n),a=s[0].shape,o=ep(s[0]).shape,i=s.map((e=>{const t=se(e.shape,a);if(!t&&!se(ep(e).shape,o))throw new Error("the input tensors shape does not match");return t?e:wu(e,a)}));return[tp(i,r)]}));case"Unpack":{const r=kv("axis",e,t,n),s=kv("tensor",e,t,n);return fp(s,r)}case"Tile":{const r=kv("reps",e,t,n);return[cl(kv("x",e,t,n),r)]}case"Split":case"SplitV":{const r=kv("axis",e,t,n),s=kv("numOrSizeSplits",e,t,n),a=kv("x",e,t,n);return Jc(a,s,r)}case"ScatterNd":{const r=kv("indices",e,t,n),s=kv("values",e,t,n),a=kv("shape",e,t,n);return[zp(r,s,a)]}case"GatherNd":{const r=kv("x",e,t,n),s=kv("indices",e,t,n);return[Lp(r,s)]}case"SparseToDense":{const r=kv("sparseIndices",e,t,n),s=kv("outputShape",e,t,n),a=kv("sparseValues",e,t,n),o=kv("defaultValue",e,t,n);return[Fp(r,a,s,a.dtype===o.dtype?o:qa(o,a.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"spectral":return si((()=>((e,t,n)=>{switch(e.op){case"FFT":return[Kc(kv("x",e,t,n))];case"IFFT":return[Qc(kv("x",e,t,n))];case"RFFT":return[Yc(kv("x",e,t,n))];case"IRFFT":return[Xc(kv("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"transformation":return si((()=>((e,t,n)=>{switch(e.op){case"Cast":return[qa(kv("x",e,t,n),kv("dtype",e,t,n))];case"ExpandDims":{const r=kv("axis",e,t,n);return[ul(kv("x",e,t,n),r)]}case"Squeeze":{const r=kv("axis",e,t,n);return[ep(kv("x",e,t,n),r)]}case"Reshape":return[wu(kv("x",e,t,n),kv("shape",e,t,n))];case"MirrorPad":return[Yl(kv("x",e,t,n),kv("padding",e,t,n),kv("mode",e,t,n))];case"PadV2":case"Pad":return[uc(kv("x",e,t,n),kv("padding",e,t,n),kv("constantValue",e,t,n))];case"SpaceToBatchND":{const r=kv("blockShape",e,t,n),s=kv("paddings",e,t,n);return[dc(kv("x",e,t,n),r,s)]}case"BatchToSpaceND":{const r=kv("blockShape",e,t,n),s=kv("crops",e,t,n);return[Cu(kv("x",e,t,n),r,s)]}case"DepthToSpace":{const r=kv("blockSize",e,t,n),s=kv("dataFormat",e,t,n).toUpperCase();return[Ju(kv("x",e,t,n),r,s)]}case"BroadcastTo":return[Ou(kv("x",e,t,n),kv("shape",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"hash_table":return(async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{const s=kv("keyDType",e,t,n),a=kv("valueDType",e,t,n),o=new fk(s,a);return r.addHashTable(e.name,o),[o.handle]}case"LookupTableImport":case"LookupTableImportV2":{const s=kv("tableHandle",e,t,n,r),a=kv("keys",e,t,n),o=kv("values",e,t,n),i=r.getHashTableById(s.id);return[await i.import(a,o)]}case"LookupTableFind":case"LookupTableFindV2":{const s=kv("tableHandle",e,t,n,r),a=kv("keys",e,t,n),o=kv("defaultValue",e,t,n),i=r.getHashTableById(s.id);return[await i.find(a,o)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n,r);case"custom":const s=Sv(e.op);if(s&&s.customExecutor)return s.customExecutor(new uk(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return ze(s)?s.then((e=>[].concat(e))):[].concat(s)}class gk{constructor(e={},t={},n={},r={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function yk(e,t,n,r){const s=new Set,a=[];let o=null,i=null;const u=new Set,l=Object.keys(e).map((e=>Cv(e)[0]));let c=[];null!=r&&(c=r.map((e=>Cv(e.name)[0])));const p=[...t];for(;p.length>0;){const e=p.pop();(Sk(e)||vk(e)||kk(e))&&null==o&&(o=e,i=o.children.map((e=>e.name)).filter((e=>s.has(e)))),s.add(e.name),null==n[e.name]&&-1===l.indexOf(e.name)&&-1===c.indexOf(e.name)&&(0!==e.inputs.length?e.inputs.forEach((e=>{u.has(e.name)||(u.add(e.name),p.push(e))})):a.push(e.name))}return{inputs:e,outputs:t,usedNodes:s,missingInputs:a,dynamicNode:o,syncInputs:i}}const bk=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],wk=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],xk=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2"];function Sk(e){return bk.indexOf(e.op)>=0}function vk(e){return wk.indexOf(e.op)>=0}function kk(e){return xk.indexOf(e.op)>=0}class Nk{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new Nk(e.functions[t],this)}))}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),r=t.map((e=>e.name)).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(e,t){const n=yk(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:s,syncInputs:a}=n;if(null!=s)throw new Error(`This execution contains the node '${s.name}', which has the dynamic op '${s.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(r.length>0){const n=t.map((e=>e.name)),s=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${s}]. Missing the following inputs: [${r}]`)}return function(e,t,n){const{usedNodes:r,inputs:s}=n,a=[],o=Object.keys(s).map((e=>Cv(e)[0])).map((t=>e.nodes[t])),i=e.initNodes;o.forEach((e=>{r.has(e.name)&&a.push(e)})),e.weights.forEach((e=>{r.has(e.name)&&a.push(e)})),null!=i&&i.forEach((e=>{r.has(e.name)&&a.push(e)}));const u=new Set,l=[];for(;a.length>0;){const e=a.pop();u.add(e.name),t[e.name]||l.push(e),e.children.forEach((e=>{!u.has(e.name)&&r.has(e.name)&&e.inputs.every((e=>u.has(e.name)))&&a.push(e)}))}return l}(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=n.map((e=>this.graph.nodes[Cv(e)[0]])),s=t.map((e=>Cv(e)[0]));let a=s.map((e=>this.graph.nodes[e]));0===a.length&&(a=this._outputs);const o=this.getCompilationKey(r,a);let i=this.compiledMap.get(o);null==i&&(i=this.compile(e,a),this.compiledMap.set(o,i));const u={},l={};return si((()=>{const n=new gk(this.weightMap,u,l,this.functionExecutorMap),r=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,s]=Cv(t),a=[];a[s]=e[t],r[n]=a}));const a=this.getFrozenTensorIds(r),o={};for(let e=0;e<i.length;e++){const t=i[e];if(!r[t.name]){const e=mk(t,r,n,this._resourceManager);if(ze(e))throw new Error(`The execution of the op '${t.op}' returned a promise. Please use model.executeAsync() instead.`);r[t.name]=e,this.checkTensorForDisposal(t.name,t,r,n,a,s,o)}}return null==this.parent&&n.dispose(a),t.map((e=>Nv(e,r,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,r,s,a,o){"control"!==t.category&&-1===a.indexOf(e)&&(n[e].forEach((e=>{null!=e&&(o[e.id]=(o[e.id]||0)+t.children.length)})),t.inputs.forEach((e=>{if("control"!==e.category){const t=function(e,t,n){return t[Tv(e,n.currentContextId)]}(e.name,n,r);null!=t&&t.forEach((e=>{if(e&&!s.has(e.id)){const t=o[e.id];1===t?(e.dispose(),delete o[e.id]):null!=t&&o[e.id]--}}))}})))}async executeAsync(e,t){return this._executeAsync(e,t)}async _executeAsync(e,t,n=!1,r={},s={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));const a=new gk(this.weightMap,r,s,this.functionExecutorMap),o=await this.executeWithControlFlow(e,a,t,n),i=t.map((e=>Nv(e,o,a))),u=i.map((e=>e.id)),l=Object.keys(e).map((t=>e[t].id)),c=new Set([...u,...l,...this.weightIds]);return Object.keys(o).forEach((e=>{o[e].forEach((e=>{!e||e.isDisposed||c.has(e.id)||e.dispose()}))})),null==this.parent&&a.dispose(c),i}async executeFunctionAsync(e,t,n){const r=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){const s=Object.keys(e),a=s.map((e=>this.graph.nodes[Cv(e)[0]])),o=n.map((e=>Cv(e)[0]));let i=o.map((e=>this.graph.nodes[e]));0===i.length&&(i=this._outputs);const{usedNodes:u,missingInputs:l,dynamicNode:c,syncInputs:p}=yk(e,i,this.weightMap,this._initNodes),h=[...a,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),d=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,r]=Cv(t),s=[];s[r]=e[t],d[n]=s}));const f={},m=this.getFrozenTensorIds(d),g={};for(;h.length>0;){const e=this.processStack(a,h,t,d,g,m,o,f,u);await Promise.all(e)}null!=c||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const y=i.filter((e=>!Sk(e)&&!Nv(e.name,d,t))).map((e=>e.name));if(y.length>0){let e="";throw null!=c&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${p}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${s}]. Consider providing the following inputs: [${l}]. ${e}`)}return d}processStack(e,t,n,r,s,a,o,i,u){const l=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let c="";if("Enter"===e.node.op&&kv("isConstant",e.node,r,n)&&([c]=Iv(e.node.name,n)),null==r[e.node.name]){const p=mk(e.node,r,n,this._resourceManager);c||([c]=Iv(e.node.name,n));const h=n.currentContext;ze(p)?l.push(p.then((l=>(r[c]=l,n.currentContext=h,this.checkTensorForDisposal(c,e.node,r,n,a,o,i),this.processChildNodes(e.node,t,n,r,s,u),l)))):(r[c]=p,this.checkTensorForDisposal(c,e.node,r,n,a,o,i),this.processChildNodes(e.node,t,n,r,s,u))}else this.processChildNodes(e.node,t,n,r,s,u)}return l}processChildNodes(e,t,n,r,s,a){e.children.forEach((e=>{const[o]=Iv(e.name,n);!s[o]&&a.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!Nv(e,r,n)))&&(s[o]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!Nv(e,r,n)))&&(s[o]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[r]=Cv(t),s=this.graph.nodes[r];if(s.attrParams.shape&&s.attrParams.shape.value){const e=s.attrParams.shape.value;Y(e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t)),(()=>`The shape of dict['${s.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}s.attrParams.dtype&&s.attrParams.dtype.value&&Y(n.dtype===s.attrParams.dtype.value,(()=>`The dtype of dict['${s.name}'] provided in model.execute(dict) must be ${s.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){const t={};for(const n in e)null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]?t[this._signature.inputs[n].name]=e[n]:t[n]=e[n];return t}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=Cv(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[e]?this._signature.outputs[e].name:e),{})}checkOutputs(e){e.forEach((e=>{const[t]=Cv(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}}class Ik{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}class Tk{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",null==t&&(this.loadOptions={}),this.resourceManager=new Ik}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=to(e,this.loadOptions);else{const t=ua(e,this.loadOptions);if(0===t.length)t.push(to(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let n;n=null!=this.artifacts.userDefinedMetadata&&null!=this.artifacts.userDefinedMetadata.signature?this.artifacts.userDefinedMetadata.signature:this.artifacts.signature,this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const r=Xs(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new Nk(Hv.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=Hv.Instance.transformGraph(e.modelInitializer);this.initializer=new Nk(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if("string"==typeof e){const t=ia(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof ms||Array.isArray(e)))return e;if((e=Array.isArray(e)?e:[e]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce(((t,n,r)=>(t[n]=e[r],t)),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function Ck(e,t={}){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&null==e.load&&(e.endsWith("/")||(e+="/"),e=`${e}model.json?tfjs-format=file`);const n=new Tk(e,t);return await n.load(),n}const Ak="2.8.6";function Ek(e,t,n=new Map,r=new Set){if(null==e)return null;if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(s.recurse){if(_k(e)){const s=Array.isArray(e)?[]:{};r.add(e);for(const a in e){const o=Ek(e[a],t,n,r);s[a]=o}return r.delete(e),s}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,s.value),s.value}function Pk(e,t=Mk){return $k(e,t)}function $k(e,t,n=new Set){const r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(s.recurse){if(_k(r)){const s=Array.isArray(r)?[]:{};n.add(r);for(const a in r){const r=$k(e.map((e=>e[a])),t,n);s[a]=r}return n.delete(r),s}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return s.value}function Mk(e){return null===e?null:_k(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function Ok(e,t){const n=new Map;Ek(e,t,n);for(const e of Array.from(n.keys())){const t=n.get(e);if(ze(t)){const r=await t;n.set(e,r)}}return Ek(e,t,n)}function _k(e){return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof ms))}function Dk(e){return e instanceof ms?{value:e.clone(),recurse:!1}:_k(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class Rk{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class zk extends Rk{constructor(){super(zk.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function Fk(e){return new Bk(e)}function Lk(e){return new Wk(e)}zk.INITIAL_CAPACITY=32;class qk{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new Qk(this,e)}filter(e){return new Hk(this,e)}map(e){return new Kk(this,e)}mapAsync(e){return new Xk(this,e)}serialMapAsync(e){return new Xk(this,e).serial()}flatmap(e){return new Yk(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new Gk(this,e,t)}columnMajorBatch(e,t=!0,n=Mk){return this.rowMajorBatch(e,t).map((e=>Pk(e,n)))}concatenate(e,t){return new Zk(Fk([this,e]),t)}take(e){return e<0||null==e?this:new Uk(this,e)}skip(e){return e<0||null==e?this:new jk(this,e)}prefetch(e){return new nN(this,e)}shuffle(e,t){return new rN(this,e,t)}serial(){return new Vk(this)}}class Bk extends qk{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:(t=e,function(e,t){return Ek(e,t)}(t,Dk)),done:!1};var t}}class Wk extends qk{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class Vk extends qk{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class jk extends qk{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;ai(e.value)}return this.upstream.next()}}class Uk extends qk{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class Gk extends qk{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class Hk extends qk{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;ai(e.value)}}}class Kk extends qk{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=As(e.value),n=this.transform(e.value),r=As(n);for(const e of t)Cs(e,r)||e.dispose();return{value:n,done:!1}}}class Qk extends qk{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class Xk extends qk{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=As(e.value),n=await this.transform(e.value),r=As(n);for(const e of t)Cs(e,r)||e.dispose();return{value:n,done:!1}}}class Jk extends qk{constructor(){super(),this.outputQueue=new zk,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class Yk extends Jk{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=As(e.value),n=this.transform(e.value),r=As(n);this.outputQueue.pushAll(n);for(const e of t)Cs(e,r)||e.dispose();return!0}}class Zk extends qk{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}var eN;!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(eN||(eN={}));class tN extends qk{constructor(e,t=eN.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;const r=await Ok(this.iterators,(function(e){return e instanceof qk?{value:e.next().then((e=>(t++,e.done&&n++,e.value))),recurse:!1}:{value:null,recurse:!0}}));if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case eN.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case eN.SHORTEST:return{value:null,done:!0};case eN.LONGEST:}return this.count++,{value:r,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}}class nN extends qk{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new Rk(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class rN extends nN{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=bc.alea(n||is().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class sN{constructor(){this.size=null}batch(e,t=!0){const n=this;let r;return Y(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),r=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),aN((async()=>(await n.iterator()).columnMajorBatch(e,t,uN)),r)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,aN((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,aN((async()=>(await t.iterator()).filter((t=>si((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return aN((async()=>(await t.iterator()).map((t=>si((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return aN((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return aN((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,aN((async()=>{return n=Lk((async()=>({value:await t.iterator(),done:!1}))).take(e),new Zk(n,r);var n,r}),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,aN((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,s=bc.alea(t||is().toString());return aN((async()=>{let t=s.int32();return n&&(t+=s.int32()),(await r.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,aN((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function aN(e,t=null){return new class extends sN{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function oN(e){return aN((async()=>Fk(e)),e.length)}function iN(e){if(!_k(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=null==t?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(const n in e)t=null==t?e[n].size:Math.min(t,e[n].size);return aN((async()=>function(e,t=eN.FAIL){return new tN(e,t)}(await Ok(e,(e=>{if(e instanceof sN)return{value:e.iterator(),recurse:!1};if(_k(e))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")})),eN.SHORTEST)),t)}function uN(e){if(null===e)return null;return null==(t=e[0])||null===(n=t)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(t)||"object"==typeof t&&t instanceof ms||we(t)?{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof ms?tp(e):Hs(e)}(e),recurse:!1}:{value:null,recurse:!0};var t,n}sN.MAX_BUFFER_SIZE=1e4;class lN extends sN{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split("\n").map((e=>(e.endsWith("\r")&&(e=e.slice(0,-1)),e)))}}const cN='"',pN=Symbol("out"),hN=Symbol("field"),dN=Symbol("quote"),fN=Symbol("quoteafterquote"),mN=Symbol("quoteinquote");class gN extends sN{constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new lN(e),t||(t={}),this.hasHeader=!1!==t.hasHeader,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(Y(null==t.delimiter,(()=>"Delimiter should not be provided when delimWhitespace is true.")),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){const e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&Y(e.length===this.fullColumnNames.length,(()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+").")),this.fullColumnNames||(this.fullColumnNames=e);const t=this.fullColumnNames.reduce(((e,t)=>(e[t]=e[t]+1||1,e)),{}),n=Object.keys(t).filter((e=>t[e]>1));if(Y(0===n.length,(()=>"Duplicate column names found: "+n.toString())),this.columnConfigs)for(const e of Object.keys(this.columnConfigs))if(-1===this.fullColumnNames.indexOf(e))throw new Error('The key "'+e+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").");this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){const e=await this.base.iterator(),t=await e.next();if(t.done)throw new Error("No data was found for CSV parsing.");const n=t.value;return this.parseRow(n,!1)}return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map((e=>this.makeDataElement(e)))}makeDataElement(e){const t=this.parseRow(e),n={},r={};for(let s=0;s<this.fullColumnNames.length;s++){const a=this.fullColumnNames[s],o=this.columnConfigs?this.columnConfigs[a]:null;if(!this.configuredColumnsOnly||o){const i=t[s];let u=null;if(""===i)if(o&&void 0!==o.default)u=o.default;else{if(o&&(o.required||o.isLabel))throw new Error(`Required column ${a} is empty in this line: ${e}`);u=void 0}else{const e=Number(i);if(isNaN(e))u=o&&"bool"===o.dtype?this.getBoolean(i):i;else if(o&&o.dtype)switch(o.dtype){case"float32":u=e;break;case"int32":u=Math.floor(e);break;case"bool":u=this.getBoolean(i);break;default:u=e}else u=e}o&&o.isLabel?r[a]=u:n[a]=u}}return 0===Object.keys(r).length?n:{xs:n,ys:r}}getBoolean(e){return"1"===e||"true"===e.toLowerCase()?1:0}parseRow(e,t=!0){const n=[];let r=0;const s=e.length;let a=pN;for(let t=0;t<s;t++)switch(a){case pN:switch(e.charAt(t)){case cN:r=t+1,a=dN;break;case this.delimiter:if(r=t+1," "===this.delimiter&&this.delimWhitespace)break;n.push(""),a=pN;break;default:a=hN,r=t}break;case hN:switch(e.charAt(t)){case this.delimiter:n.push(e.substring(r,t)),a=pN,r=t+1}break;case dN:switch(e.charAt(t)){case cN:a=fN}break;case fN:switch(e.charAt(t)){case this.delimiter:n.push(e.substring(r,t-1)),a=pN,r=t+1;break;case cN:a=dN;break;default:a=mN}break;case mN:switch(e.charAt(t)){case cN:a=dN}}if(a===fN?n.push(e.substring(r,s-1)):n.push(e.substring(r)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}}class yN extends qk{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;const t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=!1!==e.includeSpectrogram,this.includeWaveform=!0===e.includeWaveform,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(Le().get("IS_NODE"))throw new Error("microphone API is only supported in browser environment.");const t=new yN(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:null==this.audioTrackConstraints||this.audioTrackConstraints,video:!1})}catch(e){throw new Error(`Error thrown while initializing video stream: ${e.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");const e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,this.sampleRateHz){if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`)}else this.sampleRateHz=this.audioContext.sampleRate;const t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=2*this.fftSize,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t;const n=await this.getAudioData();if(this.includeSpectrogram){const t=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(t,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){const e=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(e,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){const e=[],t=[];let n=0;return new Promise((r=>{const s=setInterval((()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&r({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(s),r({freqDataQueue:e,timeDataQueue:t}))}),this.fftSize/this.sampleRateHz*1e3)}))}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){const t=e[0].length,n=new Float32Array(e.length*t);return e.forEach(((e,r)=>n.set(e,r*t))),n}getTensorFromAudioDataArray(e,t){const n=new Float32Array(ne(t));return n.set(e,n.length-e.length),Hs(n,t)}}class bN extends qk{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=ap([0],"int32"),this.webcamConfig.centerCrop){const e=1*this.webcamConfig.resizeWidth/this.webcamVideoElement.width,t=1*this.webcamConfig.resizeHeight/this.webcamVideoElement.height,n=(1-e)/2,r=(1-t)/2,s=n+e,a=t+r;this.cropBox=op([r,n,a,s],[1,4])}else this.cropBox=op([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(Le().get("IS_NODE"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}const n=new bN(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&Y("user"===this.webcamConfig.facingMode||"environment"===this.webcamConfig.facingMode,(()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`));try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise((e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}}))}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=fo(this.webcamVideoElement)}catch(e){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(e)}`)}if(!this.resize)return{value:e,done:!1};try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(e){throw new Error(`Error thrown cropping the video: ${e.message}`)}finally{e.dispose()}}needToResize(){return!(!this.webcamConfig.resizeWidth||!this.webcamConfig.resizeHeight||this.webcamVideoElement.width===this.webcamConfig.resizeWidth&&this.webcamVideoElement.height===this.webcamConfig.resizeHeight)}cropAndResizeFrame(e){return si((()=>{const t=e.toFloat().expandDims(0);let n;n=Fh.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");const r=n.shape;return n.reshape(r.slice(1))}))}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach((e=>e.stop()));try{this.webcamVideoElement.srcObject=null}catch(e){console.log(e),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}}class wN{}class xN extends qk{split(e){return new SN(this,e)}}class SN extends xN{constructor(e,t){super(),this.upstream=e,this.impl=new vN(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class vN extends Jk{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){const e=await this.upstream.next();if(e.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);const t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(const e of t.slice(0,-1))this.outputQueue.push(e);return this.carryover=t[t.length-1],!0}}class kN extends qk{decodeUTF8(){return new NN(this)}}class NN extends xN{constructor(e){super(),this.upstream=e,this.impl=new IN(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class IN extends Jk{constructor(e){if(super(),this.upstream=e,Le().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:e}=n(434);this.decoder=new e("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){const e=await this.upstream.next();let t,n;return!e.done&&(t=e.value,n=Le().get("IS_BROWSER")?this.decoder.decode(t,{stream:!0}):this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(n),!0)}}class TN extends kN{constructor(e,t={}){super(),this.file=e,this.options=t,Y(e instanceof Uint8Array||!!Le().get("IS_BROWSER")&&(e instanceof File||e instanceof Blob),(()=>"FileChunkIterator only supports File, Blob and Uint8Array right now.")),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1048576}summary(){return`FileChunks ${this.file}`}async next(){if(this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size))return{value:null,done:!0};const e=new Promise(((e,t)=>{const n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,n)));else{const r=new FileReader;r.onload=n=>{let s=r.result;if(s instanceof ArrayBuffer&&(s=new Uint8Array(s)),!(s instanceof Uint8Array))return t(new TypeError("FileReader returned unknown type."));e(s)},r.onabort=e=>t(new Error("Aborted")),r.onerror=e=>t(new Error(e.type));const s=this.file.slice(this.offset,n);r.readAsArrayBuffer(s)}this.offset=n}));return{value:await e,done:!1}}}function CN(e){return"string"==typeof e&&"file://"===e.substr(0,7)}class AN extends wN{constructor(e,t={}){super(),this.input=e,this.options=t}async iterator(){if(CN(this.input)&&Le().get("IS_NODE")){const e=n(792);this.input=e.readFileSync(this.input.substr(7))}return new TN(this.input,this.options)}}class EN extends wN{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}async iterator(){return CN(this.url)?new AN(this.url,this.fileOptions).iterator():async function(e,t={}){let n,r;var s;"string"==typeof e?n=e:(n=e.url,r={method:(s=e).method,headers:s.headers,body:s.body,mode:s.mode,credentials:s.credentials,cache:s.cache,redirect:s.redirect,referrer:s.referrer,integrity:s.integrity});const a=await us(n,r);if(a.ok){const e=new Uint8Array(await a.arrayBuffer());return new TN(e,t)}throw new Error(a.statusText)}(this.url,this.fileOptions)}}function PN(e,t={}){return new gN(new EN(e),t)}function $N(e){const t=Lk(e);return aN((async()=>t))}function MN(e){return aN((async()=>{const t=await e();return Lk((()=>t.next()))}))}async function ON(e,t){return bN.create(e,t)}async function _N(e){return yN.create(e)}const DN="2.8.6";function RN(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&Y("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}const zN=gp;class FN extends j{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new V(this,ti())}write(e,t,n){this.firstUse&&(this.firstUse=!1,Le().get("IS_NODE")&&ld("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const r={};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&ve(n[0])){const s=n.map((e=>ls(e)));r=this.write(s,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,t,n,r){this.data.set(e,{values:t,dtype:r,refCount:1})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);return"complex64"===t?pd(this.readSync(n.real.dataId),this.readSync(n.imag.dataId)):this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>cs(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return La(e.shape,e.dtype,n)}makeOutput(e,t,n){const r=this.write(e,t,n);return ti().makeTensorFromDataId(r,t,n,this)}disposeData(e){if(this.data.has(e)){const{complexTensorInfos:t}=this.data.get(e);null!=t&&(this.disposeData(t.real.dataId),this.disposeData(t.imag.dataId)),this.data.delete(e)}}disposeIntermediateTensorInfo(e){const t=e.dataId;if(this.data.has(t)){const e=this.data.get(t);e.refCount--,e.refCount<1&&this.disposeData(t)}}async time(e){const t=is();return e(),{kernelMs:is()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){RN([e],"where");const t=this.readSync(e.dataId);return zN(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function LN(e,t,n){return({inputs:r,attrs:s,backend:a})=>{const{x:o}=r;if(RN(o,e),"string"===o.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const i=a,u=i.data.get(o.dataId).values,l=ne(o.shape),c=n||o.dtype,p=me(c,l);for(let e=0;e<l;++e)p[e]=t(u[e],s);return i.makeTensorInfo(o.shape,c,p)}}function qN(e,t,n){return({inputs:r,attrs:s,backend:a})=>{const{x:o}=r;if(RN(o,e),"string"===o.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const i=a,u=i.data.get(o.dataId).values,l=n||o.dtype,c=t(u,l,s);return i.makeTensorInfo(o.shape,l,c)}}fi("cpu",(()=>new FN),1);const BN=LN(Ft,(e=>e>=0?e:Math.exp(e)-1)),WN={kernelName:Ft,backendName:"cpu",kernelFunc:BN};function VN(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const jN={kernelName:tn,backendName:"cpu",kernelFunc:VN};function UN(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:a}=r;RN([s],"leakyRelu");const o=ne(s.shape),i=n.data.get(s.dataId).values,u=fe("float32",o);for(let e=0;e<i.length;e++)u[e]=i[e]<0?a*i[e]:i[e];return n.makeTensorInfo(s.shape,"float32",u)}const GN={kernelName:un,backendName:"cpu",kernelFunc:UN};function HN(e){return(t,n,r,s,a)=>{const o=Wi(t,n),i=o.length,u=Ae(o),l=fe(a,ne(o)),c=t.length,p=n.length,h=Ae(t),d=Ae(n),f=qi(t,o),m=qi(n,o);if(f.length+m.length===0)for(let t=0;t<l.length;++t)l[t]=e(r[t%r.length],s[t%s.length]);else for(let t=0;t<l.length;++t){const n=Re(t,i,u),a=n.slice(-c);f.forEach((e=>a[e]=0));const o=De(a,c,h),g=n.slice(-p);m.forEach((e=>g[e]=0));const y=De(g,p,d);l[t]=e(r[o],s[y])}return[l,o]}}const KN=HN(((e,t)=>e<0?t*e:e));function QN(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t;RN([r,s],"prelu");const a=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,[i,u]=KN(r.shape,s.shape,a,o,r.dtype);return n.makeTensorInfo(u,r.dtype,i)}const XN={kernelName:Un,backendName:"cpu",kernelFunc:QN},JN=LN(Xn,(e=>Math.max(0,e))),YN={kernelName:Xn,backendName:"cpu",kernelFunc:JN},ZN=LN(nr,(e=>Math.min(Math.max(0,e),6))),eI={kernelName:nr,backendName:"cpu",kernelFunc:ZN};function tI(e,t,n,r,s){if("linear"===n)return VN({inputs:{x:t},backend:e});if("relu"===n)return JN({inputs:{x:t},backend:e});if("elu"===n)return BN({inputs:{x:t},backend:e});if("relu6"===n)return ZN({inputs:{x:t},backend:e});if("prelu"===n)return QN({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return UN({inputs:{x:t},backend:e,attrs:{alpha:s}});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function nI(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,i=n.makeTensorInfo(r.shape,"complex64");return n.data.get(i.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",a),imag:n.makeTensorInfo(s.shape,"float32",o)},i}const rI={kernelName:mt,backendName:"cpu",kernelFunc:nI};function sI(e,t,n="float32"){if("complex64"===n)return nI({inputs:{real:sI(e,t,"float32"),imag:sI(e,t,"float32")},backend:e});const r=Me(ne(t),n);return e.makeTensorInfo(t,n,r)}function aI(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.real,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}const oI={kernelName:Kn,backendName:"cpu",kernelFunc:aI};function iI(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dtype:a}=r;if("complex64"===a){if("complex64"===s.dtype)return VN({inputs:{x:s},backend:n});const e=sI(n,s.shape,s.dtype),t=iI({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),r=nI({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===s.dtype){const e=aI({inputs:{input:s},backend:n}),t=iI({inputs:{x:e},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(e),t}if(!be(s.dtype,a)){const e=VN({inputs:{x:s},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:a}}if("int32"===a){const e=n.data.get(s.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(s.shape,"int32",t)}if("bool"===a){const e=n.data.get(s.dataId).values,t=os([0],s.dtype),[r,a]=HN(((e,t)=>e!==t?1:0))(s.shape,[],e,t,"bool");return n.makeTensorInfo(a,"bool",r)}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${a}`)}const uI={kernelName:ht,backendName:"cpu",kernelFunc:iI};function lI(e,t,n,r){return null==n?({inputs:n,backend:s})=>{const{a,b:o}=n,i=s;RN([a,o],e);const u=i.data.get(a.dataId).values,l=i.data.get(o.dataId).values,c=r||a.dtype,[p,h]=t(a.shape,o.shape,u,l,c);return i.makeTensorInfo(h,c,p)}:({inputs:e,backend:s})=>{const{a,b:o}=e,i=s;if("complex64"===a.dtype||"complex64"===o.dtype){const e=iI({inputs:{x:a},backend:i,attrs:{dtype:"complex64"}}),t=i.data.get(e.dataId),r=t.complexTensorInfos.real,s=t.complexTensorInfos.imag,u=i.data.get(r.dataId).values,l=i.data.get(s.dataId).values,c=iI({inputs:{x:o},backend:i,attrs:{dtype:"complex64"}}),p=i.data.get(c.dataId),h=p.complexTensorInfos.real,d=p.complexTensorInfos.imag,f=i.data.get(h.dataId).values,m=i.data.get(d.dataId).values,[g,y,b]=n(a.shape,o.shape,u,l,f,m),w=i.makeTensorInfo(b,"float32",g),x=i.makeTensorInfo(b,"float32",y),S=nI({inputs:{real:w,imag:x},backend:i});return i.disposeIntermediateTensorInfo(e),i.disposeIntermediateTensorInfo(c),i.disposeIntermediateTensorInfo(w),i.disposeIntermediateTensorInfo(x),S}{const e=i.data.get(a.dataId).values,n=i.data.get(o.dataId).values,s=r||a.dtype,[u,l]=t(a.shape,o.shape,e,n,s);return i.makeTensorInfo(l,s,u)}}}function cI(e){return(t,n,r,s,a,o)=>{const i=Wi(t,n),u=ne(i),l=i.length,c=Ae(i),p=fe("float32",u),h=fe("float32",u),d=qi(t,i),f=qi(n,i),m=pd(r,s),g=pd(a,o),y=t.length,b=Ae(t),w=n.length,x=Ae(n);if(d.length+f.length===0)for(let t=0;t<p.length;t++){const n=t%m.length,r=t%g.length,s=e(m[2*n],m[2*n+1],g[2*r],g[2*r+1]);p[t]=s.real,h[t]=s.imag}else for(let t=0;t<p.length;t++){const n=Re(t,l,c),r=n.slice(-y);d.forEach((e=>r[e]=0));const s=De(r,y,b),a=n.slice(-w);f.forEach((e=>a[e]=0));const o=De(a,w,x),i=e(m[2*s],m[2*s+1],g[2*o],g[2*o+1]);p[t]=i.real,h[t]=i.imag}return[p,h,i]}}const pI=HN(((e,t)=>e+t)),hI=cI(((e,t,n,r)=>({real:e+n,imag:t+r}))),dI=lI(He,pI,hI),fI={kernelName:He,backendName:"cpu",kernelFunc:dI};function mI(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:a}=r,o=ne(s.shape),i=pe(a,o),u=ne(i);Y(o===u,(()=>`The new shape (${i}) has ${u} elements and the old shape (${s.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(s.dataId);const l=n.data.get(s.dataId);if(null!=l.complexTensorInfos){const e=l.complexTensorInfos.real,t=l.complexTensorInfos.imag;e.shape=i,t.shape=i}return{dataId:s.dataId,shape:i,dtype:s.dtype}}const gI={kernelName:Jn,backendName:"cpu",kernelFunc:mI};function yI(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:o,transposeB:i}=r;RN([s,a],"matMul");const u=s.shape.length,l=a.shape.length,c=o?s.shape[u-2]:s.shape[u-1],p=i?a.shape[l-1]:a.shape[l-2],h=o?s.shape[u-1]:s.shape[u-2],d=i?a.shape[l-2]:a.shape[l-1],f=s.shape.slice(0,-2),m=a.shape.slice(0,-2),g=ne(f),y=ne(m);Y(u>=2&&l>=2&&(g===y||1===g||1===y),(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${f}) and (${m}).`));const b=(g>y?s.shape.slice(0,-2):a.shape.slice(0,-2)).concat([h,d]);Y(c===p,(()=>`Error in matMul: inner shapes (${c}) and (${p}) of Tensors with shapes ${s.shape} and ${a.shape} and transposeA=${o} and transposeB=${i} must match.`));const w=i?[y,d,p]:[y,p,d],x=mI({inputs:{x:s},backend:n,attrs:{shape:o?[g,c,h]:[g,h,c]}}),S=mI({inputs:{x:a},backend:n,attrs:{shape:w}}),v=o?x.shape[1]:x.shape[2],k=o?x.shape[2]:x.shape[1],N=i?S.shape[1]:S.shape[2],I=Math.max(g,y),T=n.data.get(x.dataId).values,C=n.data.get(S.dataId).values,A=Ae(x.shape),E=Ae(S.shape),[P,$,M]=o?[A[0],1,A[1]]:[A[0],A[1],1],[O,_,D]=i?[1,E[1],E[0]]:[E[1],1,E[0]],R=k*N,z=La([I,k,N],x.dtype),F=z.values,L=n.blockSize;for(let e=0;e<I;e++)for(let t=0;t<k;t+=L)for(let n=0;n<N;n+=L)for(let r=0;r<v;r+=L){const s=Math.min(t+L,k),a=Math.min(n+L,N),o=Math.min(r+L,v);for(let i=t;i<s;i++)for(let t=n;t<a;t++){let n=0;for(let s=r;s<o;s++){const r=Math.min(e,g-1)*P,a=Math.min(e,y-1)*D;n+=T[r+i*$+s*M]*C[s*O+t*_+a]}F[e*R+(i*N+t)]+=n}}return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(S),n.makeTensorInfo(b,z.dtype,z.values)}const bI={kernelName:ut,backendName:"cpu",kernelFunc:yI},wI={kernelName:zr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:o,preluActivationWeights:i}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:p}=r;let h,d,f;const m=[];h=yI({inputs:{a:s,b:a},attrs:{transposeA:u,transposeB:l},backend:n}),o&&(d=dI({inputs:{a:h,b:o},backend:n}),m.push(h),h=d),c&&(f=tI(n,h,c,i,p),m.push(h),h=f);for(const e of m)n.disposeIntermediateTensorInfo(e);return h}};function xI(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const SI={kernelName:je,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;RN(t,"abs");let r=new Float32Array(ne(t.shape));return r=xI(n.data.get(t.dataId).values),n.makeOutput(r,t.shape,"float32")}},vI=LN(Ue,(e=>Math.acos(e))),kI={kernelName:Ue,backendName:"cpu",kernelFunc:vI},NI=LN(Ge,(e=>Math.acosh(e))),II={kernelName:Ge,backendName:"cpu",kernelFunc:NI},TI={kernelName:Ke,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,r=t;RN(t,"addN");const s=r.map((e=>n.data.get(e.dataId).values)),a=La(r[0].shape,r[0].dtype),o=a.values;for(let e=0;e<r.length;e++){const t=s[e];for(let e=0;e<o.length;e++)o[e]+=t[e]}return n.makeTensorInfo(a.shape,a.dtype,a.values)}};function CI(e,t,n,r,s){const a=t.length,o=ne(t),i=Ae(t),u=Ae(s),l=fe(n,ne(s));for(let t=0;t<o;++t){const n=Re(t,a,i),s=new Array(n.length);for(let e=0;e<s.length;e++)s[e]=n[r[e]];l[De(s,a,u)]=e[t]}return l}function AI(e){const{inputs:t,attrs:n,backend:r}=e,{x:s}=t,{perm:a}=n;RN(s,"transpose");const o=s.shape.length,i=new Array(o);for(let e=0;e<i.length;e++)i[e]=s.shape[a[e]];const u=CI(r.data.get(s.dataId).values,s.shape,s.dtype,a,i);return{dataId:r.write(u,i,s.dtype),shape:i,dtype:s.dtype}}const EI={kernelName:Er,backendName:"cpu",kernelFunc:AI},PI={kernelName:Qe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r;RN(s,"all");const i=he(a,s.shape);let u=i;const l=Fl(u,s.shape.length);let c=s;null!=l&&(c=AI({inputs:{x:s},backend:n,attrs:{perm:l}}),u=ql(u.length,s.shape.length)),zl("all",u,c.shape.length);const[p,h]=Dl(c.shape,u),d=ne(h),f=Me(ne(p),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*d;let n=m[t];for(let e=0;e<d;++e){const r=m[t+e];n=n&&r}f[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(p,c.dtype,f);if(o){const e=mI({inputs:{x:g},backend:n,attrs:{shape:Rl(p,i)}});return n.disposeIntermediateTensorInfo(g),e}return g}},$I={kernelName:Xe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r;RN(s,"any");const i=he(a,s.shape);let u=i;const l=Fl(u,s.shape.length);let c=s;null!=l&&(c=AI({inputs:{x:s},backend:n,attrs:{perm:l}}),u=ql(u.length,s.shape.length)),zl("any",u,c.shape.length);const[p,h]=Dl(c.shape,u),d=ne(h),f=Me(ne(p),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*d;let n=m[t];for(let e=0;e<d;++e){const r=m[t+e];n=n||r}f[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(p,c.dtype,f);if(o){const e=mI({inputs:{x:g},backend:n,attrs:{shape:Rl(p,i)}});return n.disposeIntermediateTensorInfo(g),e}return g}},MI={kernelName:Je,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;RN(s,"argMax");let o=he(a,s.shape);const i=Fl(o,s.shape.length);let u=s;const l=[];null!=i&&(u=AI({inputs:{x:s},backend:n,attrs:{perm:i}}),l.push(u),o=ql(o.length,u.shape.length)),o=[o[0]],zl("argMax",o,u.shape.length);const[c,p]=Dl(u.shape,o),h=Me(ne(c),"int32"),d=ne(p),f=n.data.get(u.dataId).values;for(let e=0;e<h.length;++e){const t=e*d;let n=f[t],r=0;for(let e=0;e<d;++e){const s=f[t+e];s>n&&(n=s,r=e)}h[e]=r}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",h)}},OI={kernelName:Ye,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;RN(s,"argMin");let o=he(a,s.shape);const i=Fl(o,s.shape.length);let u=s;const l=[];null!=i&&(u=AI({inputs:{x:s},backend:n,attrs:{perm:i}}),l.push(u),o=ql(o.length,u.shape.length)),o=[o[0]],zl("argMin",o,u.shape.length);const[c,p]=Dl(u.shape,o),h=Me(ne(c),"int32"),d=ne(p),f=n.data.get(u.dataId).values;for(let e=0;e<h.length;++e){const t=e*d;let n=f[t],r=0;for(let e=0;e<d;++e){const s=f[t+e];s<n&&(n=s,r=e)}h[e]=r}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",h)}},_I=LN(Ze,(e=>Math.asin(e))),DI={kernelName:Ze,backendName:"cpu",kernelFunc:_I},RI=LN(et,(e=>Math.asinh(e))),zI={kernelName:et,backendName:"cpu",kernelFunc:RI},FI=LN(tt,(e=>Math.atan(e))),LI={kernelName:tt,backendName:"cpu",kernelFunc:FI},qI=HN(((e,t)=>Math.atan2(e,t))),BI=lI(rt,qI),WI={kernelName:rt,backendName:"cpu",kernelFunc:BI},VI=LN(nt,(e=>Math.atanh(e))),jI={kernelName:nt,backendName:"cpu",kernelFunc:VI};function UI(e,t,n,r,s,a){const o=s.strideHeight,i=s.strideWidth,u=s.dilationHeight,l=s.dilationWidth,c=s.effectiveFilterHeight,p=s.effectiveFilterWidth,h=s.padInfo.top,d=s.padInfo.left,f="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=La(s.outShape,n),g=m.values,y=s.outShape[1]*s.outShape[2]*s.outShape[3],b=s.outShape[2]*s.outShape[3],w=s.outShape[3];for(let t=0;t<s.batchSize;++t){const n=t*y,m=t*r[0];for(let t=0;t<s.inChannels;++t)for(let y=0;y<s.outHeight;++y){const x=y*o-h,S=Math.max(0,x),v=Math.min(s.inHeight,c+x),k=n+y*b;for(let n=0;n<s.outWidth;++n){const o=n*i-d,c=Math.max(0,o),h=Math.min(s.inWidth,p+o);let y=f,b=0,x=0;for(let n=S;n<v;n+=u){const s=m+n*r[1];for(let n=c;n<h;n+=l){const o=e[s+n*r[2]+t];"max"===a&&o>y?y=o:"avg"===a&&(b+=o,x++)}if(isNaN(y))break}g[k+n*w+t]="avg"===a?b/x:y}}}return m}function GI(e,t,n,r,s=!1,a=!1){const o=La(r.outShape,"int32"),i=r.strideHeight,u=r.strideWidth,l=r.dilationHeight,c=r.dilationWidth,p=r.effectiveFilterHeight,h=r.effectiveFilterWidth,d=r.padInfo.top,f=r.padInfo.left,m=La(t,n,e);for(let e=0;e<r.batchSize;++e)for(let t=0;t<r.inChannels;++t)for(let n=0;n<r.outHeight;++n){const g=n*i-d;let y=g;for(;y<0;)y+=l;const b=Math.min(r.inHeight,p+g);for(let i=0;i<r.outWidth;++i){const p=i*u-f;let d=p;for(;d<0;)d+=c;const w=Math.min(r.inWidth,h+p);let x=Number.NEGATIVE_INFINITY,S=-1;for(let n=y;n<b;n+=l){const o=n-g;for(let i=d;i<w;i+=c){const u=i-p,l=m.get(e,n,i,t);l>x&&(x=l,S=s?a?((e*r.inHeight+n)*r.inWidth+i)*r.inChannels+t:(n*r.inWidth+i)*r.inChannels+t:o*h+u)}}o.set(S,e,n,i,t)}}return o}function HI(e,t,n,r,s,a){const o=s.strideDepth,i=s.strideHeight,u=s.strideWidth,l=s.dilationDepth,c=s.dilationHeight,p=s.dilationWidth,h=s.effectiveFilterDepth,d=s.effectiveFilterHeight,f=s.effectiveFilterWidth,m=s.padInfo.front,g=s.padInfo.top,y=s.padInfo.left,b="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,w=La(s.outShape,n),x=w.values,S=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],v=s.outShape[2]*s.outShape[3]*s.outShape[4],k=s.outShape[3]*s.outShape[4],N=s.outShape[4];for(let t=0;t<s.batchSize;++t){const n=t*S,w=t*r[0];for(let t=0;t<s.inChannels;++t)for(let S=0;S<s.outDepth;++S){const I=S*o-m;let T=I;for(;T<0;)T+=l;const C=Math.min(s.inDepth,h+I),A=n+S*v;for(let n=0;n<s.outHeight;++n){const o=n*i-g;let h=o;for(;h<0;)h+=c;const m=Math.min(s.inHeight,d+o),S=A+n*k;for(let n=0;n<s.outWidth;++n){const o=n*u-y;let i=o;for(;i<0;)i+=p;const d=Math.min(s.inWidth,f+o),g=S+n*N;let v=b,k=0,I=0;for(let n=T;n<C;n+=l){const s=w+n*r[1];for(let n=h;n<m;n+=c){const o=s+n*r[2];for(let n=i;n<d;n+=p){const s=e[o+n*r[3]+t];if("max"===a&&s>v?v=s:"avg"===a&&(k+=s,I++),isNaN(v))break}if(isNaN(v))break}if(isNaN(v))break}x[g+t]="avg"===a?k/I:v}}}}return w}const KI={kernelName:st,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;RN(s,"avgPool");const{filterSize:a,strides:o,pad:i,dimRoundingMode:u}=r;Y(yu(o,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const l=iu(s.shape,a,o,1,i,u);let c;if(1===l.filterWidth&&1===l.filterHeight&&se(l.inShape,l.outShape))c=VN({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=Ae(s.shape),r=UI(e,s.shape,s.dtype,t,l,"avg");c=n.makeTensorInfo(l.outShape,s.dtype,r.values)}return c}},QI={kernelName:ot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:u,dataFormat:l,dilations:c}=r;RN(s,"avgPool3d");let p=c;null==p&&(p=[1,1,1]);const h=uu(s.shape,a,o,p,i,u,l),d=HI(n.data.get(s.dataId).values,s.shape,s.dtype,Ae(s.shape),h,"avg");return n.makeTensorInfo(d.shape,"float32",d.values)}},XI={kernelName:it,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,{filterSize:o,strides:i,pad:u,dilations:l,dimRoundingMode:c}=r;RN([s,a],"avgPool3DGrad");const p=uu(a.shape,o,i,l,u,c),h=p.strideDepth,d=p.strideHeight,f=p.strideWidth,m=p.filterDepth,g=p.filterHeight,y=p.filterWidth,b=p.dilationDepth,w=p.dilationHeight,x=p.dilationWidth,S=p.effectiveFilterDepth,v=p.effectiveFilterHeight,k=p.effectiveFilterWidth,N=S-1-p.padInfo.front,I=k-1-p.padInfo.left,T=v-1-p.padInfo.top,C=La(a.shape,"float32"),A=1/(m*g*y),E=n.bufferSync(s);for(let e=0;e<p.batchSize;++e)for(let t=0;t<p.inChannels;++t)for(let n=0;n<p.inDepth;++n)for(let r=0;r<p.inHeight;++r)for(let s=0;s<p.inWidth;++s){const a=n-N,o=r-T,i=s-I;let u=0;for(let n=0;n<S;n+=b){const r=(a+n)/h;if(!(r<0||r>=p.outDepth||Math.floor(r)!==r))for(let n=0;n<v;n+=w){const s=(o+n)/d;if(!(s<0||s>=p.outHeight||Math.floor(s)!==s))for(let n=0;n<k;n+=x){const a=(i+n)/f;a<0||a>=p.outWidth||Math.floor(a)!==a||(u+=E.get(e,r,s,a,t))}}}C.set(u*A,e,n,r,s,t)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}},JI={kernelName:at,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,o=a;RN([s,a],"avgPoolGrad");const{filterSize:i,strides:u,pad:l}=r,c=iu(o.shape,i,u,1,l),p=c.strideHeight,h=c.strideWidth,d=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,y=c.effectiveFilterHeight,b=c.effectiveFilterWidth,w=b-1-c.padInfo.left,x=y-1-c.padInfo.top,S=La(o.shape,"float32"),v=1/(d*f),k=n.data.get(s.dataId).values,N=La(s.shape,"float32",k);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const s=n-x,a=r-w;let o=0;for(let n=0;n<y;n+=m){const r=(s+n)/p;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let n=0;n<b;n+=g){const s=(a+n)/h;s<0||s>=c.outWidth||Math.floor(s)!==s||(o+=N.get(e,r,s,t))}}S.set(o*v,e,n,r,t)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}},YI={kernelName:Xt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,scale:a,offset:o,mean:i,variance:u}=t;Y(i.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),Y(null==o||i.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),Y(null==a||i.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),RN([s,i,u,a,o],"batchNorm");let{varianceEpsilon:l}=r;null==l&&(l=.001);const c=n.data.get(s.dataId).values,p=n.data.get(i.dataId).values,h=n.data.get(u.dataId).values,d=a?n.data.get(a.dataId).values:new Float32Array([1]),f=o?n.data.get(o.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),g=f.length,y=d.length,b=h.length,w=p.length;let x=0,S=0,v=0,k=0;for(let e=0;e<c.length;++e)m[e]=f[x++]+(c[e]-p[S++])*d[v++]/Math.sqrt(h[k++]+l),x>=g&&(x=0),S>=w&&(S=0),v>=y&&(v=0),k>=b&&(k=0);return n.makeTensorInfo(s.shape,s.dtype,m)}};function ZI(e,t,n,r,s){const a=$o(r,t,n),o=ne(n),i=Ae(r);if(a){const n=Mo(t,i);return"string"===s?e.slice(n,n+o):e.subarray(n,n+o)}const u=La(r,s,"string"===s?Id(e):e),l=La(n,s);for(let e=0;e<l.size;++e){const n=l.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));l.set(u.get(...r),...n)}return"string"===s?Td(l.values):l.values}function eT(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,size:o}=r;RN(s,"slice");const[i,u]=Oo(s,a,o);wo(s,i,u);const l=ZI(n.data.get(s.dataId).values,i,u,s.shape,s.dtype);return n.makeTensorInfo(u,s.dtype,l)}const tT={kernelName:lr,backendName:"cpu",kernelFunc:eT},nT={kernelName:lt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,crops:o}=r;RN([s],"batchToSpaceND");const i=a.reduce(((e,t)=>e*t)),u=Xh(s.shape,a,i),l=Jh(u.length,a.length),c=Yh(s.shape,a,i),p=Zh(o,a.length),h=ed(c,o,a.length),d=mI({inputs:{x:s},backend:n,attrs:{shape:u}}),f=AI({inputs:{x:d},backend:n,attrs:{perm:l}}),m=mI({inputs:{x:f},backend:n,attrs:{shape:c}}),g=eT({inputs:{x:m},backend:n,attrs:{begin:p,size:h}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};function rT(e,t,n,r,s){const a=ne(r),o=Me(s,n);for(let n=0;n<e.length;n++){const r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=s||(o[r]+=a>0?t[n]:1)}return o}function sT(e,t,n,r=!1){const s=e.shape[0],a=e.shape[1],o=La([s,n],t.dtype);for(let i=0;i<s;i++)for(let s=0;s<a;s++){const a=e.get(i,s);if(a<0)throw new Error("Input x must be non-negative!");a>=n||(r?o.set(1,i,a):t.size>0?o.set(o.get(i,a)+t.get(i,s),i,a):o.set(o.get(i,a)+1,i,a))}return o}const aT={kernelName:ct,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:o}=r,i=rT(n.data.get(s.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,i)}};function oT(e){return(t,n,r)=>{const s=fe(n,t.length);for(let n=0;n<t.length;++n)s[n]=e(t[n],r);return s}}const iT=oT((e=>Math.ceil(e))),uT=qN(dt,iT),lT={kernelName:dt,backendName:"cpu",kernelFunc:uT},cT=LN(ft,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),pT={kernelName:ft,backendName:"cpu",kernelFunc:cT},hT={kernelName:gt,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,r=new Float32Array(ne(t.shape)),s=n.data.get(t.dataId),a=s.complexTensorInfos.real,o=s.complexTensorInfos.imag,i=n.data.get(a.dataId).values,u=n.data.get(o.dataId).values;for(let e=0;e<i.length;e++){const t=i[e],n=u[e];r[e]=Math.hypot(t,n)}return n.makeOutput(r,t.shape,"float32")}};function dT(e,t,n,r){const s=me(n,ne(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{const n=ne(e.shape);s.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{const a="string"===n?Id(e.vals):e.vals;let o=0;for(let n=0;n<e.shape[0];++n){const i=n*t[1]+r;for(let t=0;t<e.shape[1];++t)s[i+t]=a[o++]}r+=e.shape[1]}))}return s}function fT(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.imag,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}const mT={kernelName:rn,backendName:"cpu",kernelFunc:fT};function gT(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,a=he(s,t[0].shape)[0];let o=Gh(t.map((e=>e.shape)),a);if(0===ne(o))return n.makeTensorInfo(o,t[0].dtype,[]);const i=t.filter((e=>ne(e.shape)>0));if(1===i.length)return VN({inputs:{x:i[0]},backend:n});if(Uh(i.map((e=>e.shape)),a),"complex64"===i[0].dtype){const e=i.map((e=>aI({inputs:{input:e},backend:n}))),t=i.map((e=>fT({inputs:{input:e},backend:n}))),r=gT({inputs:e,backend:n,attrs:{axis:a}}),s=gT({inputs:t,backend:n,attrs:{axis:a}}),o=nI({inputs:{real:r,imag:s},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),o}const u=i.map((e=>{const t=ne(e.shape.slice(a));return mI({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),l=u.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));o=Gh(u.map((e=>e.shape)),1);const c=1===u[0].shape[0],p=dT(l,o,t[0].dtype,c),h=Gh(i.map((e=>e.shape)),a),d=n.makeTensorInfo(h,t[0].dtype,p);return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}const yT={kernelName:yt,backendName:"cpu",kernelFunc:gT};function bT(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:o,pad:i,dataFormat:u,dilations:l,dimRoundingMode:c}=r;RN([s,a],"conv2d");const p=bu(u),h=lu(s.shape,a.shape,o,l,i,c,!1,p),d=h.filterHeight,f=h.filterWidth,m=h.dilationHeight,g=h.dilationWidth,y=h.padInfo.left,b=h.padInfo.top,w="channelsLast"===h.dataFormat,x=new ps(h.outShape,s.dtype),S=Ae(s.shape),v=Ae(a.shape),k=S[0],N=w?S[1]:S[2],I=w?S[2]:1,T=w?1:S[1],C=x.strides[0],A=w?x.strides[1]:x.strides[2],E=w?x.strides[2]:1,P=w?1:x.strides[1],$=n.data.get(s.dataId).values,M=n.data.get(a.dataId).values,O=x.values;for(let e=0;e<h.batchSize;++e){const t=e*k,n=e*C;for(let e=0;e<h.outHeight;++e){const r=n+e*A,s=e*h.strideHeight-b;for(let e=0;e<d;++e){const n=s+e*m;if(n<0||n>=h.inHeight)continue;const a=e*v[0],o=t+n*N;for(let e=0;e<h.outWidth;++e){const t=r+e*E,n=e*h.strideWidth-y;for(let e=0;e<f;++e){const r=n+e*g;if(r<0||r>=h.inWidth)continue;const s=o+r*I;let i=a+e*v[1];for(let e=0;e<h.inChannels;++e){const n=$[s+e*T];for(let e=0;e<h.outChannels;++e)O[t+e*P]+=n*M[i+e];i+=h.outChannels}}}}}}return n.makeTensorInfo(x.shape,x.dtype,O)}const wT={kernelName:bt,backendName:"cpu",kernelFunc:bT},xT={kernelName:wt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:o,pad:i,dataFormat:u,dimRoundingMode:l,filterShape:c}=r;RN([s,a],"conv2dBackpropFilter");const p=bu(u),h=lu(s.shape,c,o,1,i,l,!1,p),{strideHeight:d,strideWidth:f,filterHeight:m,filterWidth:g}=h,y="channelsLast"===h.dataFormat,b=new ps(h.filterShape,"float32"),w=h.padInfo.left,x=h.padInfo.top,S=n.data.get(s.dataId).values,v=n.data.get(a.dataId).values,k=new ps(s.shape,s.dtype,S),N=new ps(a.shape,a.dtype,v);for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((x-e)/d)),n=Math.min(h.outHeight,(h.inHeight+x-e)/d);for(let r=0;r<g;++r){const s=Math.max(0,Math.ceil((w-r)/f)),a=Math.min(h.outWidth,(h.inWidth+w-r)/f);for(let o=0;o<h.inChannels;++o)for(let i=0;i<h.outChannels;++i){let u=0;for(let l=0;l<h.batchSize;++l)for(let c=t;c<n;++c){const t=e+c*d-x;for(let e=s;e<a;++e){const n=r+e*f-w;u+=y?k.get(l,t,n,o)*N.get(l,c,e,i):k.get(l,o,t,n)*N.get(l,i,c,e)}}b.set(u,e,r,o,i)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},ST={kernelName:xt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{inputShape:o,strides:i,pad:u,dataFormat:l,dimRoundingMode:c}=r;RN([s,a],"conv2dBackpropInput");const p=Ae(a.shape),h=Ae(s.shape);let d=bu(l);const f=lu(o,a.shape,i,1,u,c,!1,d),m=new ps(f.inShape,"float32"),g=m.values,y=n.data.get(s.dataId).values,b=n.data.get(a.dataId).values,[w,x,S]=p,{batchSize:v,filterHeight:k,filterWidth:N,inChannels:I,inHeight:T,inWidth:C,outChannels:A,outHeight:E,outWidth:P,strideHeight:$,strideWidth:M}=f;d=f.dataFormat;const O=k-1-f.padInfo.top,_=N-1-f.padInfo.left,D="channelsLast"===d,R=m.strides[0],z=D?m.strides[1]:m.strides[2],F=D?m.strides[2]:1,L=D?1:m.strides[1],q=h[0],B=D?h[1]:h[2],W=D?h[2]:1,V=D?1:h[1];for(let e=0;e<v;++e)for(let t=0;t<I;++t)for(let n=0;n<T;++n){const r=n-O,s=Math.max(0,Math.ceil(r/$)),a=Math.min(E,(k+r)/$);for(let o=0;o<C;++o){const i=o-_,u=Math.max(0,Math.ceil(i/M)),l=Math.min(P,(N+i)/M);let c=0;for(let n=s;n<a;++n){const s=n*$-r;for(let r=u;r<l;++r){const a=q*e+B*n+W*r,o=w*(k-1-s)+x*(N-1-(r*M-i))+S*t;for(let e=0;e<A;++e)c+=y[a+V*e]*b[o+e]}}g[R*e+z*n+F*o+L*t]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},vT={kernelName:St,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:o,pad:i,dilations:u}=r;RN([s,a],"conv3d");const l=cu(s.shape,a.shape,o,u,i),{filterDepth:c,filterHeight:p,filterWidth:h,dilationDepth:d,dilationHeight:f,dilationWidth:m,padInfo:g}=l,y=g.front,b=g.left,w=g.top,x=new ps(l.outShape,s.dtype),S=n.data.get(s.dataId).values,v=n.data.get(a.dataId).values,k=x.values,N=Ae(s.shape),I=Ae(a.shape);for(let e=0;e<l.batchSize;++e){const t=e*N[0],n=e*x.strides[0];for(let e=0;e<l.outDepth;++e){const r=n+e*x.strides[1],s=e*l.strideDepth-y;for(let e=0;e<c;++e){const n=s+e*d;if(n<0||n>=l.inDepth)continue;const a=e*I[0],o=t+n*N[1];for(let e=0;e<l.outHeight;++e){const t=r+e*x.strides[2],n=e*l.strideHeight-w;for(let e=0;e<p;++e){const r=n+e*f;if(r<0||r>=l.inHeight)continue;const s=a+e*I[1],i=o+r*N[2];for(let e=0;e<l.outWidth;++e){const n=t+e*l.outChannels,r=e*l.strideWidth-b;for(let e=0;e<h;++e){const t=r+e*m;if(t<0||t>=l.inWidth)continue;const a=s+e*I[2],o=i+t*l.inChannels;let u=a;for(let e=0;e<l.inChannels;++e){const t=S[o+e];for(let e=0;e<l.outChannels;++e)k[n+e]+=t*v[u+e];u+=l.outChannels}}}}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}},kT={kernelName:vt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:o,pad:i,filterShape:u}=r;RN([s,a],"conv3dBackpropFilterV2");const l=Ae(s.shape),c=Ae(a.shape),p=cu(s.shape,u,o,1,i),h=p.strideDepth,d=p.strideHeight,f=p.strideWidth,m=p.filterDepth,g=p.filterHeight,y=p.filterWidth,b=new ps(p.filterShape,"float32"),w=b.values,[x,S,v,k]=b.strides,N=n.data.get(a.dataId).values,[I,T,C,A]=c,E=n.data.get(s.dataId).values,[P,$,M,O]=l,_=p.padInfo.front,D=p.padInfo.left,R=p.padInfo.top;for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((_-e)/h)),n=Math.min(p.outDepth,(p.inDepth+_-e)/h),r=e*x;for(let s=0;s<g;++s){const a=Math.max(0,Math.ceil((R-s)/d)),o=Math.min(p.outHeight,(p.inHeight+R-s)/d),i=s*S+r;for(let r=0;r<y;++r){const u=Math.max(0,Math.ceil((D-r)/f)),l=Math.min(p.outWidth,(p.inWidth+D-r)/f),c=r*v+i;for(let i=0;i<p.inChannels;++i){const m=i*k+c;for(let c=0;c<p.outChannels;++c){let g=0;for(let m=0;m<p.batchSize;++m){const p=m*P,y=m*I;for(let m=t;m<n;++m){const t=(e+m*h-_)*$+p,n=m*T+y;for(let e=a;e<o;++e){const a=(s+e*d-R)*M+t,o=e*C+n;for(let e=u;e<l;++e){const t=e*A+o;g+=E[(r+e*f-D)*O+a+i]*N[t+c]}}}}w[m+c]=g}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},NT={kernelName:kt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{pad:o,strides:i,inputShape:u}=r;RN([s],"conv3dBackpropInputV2");const l=Ae(s.shape),c=Ae(a.shape),p=cu(u,a.shape,i,1,o),h=new ps(p.inShape,"float32"),d=h.values,[f,m,g,y]=h.strides,b=n.data.get(s.dataId).values,[w,x,S,v]=l,k=n.data.get(a.dataId).values,[N,I,T,C]=c,{batchSize:A,filterDepth:E,filterHeight:P,filterWidth:$,inChannels:M,inDepth:O,inHeight:_,inWidth:D,outChannels:R,outDepth:z,outHeight:F,outWidth:L,strideDepth:q,strideHeight:B,strideWidth:W}=p,V=E-1-p.padInfo.front,j=P-1-p.padInfo.top,U=$-1-p.padInfo.left;for(let e=0;e<A;++e)for(let t=0;t<M;++t)for(let n=0;n<O;++n){const r=n-V,s=Math.max(0,Math.ceil(r/q)),a=Math.min(z,(E+r)/q);for(let o=0;o<_;++o){const i=o-j,u=Math.max(0,Math.ceil(i/B)),l=Math.min(F,(P+i)/B);for(let c=0;c<D;++c){const p=c-U,h=Math.max(0,Math.ceil(p/W)),A=Math.min(L,($+p)/W);let M=0;for(let n=s;n<a;++n){const s=n*q-r;for(let r=u;r<l;++r){const a=r*B-i;for(let o=h;o<A;++o){const i=w*e+x*n+S*r+v*o,u=N*(E-1-s)+I*(P-1-a)+T*($-1-(o*W-p))+C*t;for(let e=0;e<R;++e)M+=b[i+e]*k[u+e]}}}d[f*e+m*n+g*o+y*c+t]=M}}}return n.makeTensorInfo(h.shape,h.dtype,h.values)}},IT=LN(Nt,(e=>Math.cos(e))),TT={kernelName:Nt,backendName:"cpu",kernelFunc:IT},CT=LN(It,(e=>Math.cosh(e))),AT={kernelName:It,backendName:"cpu",kernelFunc:CT},ET={kernelName:Ct,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:a,boxInd:o}=t,{cropSize:i,method:u,extrapolationValue:l}=r,[c,p,h,d]=s.shape,f=a.shape[0],[m,g]=i,y=La([f,m,g,d],"float32"),b=n.data.get(a.dataId).values,w=n.data.get(o.dataId).values,x=n.data.get(s.dataId).values,S=Ae(s.shape),v=Ae(y.shape);for(let e=0;e<f;e++){const t=4*e,n=b[t],r=b[t+1],s=b[t+2],a=b[t+3],o=w[e];if(o>=c)continue;const i=m>1?(s-n)*(p-1)/(m-1):0,f=g>1?(a-r)*(h-1)/(g-1):0;for(let t=0;t<m;t++){const c=m>1?n*(p-1)+t*i:.5*(n+s)*(p-1);if(c<0||c>p-1)for(let n=0;n<g;n++)for(let r=0;r<d;r++){const s=r+n*v[2]+t*v[1]+e*v[0];y.values[s]=l}else if("bilinear"===u){const n=Math.floor(c),s=Math.ceil(c),i=c-n;for(let u=0;u<g;u++){const c=g>1?r*(h-1)+u*f:.5*(r+a)*(h-1);if(c<0||c>h-1){for(let n=0;n<d;n++){const r=n+u*v[2]+t*v[1]+e*v[0];y.values[r]=l}continue}const p=Math.floor(c),m=Math.ceil(c),b=c-p;for(let r=0;r<d;r++){let a=r+p*S[2]+n*S[1]+o*S[0];const l=x[a];a=r+m*S[2]+n*S[1]+o*S[0];const c=x[a];a=r+p*S[2]+s*S[1]+o*S[0];const h=x[a];a=r+m*S[2]+s*S[1]+o*S[0];const d=l+(c-l)*b,f=h+(x[a]-h)*b;a=r+u*v[2]+t*v[1]+e*v[0],y.values[a]=d+(f-d)*i}}}else for(let n=0;n<g;++n){const s=g>1?r*(h-1)+n*f:.5*(r+a)*(h-1);if(s<0||s>h-1){for(let r=0;r<d;r++){const s=r+n*v[2]+t*v[1]+e*v[0];y.values[s]=l}continue}const i=Math.round(s),u=Math.round(c);for(let r=0;r<d;r++){const s=r+i*S[2]+u*S[1]+o*S[0],a=r+n*v[2]+t*v[1]+e*v[0];y.values[a]=x[s]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},PT={kernelName:Tt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:o,reverse:i}=r;RN(s,"cumsum");const u=Fl([a],s.shape.length);let l=s;null!=u&&(l=AI({inputs:{x:s},backend:n,attrs:{perm:u}}));const c=ql(1,s.shape.length)[0];if(c!==l.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${c}`);const p=ks(l.dtype,"int32"),h=Me(ne(l.shape),p),d=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],m=i?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<d.length;e+=f)for(let t=0;t<f;t++){const n=m(e,t);if(0===t)h[n]=o?0:d[n];else{const r=m(e,t-1);h[n]=o?d[r]+h[r]:d[n]+h[r]}}const g=n.makeTensorInfo(l.shape,p,h);if(null!=u){const e=AI({inputs:{x:g},backend:n,attrs:{perm:Ll(u)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(l),e}return g}},$T={kernelName:At,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:o,binaryOutput:i}=r;if(1===s.shape.length){const e=rT(n.data.get(s.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,e)}if(2===s.shape.length){const e=sT(n.bufferSync(s),n.bufferSync(a),o,i);return n.makeTensorInfo(e.shape,a.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}},MT={kernelName:Et,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:a,dataFormat:o}=r;Y("NHWC"===o,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${o}`)),Y(a>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${a}`));const i=s.shape[0],u=s.shape[1],l=s.shape[2],c=s.shape[3],p=u*a,h=l*a,d=c/(a*a),f=n.data.get(s.dataId).values,m=new Float32Array(i*p*h*d);let g=0;for(let e=0;e<i;++e)for(let t=0;t<p;++t){const n=Math.floor(t/a),r=t%a;for(let t=0;t<h;++t){const s=Math.floor(t/a),o=(r*a+t%a)*d;for(let t=0;t<d;++t){const r=t+o+c*(s+l*(n+u*e));m[g++]=f[r]}}}return n.makeTensorInfo([i,p,h,d],s.dtype,m)}};function OT(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:o,pad:i,dilations:u,dimRoundingMode:l}=r;RN([s,a],"depthwiseConv2DNative");const c=Ae(s.shape),p=Ae(a.shape);let h=u;null==h&&(h=[1,1]),Y(yu(o,h),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${h}'`));const d=lu(s.shape,a.shape,o,h,i,l,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=d,w=b.left,x=b.top,S=d.outChannels/d.inChannels,v=new ps(d.outShape,s.dtype),k=n.data.get(s.dataId).values,N=n.data.get(a.dataId).values,I=v.values;for(let e=0;e<d.batchSize;++e){const t=e*c[0],n=e*v.strides[0];for(let e=0;e<d.outHeight;++e){const r=n+e*v.strides[1],s=e*d.strideHeight-w;for(let e=0;e<f;++e){const n=s+e*g;if(n<0||n>=d.inHeight)continue;const a=e*p[0],o=t+n*c[1];for(let e=0;e<d.outWidth;++e){const t=r+e*v.strides[2],n=e*d.strideWidth-x;for(let e=0;e<m;++e){const r=n+e*y;if(r<0||r>=d.inWidth)continue;const s=a+e*p[1],i=o+r*d.inChannels;let u=t,l=s;for(let e=0;e<d.inChannels;++e){const t=k[i+e];for(let e=0;e<S;++e)I[u+e]+=t*N[l+e];u+=S,l+=S}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}const _T={kernelName:Pt,backendName:"cpu",kernelFunc:OT},DT={kernelName:$t,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:o,dilations:i,pad:u,dimRoundingMode:l,filterShape:c}=r;RN([s,a],"depthwiseConv2dNativeBackpropFilter");const p=lu(s.shape,c,o,i,u,l,!0),{strideHeight:h,strideWidth:d,filterHeight:f,filterWidth:m}=p,g=new ps(p.filterShape,"float32"),y=p.padInfo.left,b=p.padInfo.top,w=p.outChannels/p.inChannels,x=n.data.get(s.dataId).values,S=new ps(s.shape,s.dtype,x),v=n.data.get(a.dataId).values,k=new ps(a.shape,a.dtype,v);for(let e=0;e<f;++e){const t=Math.max(0,Math.ceil((b-e)/h)),n=Math.min(p.outHeight,(p.inHeight+b-e)/h);for(let r=0;r<m;++r){const s=Math.max(0,Math.ceil((y-r)/d)),a=Math.min(p.outWidth,(p.inWidth+y-r)/d);for(let o=0;o<p.outChannels;++o){const i=Math.trunc(o/w),u=o%w;let l=0;for(let u=0;u<p.batchSize;++u)for(let c=t;c<n;++c){const t=e+c*h-b;for(let e=s;e<a;++e){const n=r+e*d-y;l+=S.get(u,t,n,i)*k.get(u,c,e,o)}}g.set(l,e,r,i,u)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},RT={kernelName:Mt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{strides:o,dilations:i,pad:u,dimRoundingMode:l,inputShape:c}=r;RN([s,a],"depthwiseConv2DNativeBackpropInput");const p=Ae(s.shape),h=Ae(a.shape),d=lu(c,a.shape,o,i,u,l,!0),f=new ps(d.inShape,"float32"),m=f.values,[g,y,b]=f.strides,w=n.data.get(s.dataId).values,[x,S,v]=p,k=n.data.get(a.dataId).values,[N,I,T]=h,{batchSize:C,filterHeight:A,filterWidth:E,inChannels:P,inHeight:$,inWidth:M,outChannels:O,outHeight:_,outWidth:D,strideHeight:R,strideWidth:z}=d,F=A-1-d.padInfo.top,L=E-1-d.padInfo.left,q=O/P;for(let e=0;e<C;++e)for(let t=0;t<P;++t)for(let n=0;n<$;++n){const r=n-F,s=Math.max(0,Math.ceil(r/R)),a=Math.min(_,(A+r)/R);for(let o=0;o<M;++o){const i=o-L,u=Math.max(0,Math.ceil(i/z)),l=Math.min(D,(E+i)/z);let c=0;for(let n=s;n<a;++n){const s=n*R-r;for(let r=u;r<l;++r){const a=x*e+S*n+v*r,o=N*(A-1-s)+I*(E-1-(r*z-i))+T*t;for(let e=0;e<q;++e)c+=w[a+(t*q+e)]*k[o+e]}}m[g*e+y*n+b*o+t]=c}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},zT={kernelName:Ot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=ne(r.shape),a=n.data.get(r.dataId).values,o=La([s,s],r.dtype),i=o.values;for(let e=0;e<a.length;e++)i[e*s+e]=a[e];const u=[...r.shape,...r.shape];return n.makeTensorInfo(u,o.dtype,o.values)}},FT={kernelName:_t,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s}=e,{strides:a,pad:o,dilations:i}=n,u=t,l=u.data.get(r.dataId).values,c=r.shape.length,p=u.data.get(s.dataId).values,h=s.shape.length,{batchSize:d,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:w,strideHeight:x,strideWidth:S,filterHeight:v,filterWidth:k,dilationHeight:N,dilationWidth:I,outShape:T}=ou(r.shape,s.shape,a,o,"NHWC",i),C=ne(T),A=T.length,E=me(r.dtype,C);for(let e=0;e<d;++e)for(let t=0;t<y;++t){const n=t*x-w.top;for(let a=0;a<b;++a){const o=a*S-w.left;for(let i=0;i<g;++i){let u=Number.MIN_SAFE_INTEGER;for(let t=0;t<v;++t){const a=n+t*N;if(a>=0&&a<f)for(let n=0;n<k;++n){const d=o+n*I;if(d>=0&&d<m){const o=De([e,a,d,i],c,Ae(r.shape)),f=De([t,n,i],h,Ae(s.shape)),m=l[o]+p[f];m>u&&(u=m)}}}E[De([e,t,a,i],A,Ae(T))]=u}}}return{dataId:u.write(os(E,r.dtype),T,r.dtype),shape:T,dtype:r.dtype}}},LT={kernelName:Rt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s,dy:a}=e,{strides:o,pad:i,dilations:u}=n,l=t,c=Pe(r.shape,l.data.get(r.dataId).values),p=Pe(s.shape,l.data.get(s.dataId).values),{batchSize:h,inHeight:d,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:w,strideWidth:x,filterHeight:S,filterWidth:v,dilationHeight:k,dilationWidth:N,outShape:I}=ou(r.shape,s.shape,o,i,"NHWC",u);Y(a.rank===I.length,(()=>`Error in ${Rt}, dy must have the same rank as output ${I.length}, but got ${a.rank}`));const T=Pe(I,l.data.get(a.dataId).values),C=Oe(s.shape,s.dtype);for(let e=0;e<h;++e)for(let t=0;t<g;++t){const n=t*w-b.top;for(let r=0;r<y;++r){const s=r*x-b.left;for(let a=0;a<m;++a){let o=Number.MIN_SAFE_INTEGER,i=0,u=0;for(let t=0;t<S;++t){const r=n+t*k;if(r>=0&&r<d)for(let n=0;n<v;++n){const l=s+n*N;if(l>=0&&l<f){const s=c[e][r][l][a]+p[t][n][a];s>o&&(o=s,i=t,u=n)}}}C[i][u][a]+=T[e][t][r][a]}}}return{dataId:l.write(os(C,r.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},qT={kernelName:Dt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s,dy:a}=e,{strides:o,pad:i,dilations:u}=n,l=t,c=Pe(r.shape,l.data.get(r.dataId).values),p=Pe(s.shape,l.data.get(s.dataId).values),{batchSize:h,inHeight:d,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:w,strideWidth:x,filterHeight:S,filterWidth:v,dilationHeight:k,dilationWidth:N,outShape:I}=ou(r.shape,s.shape,o,i,"NHWC",u);Y(a.rank===I.length,(()=>`Error in ${Dt}, dy must have the same rank as output ${I.length}, but got ${a.rank}`));const T=Pe(I,l.data.get(a.dataId).values),C=Oe(r.shape,r.dtype);for(let e=0;e<h;++e)for(let t=0;t<g;++t){const n=t*w-b.top;for(let r=0;r<y;++r){const s=r*x-b.left;for(let a=0;a<m;++a){let o=Number.MIN_SAFE_INTEGER,i=n<0?0:n,u=s<0?0:s;for(let t=0;t<S;++t){const r=n+t*k;if(r>=0&&r<d)for(let n=0;n<v;++n){const l=s+n*N;if(l>=0&&l<f){const s=c[e][r][l][a]+p[t][n][a];s>o&&(o=s,i=r,u=l)}}}C[e][i][u][a]+=T[e][t][r][a]}}}return{dataId:l.write(os(C,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},BT={kernelName:Lt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:r,y:s}=t;RN([r,s],"eluGrad");const a=new Float32Array(ne(s.shape)),o=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values;for(let e=0;e<o.length;++e){const t=o[e];a[e]=t>=1?i[e]:i[e]*(t+1)}return n.makeTensorInfo(s.shape,"float32",a)}},WT=HN(((e,t)=>e===t?1:0)),VT=lI(Bt,WT,null,"bool"),jT={kernelName:Bt,backendName:"cpu",kernelFunc:VT},UT=rd,GT=sd,HT=ad,KT=od,QT=id,XT=ud,JT=LN(qt,(e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+UT*n);return t*(1-((((XT*r+QT)*r+KT)*r+HT)*r+GT)*r*Math.exp(-n*n))})),YT={kernelName:qt,backendName:"cpu",kernelFunc:JT},ZT=oT((e=>Math.exp(e))),eC=qN(Wt,ZT),tC={kernelName:Wt,backendName:"cpu",kernelFunc:eC};function nC(e){const{inputs:t,backend:n,attrs:r}=e,{input:s}=t,{dim:a}=r,o=s.shape.length,i=s.shape.slice();let u=a;return a<0&&(Y(-(o+1)<=a,(()=>`Axis must be in the interval [${-(o+1)}, ${o}]`)),u=o+a+1),i.splice(u,0,1),mI({inputs:{x:s},backend:n,attrs:{shape:i}})}const rC={kernelName:Vt,backendName:"cpu",kernelFunc:nC},sC=oT((e=>Math.expm1(e))),aC=qN(jt,sC),oC={kernelName:jt,backendName:"cpu",kernelFunc:aC},iC=HN(((e,t)=>e*t)),uC=cI(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),lC=lI(On,iC,uC),cC={kernelName:On,backendName:"cpu",kernelFunc:lC},pC=HN(((e,t)=>e/t)),hC=lI(zt,pC),dC={kernelName:zt,backendName:"cpu",kernelFunc:hC},fC=HN(((e,t)=>e-t)),mC=cI(((e,t,n,r)=>({real:e-n,imag:t-r}))),gC=lI(vr,fC,mC),yC={kernelName:vr,backendName:"cpu",kernelFunc:gC};function bC(e,t,n){const r=e.shape,s=r[0],a=r[1],o=n.data.get(e.dataId),i=o.complexTensorInfos.real,u=o.complexTensorInfos.imag,l=[s,a],c=ne(l),p=fe("float32",c),h=fe("float32",c);for(let e=0;e<s;e++){const r=eT({inputs:{x:i},backend:n,attrs:{begin:[e,0],size:[1,a]}}),s=eT({inputs:{x:u},backend:n,attrs:{begin:[e,0],size:[1,a]}}),o=nI({inputs:{real:r,imag:s},backend:n}),{real:l,imag:c}=wC(o,t,n),d=pd(l,c);for(let t=0;t<a;t++){const n=md(d,t);p[e*a+t]=n.real,h[e*a+t]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o)}const d=n.makeTensorInfo(l,"float32",p),f=n.makeTensorInfo(l,"float32",h),m=nI({inputs:{real:d,imag:f},backend:n});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}function wC(e,t,n){const r=ne(e.shape),s=n.data.get(e.dataId),a=n.data.get(s.complexTensorInfos.real.dataId).values,o=n.data.get(s.complexTensorInfos.imag.dataId).values;if(0==((i=r)&i-1)){const s=xC(a,o,r,t,n),i=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(i,"float32",s.real),t=n.makeTensorInfo(i,"float32",s.imag),a=n.makeTensorInfo([],"float32",as(r,"float32")),o=VN({inputs:{x:a},backend:n}),u=dC.kernelFunc({inputs:{a:e,b:a},backend:n}),l=dC.kernelFunc({inputs:{a:t,b:o},backend:n}),c=n.data.get(u.dataId).values,p=n.data.get(l.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),{real:c,imag:p}}return s}return hd(function(e,t,n){const r=new Float32Array(2*t);for(let s=0;s<t;s++){let a=0,o=0;for(let r=0;r<t;r++){const i=bd(s*r,t,n),u=md(e,r);a+=u.real*i.real-u.imag*i.imag,o+=u.real*i.imag+u.imag*i.real}n&&(a/=t,o/=t),gd(r,a,o,s)}return r}(pd(a,o),r,t));var i}function xC(e,t,n,r,s){if(1===n)return{real:e,imag:t};const a=pd(e,t),o=n/2,i=dd(a),u=i.real,l=i.imag,c=[u.length],p=s.makeTensorInfo(c,"float32",u),h=s.makeTensorInfo(c,"float32",l),d=nI({inputs:{real:p,imag:h},backend:s}),f=fd(a),m=f.real,g=f.imag,y=[m.length],b=s.makeTensorInfo(y,"float32",m),w=s.makeTensorInfo(y,"float32",g),x=nI({inputs:{real:b,imag:w},backend:s}),S=xC(u,l,o,r,s),v=S.real,k=S.imag,N=[v.length],I=s.makeTensorInfo(N,"float32",v),T=s.makeTensorInfo(N,"float32",k),C=nI({inputs:{real:I,imag:T},backend:s}),A=xC(m,g,o,r,s),E=A.real,P=A.imag,$=[E.length],M=s.makeTensorInfo($,"float32",E),O=s.makeTensorInfo($,"float32",P),_=nI({inputs:{real:M,imag:O},backend:s}),D=yd(n,r),R=[D.real.length],z=s.makeTensorInfo(R,"float32",D.real),F=s.makeTensorInfo(R,"float32",D.imag),L=nI({inputs:{real:z,imag:F},backend:s}),q=lC({inputs:{a:L,b:_},backend:s}),B=dI({inputs:{a:C,b:q},backend:s}),W=gC({inputs:{a:C,b:q},backend:s}),V=aI({inputs:{input:B},backend:s}),j=aI({inputs:{input:W},backend:s}),U=fT({inputs:{input:B},backend:s}),G=fT({inputs:{input:W},backend:s}),H=gT({inputs:[V,j],backend:s,attrs:{axis:0}}),K=gT({inputs:[U,G],backend:s,attrs:{axis:0}}),Q=s.data.get(H.dataId).values,X=s.data.get(K.dataId).values;return s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(d),s.disposeIntermediateTensorInfo(b),s.disposeIntermediateTensorInfo(w),s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(I),s.disposeIntermediateTensorInfo(T),s.disposeIntermediateTensorInfo(C),s.disposeIntermediateTensorInfo(M),s.disposeIntermediateTensorInfo(O),s.disposeIntermediateTensorInfo(_),s.disposeIntermediateTensorInfo(z),s.disposeIntermediateTensorInfo(F),s.disposeIntermediateTensorInfo(L),s.disposeIntermediateTensorInfo(q),s.disposeIntermediateTensorInfo(B),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(K),{real:Q,imag:X}}const SC={kernelName:Ut,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=ne(r.shape),a=r.shape[r.shape.length-1],o=mI({inputs:{x:r},backend:n,attrs:{shape:[s/a,a]}}),i=bC(o,!1,n),u=mI({inputs:{x:i},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),u}};function vC(e){const{backend:t,attrs:n}=e,{shape:r,value:s,dtype:a}=n,o=a||Ie(s),i=me(o,ne(r));return function(e,t,n){e.fill(t)}(i,s),t.makeTensorInfo(r,o,i)}const kC={kernelName:Gt,backendName:"cpu",kernelFunc:vC},NC={kernelName:Ht,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,s=n,a=fe(r.dtype,ne(r.shape)),[o,i,u,l]=r.shape,c=s.data.get(r.dataId).values;for(let e=0;e<o;e++){const t=e*u*i*l;for(let e=0;e<i;e++){const n=e*(u*l);for(let r=0;r<u;r++){const s=r*l;for(let i=0;i<l;i++){const p=[o,e,r,i][2],h=Math.round(u-p),d=t+n+s+i;let f=c[d];h>=0&&h<u&&(f=c[t+n+h*l+i]),a[d]=f}}}}return{dataId:s.write(a,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},IC=oT((e=>Math.floor(e))),TC=qN(Kt,IC),CC={kernelName:Kt,backendName:"cpu",kernelFunc:TC},AC=HN(((e,t)=>Math.floor(e/t))),EC=lI(Qt,AC,null,"int32"),PC={kernelName:Qt,backendName:"cpu",kernelFunc:EC},$C={kernelName:Fr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:o,preluActivationWeights:i}=t,{strides:u,pad:l,dataFormat:c,dilations:p,dimRoundingMode:h,activation:d,leakyreluAlpha:f}=r;let m=bT({inputs:{x:s,filter:a},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:p,dimRoundingMode:h}});if(o){const e=m;m=dI({inputs:{a:m,b:o},backend:n}),n.disposeIntermediateTensorInfo(e)}if(d){const e=m;m=tI(n,m,d,i,f),n.disposeIntermediateTensorInfo(e)}return m}},MC={kernelName:Lr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:o,preluActivationWeights:i}=t,{strides:u,pad:l,dataFormat:c,dilations:p,dimRoundingMode:h,activation:d,leakyreluAlpha:f}=r;let m=OT({inputs:{x:s,filter:a},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:p,dimRoundingMode:h}});if(o){const e=m;m=dI({inputs:{a:m,b:o},backend:n}),n.disposeIntermediateTensorInfo(e)}if(d){const e=m;m=tI(n,m,d,i,f),n.disposeIntermediateTensorInfo(e)}return m}},OC={kernelName:Yt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,a=ne(r.shape),o=s.shape,i=o[o.length-1],[u,l,c,p]=mo(r,s);if(0===l)return n.makeTensorInfo(u,r.dtype,[]);const h=La([l,c],r.dtype),d=n.data.get(s.dataId).values,f=n.data.get(r.dataId).values;for(let e=0;e<l;e++){const t=[];let n=0;for(let r=0;r<i;r++){const s=d[e*i+r];n+=s*p[r],t.push(s)}if(n<0||n>=a/c)throw new Error(`Invalid indices: ${t} does not index into ${r.shape}`);for(let t=0;t<c;t++)h.values[e*c+t]=f[n*c+t]}return n.makeTensorInfo(u,h.dtype,h.values)}};function _C(e,t,n){const r=La(n,e.dtype);for(let n=0;n<r.size;++n){const s=r.indexToLoc(n).slice(),a=s[0],o=s[2],i=t.locToIndex([a,o]);s[2]=t.values[i];const u=e.locToIndex(s);r.values[n]=e.values[u]}return r}const DC={kernelName:Jt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:a}=t,{axis:o,batchDims:i}=r;RN([s,a],"gatherV2");let u=i;null==i&&(u=0);const l=ne(a.shape),c=vd(s,a,he(o,s.shape)[0],u),p=mI({inputs:{x:s},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),h=mI({inputs:{x:a},backend:n,attrs:{shape:[c.batchSize,l/c.batchSize]}}),d=[c.batchSize,c.outerSize,l/c.batchSize,c.sliceSize],f=n.bufferSync(h),m=_C(n.bufferSync(p),f,d);return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.makeTensorInfo(c.outputShape,m.dtype,m.values)}},RC=HN(((e,t)=>e>t?1:0)),zC=lI(Zt,RC,null,"bool"),FC={kernelName:Zt,backendName:"cpu",kernelFunc:zC},LC=HN(((e,t)=>e>=t?1:0)),qC=lI(en,LC,null,"bool"),BC={kernelName:en,backendName:"cpu",kernelFunc:qC},WC={kernelName:nn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=ne(r.shape),a=r.shape[r.shape.length-1],o=mI({inputs:{x:r},backend:n,attrs:{shape:[s/a,a]}}),i=bC(o,!0,n),u=mI({inputs:{x:i},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),u}},VC=LN(sn,(e=>Number.isFinite(e)?1:0),"bool"),jC={kernelName:sn,backendName:"cpu",kernelFunc:VC},UC=LN(an,(e=>Math.abs(e)===1/0?1:0),"bool"),GC={kernelName:an,backendName:"cpu",kernelFunc:UC},HC=LN(on,(e=>Number.isNaN(e)?1:0),"bool"),KC={kernelName:on,backendName:"cpu",kernelFunc:HC},QC=HN(((e,t)=>e<t?1:0)),XC=lI(ln,QC,null,"bool"),JC={kernelName:ln,backendName:"cpu",kernelFunc:XC},YC=HN(((e,t)=>e<=t?1:0)),ZC=lI(cn,YC,null,"bool"),eA={kernelName:cn,backendName:"cpu",kernelFunc:ZC};function tA(e,t,n){const r=(t-e)/(n-1),s=Me(n,"float32");s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+r;return s}const nA={kernelName:pn,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:a}=n,o=tA(r,s,a);return t.makeTensorInfo([o.length],"float32",o)}},rA=oT((e=>Math.log(e))),sA=qN(hn,rA),aA={kernelName:hn,backendName:"cpu",kernelFunc:sA},oA=LN(dn,(e=>Math.log1p(e))),iA={kernelName:dn,backendName:"cpu",kernelFunc:oA},uA=HN(((e,t)=>e&&t)),lA=lI(fn,uA,null,"bool"),cA={kernelName:fn,backendName:"cpu",kernelFunc:lA},pA=LN(mn,(e=>e?0:1),"bool"),hA={kernelName:mn,backendName:"cpu",kernelFunc:pA},dA=HN(((e,t)=>e||t)),fA=lI(gn,dA,null,"bool"),mA={kernelName:gn,backendName:"cpu",kernelFunc:fA},gA={kernelName:bn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:a,bias:o,alpha:i,beta:u}=r;RN(s,"LRN");const l=s.shape[3],c=l-1,p=n.data.get(s.dataId).values,h=ne(s.shape),d=new Float32Array(h);function f(e){const t=e%l;let n=e-t+Math.max(0,t-a);const r=e-t+Math.min(t+a,c);let s=0;for(;n<=r;n++){const e=p[n];s+=e*e}return s}for(let e=0;e<h;e++){const t=f(e),n=p[e]*Math.pow(o+i*t,-u);d[e]=n}return n.makeTensorInfo(s.shape,s.dtype,d)}},yA={kernelName:wn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,y:a,dy:o}=t,{depthRadius:i,bias:u,alpha:l,beta:c}=r;RN(o,"LRNGrad");const p=ne(o.shape),h=o.shape[3],d=n.data.get(o.dataId).values,f=n.data.get(s.dataId).values,m=n.data.get(a.dataId).values,g=new Float32Array(p),y=p;for(let e=0;e<y;e++){const t=e%h,n=e-t+Math.max(0,t-i),r=e-t+Math.min(h,t+i+1);let s=0;for(let e=n;e<r;e++)s+=Math.pow(f[e],2);s=l*s+u;for(let t=n;t<r;t++){let n=-2*l*c*f[t]*m[e]/s;e===t&&(n+=Math.pow(s,-c)),n*=d[e],g[t]+=n}}return n.makeTensorInfo(o.shape,s.dtype,g)}};function bA(e,t,n,r){const s=fe(r,ne(n));for(let n=0;n<s.length;++n){const r=n*t;let a=e[r];for(let n=0;n<t;++n){const t=e[r+n];t>a&&(a=t)}s[n]=a}return s}function wA(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:a,keepDims:o}=r,i=n;let u=s.shape;const l=u.length,c=he(a,u);let p=c;const h=Fl(p,l);let d=i.data.get(s.dataId).values;if(null!=h){const e=new Array(l);for(let t=0;t<e.length;t++)e[t]=u[h[t]];d=CI(d,u,s.dtype,h,e),p=ql(p.length,l),u=e}RN(s,"max"),zl("max",p,l);const[f,m]=Dl(u,p),g=bA(d,ne(m),f,s.dtype),y=i.write(g,f,s.dtype);let b=f;return o&&(b=Rl(f,c)),{dataId:y,shape:b,dtype:s.dtype}}const xA={kernelName:xn,backendName:"cpu",kernelFunc:wA},SA=HN(((e,t)=>Math.max(e,t))),vA=lI(Sn,SA),kA={kernelName:Sn,backendName:"cpu",kernelFunc:vA},NA={kernelName:vn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;RN(s,"maxPool");const{filterSize:a,strides:o,pad:i,dimRoundingMode:u}=r;Y(yu(o,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const l=iu(s.shape,a,o,1,i,u);let c;if(1===l.filterWidth&&1===l.filterHeight&&se(l.inShape,l.outShape))c=VN({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=Ae(s.shape),r=UI(e,s.shape,s.dtype,t,l,"max");c=n.makeTensorInfo(l.outShape,s.dtype,r.values)}return c}},IA={kernelName:Nn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:u,dataFormat:l,dilations:c}=r;RN(s,"maxPool3d");let p=c;null==p&&(p=[1,1,1]);const h=uu(s.shape,a,o,p,i,u,l),d=HI(n.data.get(s.dataId).values,s.shape,s.dtype,Ae(s.shape),h,"max");return n.makeTensorInfo(d.shape,"float32",d.values)}},TA={kernelName:In,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,{filterSize:o,strides:i,pad:u,dilations:l,dimRoundingMode:c}=r;RN([s,a],"maxPool3DGrad");const p=uu(a.shape,o,i,l,u,c),h=function(e,t){const n=La(t.outShape,"int32"),r=t.strideDepth,s=t.strideHeight,a=t.strideWidth,o=t.dilationDepth,i=t.dilationHeight,u=t.dilationWidth,l=t.effectiveFilterDepth,c=t.effectiveFilterHeight,p=t.effectiveFilterWidth,h=t.padInfo.front,d=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){const b=y*r-h;let w=b;for(;w<0;)w+=o;const x=Math.min(t.inDepth,l+b);for(let r=0;r<t.outHeight;++r){const l=r*s-d;let h=l;for(;h<0;)h+=i;const S=Math.min(t.inHeight,c+l);for(let s=0;s<t.outWidth;++s){const d=s*a-f;let v=d;for(;v<0;)v+=u;const k=Math.min(t.inWidth,p+d);let N=Number.NEGATIVE_INFINITY,I=-1;for(let t=w;t<x;t+=o){const n=t-b;for(let r=h;r<S;r+=i){const s=r-l;for(let a=v;a<k;a+=u){const o=a-d,i=e.get(m,t,r,a,g);i>=N&&(N=i,I=n*c*p+s*c+o)}}}n.set(I,m,y,r,s,g)}}}return n}(n.bufferSync(a),p),d=p.strideDepth,f=p.strideHeight,m=p.strideWidth,g=p.dilationDepth,y=p.dilationHeight,b=p.dilationWidth,w=p.effectiveFilterDepth,x=p.effectiveFilterHeight,S=p.effectiveFilterWidth,v=w-1-p.padInfo.front,k=S-1-p.padInfo.left,N=x-1-p.padInfo.top,I=La(a.shape,"float32"),T=n.bufferSync(s);for(let e=0;e<p.batchSize;++e)for(let t=0;t<p.inChannels;++t)for(let n=0;n<p.inDepth;++n)for(let r=0;r<p.inHeight;++r)for(let s=0;s<p.inWidth;++s){const a=n-v,o=r-N,i=s-k;let u=0;for(let n=0;n<w;n+=g){const r=(a+n)/d;if(!(r<0||r>=p.outDepth||Math.floor(r)!==r))for(let s=0;s<x;s+=y){const a=(o+s)/f;if(!(a<0||a>=p.outHeight||Math.floor(a)!==a))for(let o=0;o<S;o+=b){const l=(i+o)/m;if(l<0||l>=p.outWidth||Math.floor(l)!==l)continue;const c=w*x*S-1-h.get(e,r,a,l,t)===n*x*S+s*S+o?1:0;0!==c&&(u+=T.get(e,r,a,l,t)*c)}}}I.set(u,e,n,r,s,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}},CA={kernelName:kn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a,output:o}=t,i=a;RN([a,o],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:p}=r,h=iu(i.shape,u,l,1,c,p),d=n.data.get(i.dataId).values,f=La(h.outShape,i.dtype,GI(d,i.shape,i.dtype,h).values),m=h.strideHeight,g=h.strideWidth,y=h.dilationHeight,b=h.dilationWidth,w=h.effectiveFilterHeight,x=h.effectiveFilterWidth,S=x-1-h.padInfo.left,v=w-1-h.padInfo.top,k=La(i.shape,"float32"),N=n.data.get(s.dataId).values,I=La(s.shape,"float32",N);for(let e=0;e<h.batchSize;++e)for(let t=0;t<h.inChannels;++t)for(let n=0;n<h.inHeight;++n)for(let r=0;r<h.inWidth;++r){const s=n-v,a=r-S;let o=0;for(let n=0;n<w;n+=y){const r=(s+n)/m;if(!(r<0||r>=h.outHeight||Math.floor(r)!==r))for(let s=0;s<x;s+=b){const i=(a+s)/g;if(i<0||i>=h.outWidth||Math.floor(i)!==i)continue;const u=w*x-1-f.get(e,r,i,t)===n*x+s?1:0;0!==u&&(o+=I.get(e,r,i,t)*u)}}k.set(o,e,n,r,t)}return n.makeTensorInfo(k.shape,k.dtype,k.values)}},AA={kernelName:Tn,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:s,strides:a,pad:o,includeBatchInIndex:i}=t,u=n;RN(r,"MaxPoolWithArgmax");const l=u.data.get(r.dataId).values,c=iu(r.shape,s,a,[1,1],o),[p,h]=function(e,t,n,r,s){const a=UI(e,0,n,Ae(t),s,"max"),o=GI(e,t,n,s,!0,r);return[a.values,o.values]}(l,r.shape,r.dtype,i,c),d=u.write(p,c.outShape,r.dtype),f=u.write(h,c.outShape,r.dtype);return[{dataId:d,shape:c.outShape,dtype:r.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}};function EA(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r;let i;RN(s,"sum"),i="bool"===s.dtype?iI({inputs:{x:s},backend:n,attrs:{dtype:"int32"}}):VN({inputs:{x:s},backend:n});const u=i.shape.length,l=he(a,i.shape),c=Fl(l,u);let p=l,h=i;null!=c&&(h=AI({inputs:{x:i},backend:n,attrs:{perm:c}}),p=ql(p.length,u)),zl("sum",p,h.shape.length);const[d,f]=Dl(h.shape,p);let m=sI(n,d,ks(h.dtype,"int32"));const g=ne(f),y=n.data.get(m.dataId).values,b=n.data.get(h.dataId).values;for(let e=0;e<y.length;++e){const t=e*g;let n=0;for(let e=0;e<g;++e)n+=b[t+e];y[e]=n}if(o){const e=m;m=mI({inputs:{x:m},backend:n,attrs:{shape:Rl(m.shape,l)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(i),null!=c&&n.disposeIntermediateTensorInfo(h),m}const PA={kernelName:gr,backendName:"cpu",kernelFunc:EA},$A={kernelName:Cn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r,i=he(a,s.shape),u=ne(Dl(s.shape,i)[1]),l=[],c=n.makeTensorInfo([],"float32",new Float32Array([u]));l.push(c);const p=iI({inputs:{x:s},backend:n,attrs:{dtype:"float32"}});l.push(p);const h=hC({inputs:{a:p,b:c},backend:n});l.push(h);const d=EA({inputs:{x:h},backend:n,attrs:{axis:a,keepDims:o}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},MA={kernelName:An,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r;RN(s,"min");const i=he(a,s.shape);let u=i;const l=Fl(u,s.shape.length);let c=s;null!=l&&(c=AI({inputs:{x:s},backend:n,attrs:{perm:l}}),u=ql(u.length,s.shape.length)),zl("min",u,c.shape.length);const[p,h]=Dl(c.shape,u),d=ne(h),f=Me(ne(p),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*d;let n=m[t];for(let e=0;e<d;++e){const r=m[t+e];r<n&&(n=r)}f[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(p,c.dtype,f);if(o){const e=mI({inputs:{x:g},backend:n,attrs:{shape:Rl(p,i)}});return n.disposeIntermediateTensorInfo(g),e}return g}},OA=HN(((e,t)=>Math.min(e,t))),_A=lI(En,OA),DA={kernelName:En,backendName:"cpu",kernelFunc:_A},RA={kernelName:Pn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,mode:o}=r;RN(s,"mirrorPad");const i=a.map(((e,t)=>e[0]+s.shape[t]+e[1])),u=a.map((e=>e[0])),l=a.map(((e,t)=>e[0]+s.shape[t])),c="reflect"===o?0:1,p=n.data.get(s.dataId).values,h=s.shape.length,d=Ae(s.shape),f=ne(i),m=i.length,g=Ae(i),y=fe(s.dtype,f);for(let e=0;e<f;e++){let t=Re(e,m,g);for(let e=0;e<m;e++)t[e]<u[e]?t[e]=2*u[e]-t[e]-c:t[e]>=l[e]&&(t[e]=2*(l[e]-1)-t[e]+c);t=t.map(((e,t)=>e-u[t]));const n=De(t,h,d);y[e]=p[n]}return{dataId:n.write(y,i,s.dtype),shape:i,dtype:s.dtype}}},zA=HN(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),FA=lI($n,zA),LA={kernelName:$n,backendName:"cpu",kernelFunc:FA};function qA(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:a}=r,o=s.shape.length;let i=a;if(-1===i&&(i=o-1),i!==o-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${o} and dim was ${i}`);const u=he([i],s.shape),l=wA({inputs:{x:s},backend:n,attrs:{reductionIndices:u,keepDims:!1}}),c=Rl(l.shape,u),p=mI({inputs:{x:l},backend:n,attrs:{shape:c}}),h=gC({inputs:{a:s,b:p},backend:n}),d=eC({inputs:{x:h},backend:n}),f=EA({inputs:{x:d},backend:n,attrs:{axis:u,keepDims:!1}}),m=mI({inputs:{x:f},backend:n,attrs:{shape:c}}),g=hC({inputs:{a:d,b:m},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const BA={kernelName:wr,backendName:"cpu",kernelFunc:qA},WA={kernelName:Mn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:a,seed:o,normalized:i}=r;RN(s,"multinomial");const u=i?s:qA({inputs:{logits:s},backend:n,attrs:{dim:-1}}),l=u.shape[0],c=u.shape[1],p=n.data.get(u.dataId).values,h=[l,a],d=Me(ne(h),"int32");for(let e=0;e<l;++e){const t=e*c,n=new Float32Array(c-1);n[0]=p[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+p[t+e];const r=bc.alea(o.toString()),s=e*a;for(let e=0;e<a;++e){const t=r();d[s+e]=n.length;for(let r=0;r<n.length;r++)if(t<n[r]){d[s+e]=r;break}}}return i||n.disposeIntermediateTensorInfo(u),n.makeTensorInfo(h,"int32",d)}};function VA(e,t,n){const r=as(-1,n);return iC([],t,r,e,n)}const jA={kernelName:_n,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;RN(r,"neg");const s=n.data.get(r.dataId).values,[a,o]=VA(s,r.shape,r.dtype);return n.makeTensorInfo(o,r.dtype,a)}},UA=ph,GA={kernelName:Rn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:u}=r;RN(s,"NonMaxSuppression");const l=n.data.get(s.dataId).values,c=n.data.get(a.dataId).values,{selectedIndices:p}=UA(l,c,o,i,u);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}},HA=hh,KA={kernelName:zn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:u,padToMaxOutputSize:l}=r;RN(s,"NonMaxSuppressionPadded");const c=n.data.get(s.dataId).values,p=n.data.get(a.dataId).values,{selectedIndices:h,validOutputs:d}=HA(c,p,o,i,u,l);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([d]))]}},QA=dh,XA={kernelName:Fn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:u,softNmsSigma:l}=r;RN(s,"NonMaxSuppressionWithScore");const c=n.data.get(s.dataId).values,p=n.data.get(a.dataId).values,h=o,d=i,f=u,m=l,{selectedIndices:g,selectedScores:y}=QA(c,p,h,d,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},JA=HN(((e,t)=>e!==t?1:0)),YA=lI(Dn,JA,null,"bool"),ZA={kernelName:Dn,backendName:"cpu",kernelFunc:YA},eE={kernelName:qn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{depth:a,onValue:o,offValue:i}=r;RN(s,"oneHot");const u=ne(s.shape),l=new Float32Array(u*a);l.fill(i);const c=n.data.get(s.dataId).values;for(let e=0;e<u;++e)c[e]>=0&&c[e]<a&&(l[e*a+c[e]]=o);return n.makeTensorInfo([...s.shape,a],"int32",l)}};function tE(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=aI({inputs:{input:r},backend:n}),t=tE({inputs:{x:e},backend:n}),s=fT({inputs:{input:r},backend:n}),a=tE({inputs:{x:s},backend:n}),o=nI({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),o}return vC({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const nE={kernelName:Or,backendName:"cpu",kernelFunc:tE},rE={kernelName:Ln,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===s.dtype){const t=aI({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),a=fT({inputs:{input:s},backend:r}),o=tE({inputs:{x:a},backend:r}),i=nI({inputs:{real:n,imag:o},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(o),i}return vC({backend:r,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}};function sE(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return nC({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const a=t[0].shape,o=t[0].dtype;t.forEach((e=>{Z(a,e.shape,"All tensors passed to stack must have matching shapes"),Y(o===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const i=[],u=gT({inputs:t.map((e=>{const t=nC({inputs:{input:e},backend:n,attrs:{dim:s}});return i.push(t),t})),backend:n,attrs:{axis:s}});return i.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}const aE={kernelName:Bn,backendName:"cpu",kernelFunc:sE},oE={kernelName:Wn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,constantValue:o}=r;RN(s,"pad");const i=a.map(((e,t)=>e[0]+s.shape[t]+e[1])),u=a.map((e=>e[0])),l=n.data.get(s.dataId).values,c=ne(s.shape),p=s.shape.length,h=Ae(s.shape),d=ne(i),f=i.length,m=Ae(i),g=fe(s.dtype,d);0!==o&&g.fill(o);for(let e=0;e<c;e++)g[De(Re(e,p,h).map(((e,t)=>e+u[t])),f,m)]=l[e];return{dataId:n.write(g,i,s.dtype),shape:i,dtype:s.dtype}}},iE=HN(((e,t)=>Math.pow(e,t))),uE=lI(jn,iE),lE={kernelName:jn,backendName:"cpu",kernelFunc:uE};function cE(e,t,n,r){const[s,a]=Dl(e,r),o=ks(t,"int32"),i=Me(ne(s),o),u=ne(a);for(let e=0;e<i.length;++e){const t=e*u;let r=1;for(let e=0;e<u;++e)r*=n[t+e];i[e]=r}return{outVals:i,outShape:s,outDtype:o}}const pE={kernelName:Gn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r;RN(s,"prod");const i=s.shape.length,u=he(a,s.shape),l=Fl(u,i);let c=u,p=s;const h=[];null!=l&&(p=AI({inputs:{x:s},backend:n,attrs:{perm:l}}),h.push(p),c=ql(c.length,i));const d=n.data.get(p.dataId).values,{outVals:f,outShape:m,outDtype:g}=cE(p.shape,p.dtype,d,c);let y=m;return o&&(y=Rl(m,u)),h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(y,g,f)}};function hE(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return Me(0,r);const s=Me(Math.abs(Math.ceil((t-e)/n)),r);t<e&&1===n&&(n=-1),s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+n;return s}const dE={kernelName:Hn,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,dtype:a,step:o}=n,i=hE(r,s,o,a);return t.makeTensorInfo([i.length],a,i)}},fE=LN(Qn,(e=>1/e)),mE={kernelName:Qn,backendName:"cpu",kernelFunc:fE},gE={kernelName:er,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:o,size:i}=r;RN(s,"resizeBilinear");const u=Ae(s.shape),[l,c]=i,[p,h,d,f]=s.shape,m=n.data.get(s.dataId).values,g=new Float32Array(ne([p,l,c,f])),y=[a&&l>1?h-1:h,a&&c>1?d-1:d],b=[a&&l>1?l-1:l,a&&c>1?c-1:c];let w=0;const x=y[0]/b[0],S=y[1]/b[1];for(let e=0;e<p;e++)for(let t=0;t<l;t++){let n;n=o?x*(t+.5)-.5:x*t;const r=Math.max(0,Math.floor(n)),s=n-r,a=Math.min(h-1,Math.ceil(n)),i=e*u[0]+r*u[1],l=e*u[0]+a*u[1];for(let e=0;e<c;e++){let t;t=o?S*(e+.5)-.5:S*e;const n=Math.max(0,Math.floor(t)),r=t-n,a=Math.min(d-1,Math.ceil(t)),c=i+n*u[2],p=l+n*u[2],h=i+a*u[2],y=l+a*u[2];for(let e=0;e<f;e++){const t=m[c+e],n=m[p+e],a=t+(m[h+e]-t)*r,o=a+(n+(m[y+e]-n)*r-a)*s;g[w++]=o}}}return n.makeTensorInfo([p,l,c,f],"float32",g)}},yE={kernelName:tr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:o}=r;RN([a,s],"resizeBilinearGrad");const i=Ae(s.shape),[u,l,c,p]=s.shape,[,h,d]=a.shape,f=new Float32Array(u*l*c*p),m=[o&&h>1?l-1:l,o&&d>1?c-1:c],g=[o&&h>1?h-1:h,o&&d>1?d-1:d],y=m[0]/g[0],b=m[1]/g[1],w=n.data.get(a.dataId).values;let x=0;for(let e=0;e<u;e++){const t=e*i[0];for(let e=0;e<h;e++){const n=e*y,r=Math.floor(n),s=Math.min(Math.ceil(n),l-1),a=t+r*i[1],o=t+s*i[1],u=n-r,h=1-u;for(let e=0;e<d;e++){const t=e*b,n=Math.floor(t),r=Math.min(Math.ceil(t),c-1),s=t-n,l=1-s,d=a+n*i[2],m=a+r*i[2],g=o+n*i[2],y=o+r*i[2],S=h*l,v=h*s,k=u*l,N=u*s;for(let e=0;e<p;e++){const t=w[x++];f[d+e]+=t*S,f[m+e]+=t*v,f[g+e]+=t*k,f[y+e]+=t*N}}}}return n.makeTensorInfo([u,c,l,p],"float32",f)}},bE={kernelName:Yn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:o,size:i}=r;RN(s,"resizeNearestNeighbor");const u=Ae(s.shape),[l,c]=i,[p,h,d,f]=s.shape,m=n.data.get(s.dataId).values,g=new Float32Array(p*l*c*f),y=[a&&l>1?h-1:h,a&&c>1?d-1:d],b=[a&&l>1?l-1:l,a&&c>1?c-1:c],w=y[0]/b[0],x=y[1]/b[1];let S=0;for(let e=0;e<p;e++){const t=e*u[0];for(let e=0;e<l;e++){const n=o?w*(e+.5):w*e;let r=Math.min(h-1,a?Math.round(n):Math.floor(n));o&&(r=Math.max(0,r));const s=t+r*u[1];for(let e=0;e<c;e++){const t=o?x*(e+.5):x*e;let n=Math.min(d-1,a?Math.round(t):Math.floor(t));o&&(n=Math.max(0,n));const r=s+n*u[2];for(let e=0;e<f;e++){const t=m[r+e];g[S++]=t}}}}return n.makeTensorInfo([p,l,c,f],s.dtype,g)}},wE={kernelName:Zn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:o}=r;RN([a,s],"resizeNearestNeighborGrad");const i=Ae(s.shape),u=Ae(a.shape),[l,c,p,h]=s.shape,[,d,f]=a.shape,m=new Float32Array(l*c*p*h),g=n.data.get(a.dataId).values,y=[o&&d>1?c-1:c,o&&f>1?p-1:p],b=[o&&d>1?d-1:d,o&&f>1?f-1:f],w=y[0]/b[0],x=y[1]/b[1],S=1/w,v=1/x,k=2*Math.ceil(S)+2,N=2*Math.ceil(v)+2;for(let e=0;e<l;e++){const t=e*i[0];for(let e=0;e<c;e++){const n=t+e*i[1],r=Math.floor(e*S),s=Math.floor(r-k/2);for(let r=0;r<p;r++){const a=n+r*i[2],l=Math.floor(r*v),y=Math.floor(l-N/2);for(let n=0;n<h;n++){let i=0;for(let a=0;a<k;a++){const l=a+s;if(l<0||l>=d)continue;const h=t+l*u[1],m=l*w;if(e===Math.min(c-1,o?Math.round(m):Math.floor(m)))for(let e=0;e<N;e++){const t=e+y;if(t<0||t>=f)continue;const s=h+t*u[2],a=t*x;r===Math.min(p-1,o?Math.round(a):Math.floor(a))&&(i+=g[s+n])}}m[a+n]=i}}}}return n.makeTensorInfo(s.shape,s.dtype,m)}},xE={kernelName:rr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:a}=r;RN(s,"reverse");const o=s.shape.length,i=he(a,s.shape);if(0===o)return VN({inputs:{x:s},backend:n});const u=new ps(s.shape,s.dtype),l=n.bufferSync(s);for(let e=0;e<u.size;e++){const t=u.indexToLoc(e),n=t.slice();i.forEach((e=>n[e]=s.shape[e]-1-n[e])),u.set(l.get(...n),...t)}return n.makeTensorInfo(u.shape,u.dtype,u.values)}},SE={kernelName:Rr,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:a,center:o}=t,i=n,u=fe(r.dtype,ne(r.shape)),[l,c,p,h]=r.shape,[d,f]=Qh(o,c,p),m=Math.sin(s),g=Math.cos(s),y=i.data.get(r.dataId).values;for(let e=0;e<l;e++){const t=e*p*c*h;for(let e=0;e<c;e++){const n=e*(p*h);for(let r=0;r<p;r++){const s=r*h;for(let o=0;o<h;o++){const i=[l,e,r,o],b=i[2],w=i[1];let x=(b-d)*g-(w-f)*m,S=(b-d)*m+(w-f)*g;x=Math.round(x+d),S=Math.round(S+f);let v=a;"number"!=typeof a&&(v=3===o?255:a[o]),x>=0&&x<p&&S>=0&&S<c&&(v=y[t+S*(p*h)+x*h+o]),u[t+n+s+o]=v}}}}return{dataId:i.write(u,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},vE=LN(sr,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),kE={kernelName:sr,backendName:"cpu",kernelFunc:vE},NE=oT((e=>1/Math.sqrt(e))),IE=qN(ar,NE),TE={kernelName:ar,backendName:"cpu",kernelFunc:IE};function CE(e,t,n,r,s,a,o,i,u,l){const c=[r/s,s],p=e.values,h=t.values;if(0===r)return La(n,t.dtype);const d=La(c,t.dtype);d.values.fill(u);for(let e=0;e<a;e++){const a=[];let u=0;for(let t=0;t<o;t++){const n=p[e*o+t];a.push(n),u+=n*i[t]}if(u<0||u>=r/s)throw new Error(`Invalid indices: ${a} does not index into ${n}`);for(let n=0;n<s;n++)l?d.values[u*s+n]+=h[e*s+n]:d.values[u*s+n]=0===t.rank?h[0]:h[e*s+n]}return d}const AE={kernelName:or,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:a}=t,{shape:o}=r,{sliceRank:i,numUpdates:u,sliceSize:l,strides:c,outputSize:p}=bo(0,s,o),h=CE(n.bufferSync(s),n.bufferSync(a),o,p,l,u,i,c,0,!0);return n.makeTensorInfo(o,h.dtype,h.values)}},EE={kernelName:ir,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:a}=t;RN([r,s,a],"select");const o=r.shape.length,i=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values,c=ks(s.dtype,a.dtype),p=Me(ne(s.shape),c);let h=0;const d=0===o||o>1||1===s.shape.length?1:ne(s.shape.slice(1));for(let e=0;e<i.length;e++)for(let t=0;t<d;t++)1===i[e]?p[h++]=u[e]:p[h++]=l[e];return n.makeTensorInfo(s.shape,c,p)}},PE=td,$E=nd,ME=LN(ur,(e=>e>=0?$E*e:PE*(Math.exp(e)-1))),OE={kernelName:ur,backendName:"cpu",kernelFunc:ME},_E=LN(dr,(e=>1/(1+Math.exp(-e)))),DE={kernelName:dr,backendName:"cpu",kernelFunc:_E},RE=LN(hr,(e=>e<0?-1:e>0?1:0)),zE={kernelName:hr,backendName:"cpu",kernelFunc:RE},FE=LN(cr,(e=>Math.sin(e))),LE={kernelName:cr,backendName:"cpu",kernelFunc:FE},qE=LN(pr,(e=>Math.sinh(e))),BE={kernelName:pr,backendName:"cpu",kernelFunc:qE},WE=Math.log(1.1920928955078125e-7)+2,VE=LN(fr,(e=>{const t=e>-WE,n=e<WE,r=Math.exp(e);let s;return s=n?r:t?e:Math.log(1+r),s})),jE={kernelName:fr,backendName:"cpu",kernelFunc:VE},UE={kernelName:yr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,paddings:o}=r;RN([s],"spaceToBatchND");const i=ne(a),u=[[0,0]];u.push(...o);for(let e=1+a.length;e<s.shape.length;++e)u.push([0,0]);const l=oE.kernelFunc({inputs:{x:s},backend:n,attrs:{paddings:u,constantValue:0}}),c=Xh(l.shape,a,i,!1),p=Jh(c.length,a.length,!1),h=Yh(l.shape,a,i,!1),d=mI({inputs:{x:l},backend:n,attrs:{shape:c}}),f=AI({inputs:{x:d},backend:n,attrs:{perm:p}}),m=mI({inputs:{x:f},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}},GE={kernelName:kr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:a,defaultValue:o}=t,{outputShape:i}=r,{sliceRank:u,numUpdates:l,sliceSize:c,strides:p,outputSize:h}=bo(0,s,i),d=CE(n.bufferSync(s),n.bufferSync(a),i,h,c,l,u,p,n.data.get(o.dataId).values[0],!1);return n.makeTensorInfo(i,d.dtype,d.values)}},HE={kernelName:br,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:a,axis:o}=r,i=he(o,s.shape)[0],u=wd(s,a,i),l=new Array(s.shape.length).fill(0),c=s.shape.slice();return u.map((e=>{const t=[...c];t[i]=e;const r=eT({inputs:{x:s},backend:n,attrs:{begin:l,size:t}});return l[i]+=e,r}))}},KE=LN(mr,(e=>Math.sqrt(e))),QE={kernelName:mr,backendName:"cpu",kernelFunc:KE},XE={kernelName:Sr,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;RN(n,"square");const s=r.data.get(n.dataId).values,a=new Float32Array(s.length);for(let e=0;e<s.length;++e){const t=s[e];a[e]=t*t}return{dataId:r.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},JE=HN(((e,t)=>{const n=e-t;return n*n})),YE=lI(xr,JE),ZE={kernelName:xr,backendName:"cpu",kernelFunc:YE},eP=LN(_r,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),tP={kernelName:_r,backendName:"cpu",kernelFunc:eP};function nP(e,t,n,r){const s=La(e,t.dtype);for(let e=0;e<s.size;e++){const a=s.indexToLoc(e),o=new Array(a.length);for(let e=0;e<o.length;e++)o[e]=a[e]*n[e]+r[e];s.set(t.get(...o),...a)}return s}const rP={kernelName:Nr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,end:o,strides:i,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:p,shrinkAxisMask:h}=r;RN(s,"stridedSlice");const{nonStrided:d,$begin:f,$strides:m,size:g,newShape:y,outShape:b}=_o(s.shape,a,o,i,u,l,c,p,h),w=mI({inputs:{x:s},backend:n,attrs:{shape:y}});let x;if(d){const e=eT({inputs:{x:w},backend:n,attrs:{begin:f,size:g}});x=mI({inputs:{x:e},backend:n,attrs:{shape:b}}),n.disposeIntermediateTensorInfo(e)}else if(b.some((e=>0===e)))x=n.makeTensorInfo(b,s.dtype,[]);else{const e=nP(b,n.bufferSync(w),m,f);x=n.makeTensorInfo(e.shape,e.dtype,e.values)}const S=mI({inputs:{x},backend:n,attrs:{shape:b}});return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(x),S}},sP=LN(Ir,(e=>Math.tan(e))),aP={kernelName:Ir,backendName:"cpu",kernelFunc:sP},oP=LN(Tr,(e=>Math.tanh(e)));function iP(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const r=La(n,e.dtype);for(let t=0;t<r.values.length;++t){const n=r.indexToLoc(t),s=new Array(e.rank);for(let t=0;t<s.length;t++)s[t]=n[t]%e.shape[t];const a=e.locToIndex(s);r.values[t]=e.values[a]}return r}function uP(e,t,n,r,s){const a=t[t.length-1],[o,i]=[e.length/a,a],u=fe(n,o*r),l=fe("int32",o*r);for(let t=0;t<o;t++){const n=t*i,s=e.subarray(n,n+i),a=[];for(let e=0;e<s.length;e++)a.push({value:s[e],index:e});a.sort(((e,t)=>t.value-e.value));const o=t*r,c=u.subarray(o,o+r),p=l.subarray(o,o+r);for(let e=0;e<r;e++)c[e]=a[e].value,p[e]=a[e].index}const c=t.slice();return c[c.length-1]=r,[La(c,n,u),La(c,"int32",l)]}function lP(e,t,n,r){const s=he(t,n)[0],a=[1,n[0],1];for(let e=0;e<s;e++)a[0]*=n[e];a[1]=n[s];for(let e=s+1;e<n.length;e++)a[2]*=n[e];const o={},i=new Int32Array(n[s]),u=new ps(a,r,e),l=[],c=1===a[0]&&1===a[2];for(let t=0;t<n[s];t++){let n;if(c)n=e[t].toString();else{const e=[];for(let n=0;n<a[0];n++)for(let r=0;r<a[2];r++)e.push(u.get(n,t,r));n=e.join(",")}if(void 0!==o[n])i[t]=o[n];else{const e=Object.keys(o).length;o[n]=e,i[t]=e,l.push(t)}}const p=a.slice();p[1]=Object.keys(o).length;const h=new ps(p,r);l.forEach(((e,t)=>{for(let n=0;n<a[0];n++)for(let r=0;r<a[2];r++)h.set(u.get(n,e,r),n,t,r)}));const d=n.slice();return d[s]=p[1],{outputValues:h.values,outputShape:d,indices:i}}const cP=[wI,SI,kI,II,fI,TI,PI,$I,MI,OI,DI,zI,LI,WI,jI,KI,QI,XI,JI,bI,YI,nT,aT,uI,lT,pT,rI,hT,yT,xT,ST,wT,kT,NT,vT,TT,AT,ET,PT,$T,MT,_T,DT,RT,zT,FT,qT,LT,dC,WN,BT,jT,YT,tC,rC,oC,SC,kC,NC,CC,PC,$C,MC,OC,DC,FC,BC,jN,WC,mT,jC,GC,KC,GN,JC,eA,nA,aA,iA,cA,hA,mA,gA,yA,kA,NA,IA,TA,CA,AA,xA,$A,MA,DA,RA,LA,WA,cC,jA,GA,KA,XA,ZA,eE,rE,aE,oE,lE,XN,pE,dE,oI,mE,YN,eI,gI,gE,yE,bE,wE,xE,SE,kE,TE,AE,EE,OE,DE,zE,LE,BE,tT,BA,jE,UE,GE,HE,QE,XE,ZE,tP,rP,yC,PA,aP,{kernelName:Tr,backendName:"cpu",kernelFunc:oP},{kernelName:Cr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:a}=r;RN(s,"tile");const o=iP(n.bufferSync(s),a);return n.makeTensorInfo(o.shape,o.dtype,o.values)}},{kernelName:Ar,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:a,sorted:o}=r;RN(s,"topk");const i=n.data.get(s.dataId).values,[u,l]=uP(i,s.shape,s.dtype,a);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}},EI,{kernelName:Pr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;RN(a,"unique");const o=r.data.get(a.dataId).values,{outputValues:i,outputShape:u,indices:l}=lP(o,s,a.shape,a.dtype);return[r.makeTensorInfo(u,a.dtype,i),r.makeTensorInfo([l.length],"int32",l)]}},{kernelName:$r,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:a}=r;a<0&&(a+=s.shape.length);const o=s.shape.length,i=s.shape[a],u=new Array(o-1);let l=0;for(let e=0;e<o;e++)e!==a&&(u[l++]=s.shape[e]);const c=new Array(o).fill(0),p=s.shape.slice();p[a]=1;const h=new Array(i);for(let e=0;e<h.length;e++){c[a]=e;const t=eT({inputs:{x:s},backend:n,attrs:{begin:c,size:p}});h[e]=mI({inputs:{x:t},backend:n,attrs:{shape:u}}),n.disposeIntermediateTensorInfo(t)}return h}},{kernelName:Mr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:a}=t,{numSegments:o}=r;RN(s,"unsortedSegmentSum");const i=[],u=[],l=s.shape.length-a.shape.length;let c=a;for(let e=0;e<l;++e){const t=nC({inputs:{input:c},backend:n,attrs:{dim:e+1}});c=t,u.push(t)}for(let e=0;e<o;++e){const t=as(e,"int32"),r=n.makeTensorInfo([],"int32",t),a=VT({inputs:{a:r,b:c},backend:n}),o=iI({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),l=lC({inputs:{a:o,b:s},backend:n}),p=EA({inputs:{x:l},backend:n,attrs:{axis:0,keepDims:!1}});i.push(p),u.push(r),u.push(a),u.push(o),u.push(l),u.push(p)}const p=sE({inputs:i,backend:n,attrs:{axis:0}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}},nE];for(const e of cP)Ur(e);const pP={},hP={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function dP(e){if(!(e in pP)){const t=function(e){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e);return t.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete pP[e]}),!1),1===e?t.getContext("webgl",hP)||t.getContext("experimental-webgl",hP):t.getContext("webgl2",hP)}(e);if(null===t)return console.log("Could not get context for WebGL version",e),null;pP[e]=t}const t=pP[e];return t.isContextLost()?(delete pP[e],dP(e)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),pP[e])}var fP,mP,gP;function yP(e,t){return[t,e]}function bP(e){const t=ne(e);return ie(Math.ceil(t/4))}function wP(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function xP(e,t){const n=e;let r,s,a,o,i,u,l,c,p,h;return 2===Le().getNumber("WEBGL_VERSION")?(r=n.R32F,s=n.R16F,a=n.RGBA16F,o=n.RGBA32F,i=n.RED,l=4,c=1,p=n.HALF_FLOAT,h=n.FLOAT):(r=e.RGBA,s=e.RGBA,a=e.RGBA,o=n.RGBA,i=e.RGBA,l=4,c=4,p=null!=t?t.HALF_FLOAT_OES:null,h=e.FLOAT),u=e.RGBA,{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:o,textureFormatFloat:i,downloadTextureFormat:u,downloadUnpackNumChannels:l,defaultNumChannels:c,textureTypeHalfFloat:p,textureTypeFloat:h}}function SP(e,t){const n=t();return Le().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}function vP(e){return!!(Le().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function kP(e,t){return $P(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(fP||(fP={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(mP||(mP={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(gP||(gP={}));const NP=/ERROR: [0-9]+:([0-9]+):/g;function IP(e,t){if(SP(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function TP(e,t,n,r,s,a,o){const i=e.getAttribLocation(t,n);return-1!==i&&(SP(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),SP(e,(()=>e.vertexAttribPointer(i,s,e.FLOAT,!1,a,o))),SP(e,(()=>e.enableVertexAttribArray(i))),!0)}function CP(e,t,n,r){SP(e,(()=>function(e,t,n){(function(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(e,n),SP(e,(()=>e.activeTexture(e.TEXTURE0+n))),SP(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,r))),SP(e,(()=>e.uniform1i(n,r)))}function AP(e,t,n){SP(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),SP(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function EP(e,t){SP(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),SP(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function PP(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function $P(e,t,n){const r=SP(e,(()=>t()));if(null==r)throw new Error(n);return r}function MP(e,t=2){return ne(e.slice(0,e.length-t))}function OP(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function _P(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[MP(e),...OP(e)]),t}function DP(e){return e%2==0}function RP(e,t){if(se(e=e.slice(-2),t=t.slice(-2)))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r)return!0;if(DP(n)&&DP(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&DP(e[0])&&DP(t[0])}let zP,FP;function LP(e,t){return null!=e.getExtension(t)}function qP(e){try{if(null!=dP(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function BP(e){const t=xP(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),s}function WP(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&Y("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const VP=Le();function jP(){let e,t,n,r,s,a,o,i,u,l;return 2===Le().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",s="texture",a="outputColor",o="out vec4 outputColor;",i="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",u="",l="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",s="texture2D",a="gl_FragColor",o="",i="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",u="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",l="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:s,output:a,defineOutput:o,defineSpecialNaN:i,defineSpecialInf:u,defineRound:l}}function UP(e,t,n="index"){const r=Ae(t);return r.map(((t,s)=>`int ${e[s]} = ${n} / ${t}; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${t}`:`index -= ${e[s]} * ${t}`};`)).join("")}function GP(e){const t=Ae(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}VP.registerFlag("HAS_WEBGL",(()=>VP.getNumber("WEBGL_VERSION")>0)),VP.registerFlag("WEBGL_VERSION",(()=>qP(2)?2:qP(1)?1:0)),VP.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),VP.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===VP.get("WEBGL_VERSION"))),VP.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),VP.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),VP.registerFlag("WEBGL_PACK",(()=>VP.getBool("HAS_WEBGL"))),VP.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>VP.getBool("WEBGL_PACK"))),VP.registerFlag("WEBGL_PACK_CLIP",(()=>VP.getBool("WEBGL_PACK"))),VP.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>!1)),VP.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>VP.getBool("WEBGL_PACK"))),VP.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>VP.getBool("WEBGL_PACK"))),VP.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>VP.getBool("WEBGL_PACK"))),VP.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>VP.getBool("WEBGL_PACK"))),VP.registerFlag("WEBGL_PACK_REDUCE",(()=>VP.getBool("WEBGL_PACK"))),VP.registerFlag("WEBGL_LAZILY_UNPACK",(()=>VP.getBool("WEBGL_PACK"))),VP.registerFlag("WEBGL_CONV_IM2COL",(()=>VP.getBool("WEBGL_PACK"))),VP.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==zP){const t=dP(e);zP=t.getParameter(t.MAX_TEXTURE_SIZE)}return zP}(VP.getNumber("WEBGL_VERSION")))),VP.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==FP){const t=dP(e);FP=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,FP)}(VP.getNumber("WEBGL_VERSION")))),VP.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=VP.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=dP(e);return t=LP(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:LP(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),VP.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>VP.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Ds())),VP.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=dP(e);if(1===e){if(!LP(t,"OES_texture_float"))return!1}else if(!LP(t,"EXT_color_buffer_float"))return!1;return BP(t)}(VP.getNumber("WEBGL_VERSION")))),VP.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!VP.getBool("WEBGL_FORCE_F16_TEXTURES")&&VP.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),VP.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>function(e){if(0===e)return!1;const t=dP(e);if(1!==e){if(LP(t,"EXT_color_buffer_float"))return BP(t);const e="EXT_color_buffer_half_float";if(LP(t,e)){const n=t.getExtension(e);return function(e,t){const n=xP(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(s),a}(t,n)}return!1}return!!LP(t,"OES_texture_float")&&!!LP(t,"WEBGL_color_buffer_float")&&BP(t)}(VP.getNumber("WEBGL_VERSION")))),VP.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=VP.getNumber("WEBGL_VERSION"))&&null!=dP(e).fenceSync;var e})),VP.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>VP.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),VP.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)}));const HP="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n";class KP{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=fP.DENSE;const t=bP(e),n=jP();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${UP(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${n.output} = result;\n      }\n    `}}class QP{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=fP.DENSE;const t=bP(e),n=jP();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${UP(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${n.output} = result;\n      }\n    `}}class XP{constructor(e){this.variableNames=["A"],this.outTexUsage=mP.DOWNLOAD;const t=jP();this.outputShape=e,this.userCode=`\n      ${HP}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class JP{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=mP.DOWNLOAD;const t=jP();this.outputShape=e,this.userCode=`\n      ${HP}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}class YP{constructor(e,t,n=!1){this.variableNames=["A"];const r=jP(),[s,a]=t;this.outputShape=e;let o="result";n&&(o="floor(result * 255. + 0.5)"),this.userCode=`\n      ${GP(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / ${a};\n        int c = imod(flatIndex, ${a});\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(${a}.0, ${s}.0);\n        vec4 values = ${r.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${r.output} = vec4(${o}, 0., 0., 0.);\n      }\n    `}}class ZP{constructor(e,t,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const r=jP(),[s,a]=t;this.outputShape=e;let o="",i="result";n&&(i="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let n=0;n<=1;n++){const i=2*t+n;o+=`\n          localCoords = coords;\n          if(localCoords[2] + ${n} < ${e[2]}) {\n            localCoords[2] += ${n};\n            if(localCoords[1] + ${t} < ${e[1]}) {\n              localCoords[1] += ${t};\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ${a};\n              c = imod(flatIndex, ${a});\n              uv = (vec2(c, r) + halfCR) / vec2(${a}.0, ${s}.0);\n              values = ${r.texture2D}(A, uv);\n\n              if(offset == 0) {\n                result[${i}] = values[0];\n              } else if(offset == 1) {\n                result[${i}] = values[1];\n              } else if(offset == 2) {\n                result[${i}] = values[2];\n              } else {\n                result[${i}] = values[3];\n              }\n            }\n          }\n        `}this.userCode=`\n      ${GP(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ${o}\n\n        ${r.output} = ${i};\n      }\n    `}}function e$(e,t,n,r,s,a){!function(e,t){const n=Le().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const o=function(e){return $P(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),i=e.TEXTURE_2D;return SP(e,(()=>e.bindTexture(i,o))),SP(e,(()=>e.texParameteri(i,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),SP(e,(()=>e.texParameteri(i,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),SP(e,(()=>e.texParameteri(i,e.TEXTURE_MIN_FILTER,e.NEAREST))),SP(e,(()=>e.texParameteri(i,e.TEXTURE_MAG_FILTER,e.NEAREST))),SP(e,(()=>e.texImage2D(i,0,r,t,n,0,s,a,null))),SP(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),o}function t$(e){return e.internalFormatFloat}function n$(e){return e.internalFormatHalfFloat}function r$(e){return e.downloadTextureFormat}function s$(e){return e.internalFormatPackedFloat}function a$(e){return e.internalFormatPackedHalfFloat}class o${constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=Le().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,function(e,t){pP[e]=t}(t,e)):this.gl=dP(t);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(1===Le().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=kP(this.gl,e),LP(this.gl,t))this.textureHalfFloatExtension=kP(this.gl,t);else if(Le().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),LP(this.gl,r))this.colorBufferHalfFloatExtension=kP(this.gl,r);else if(Le().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",LP(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!LP(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=function(e){return function(e,t){const n=$P(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return SP(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),SP(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(e){return function(e,t){const n=$P(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return SP(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),SP(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(e){return $P(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=xP(this.gl,this.textureHalfFloatExtension)}get debug(){return Le().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;SP(e,(()=>e.finish())),SP(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),SP(e,(()=>e.deleteFramebuffer(this.framebuffer))),SP(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),SP(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),SP(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=yP(t,n);return e$(e,s,a,t$(r),r.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=yP(t,n);return e$(e,s,a,n$(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=yP(t,n);return e$(e,s,a,r$(r),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){SP(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?SP(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):SP(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),SP(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),function(e,t,n,r,s,a){let o,i,u;SP(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),s instanceof Uint8Array?(o=new Uint8Array(n*r*4),i=e.UNSIGNED_BYTE,u=e.RGBA):(o=new Float32Array(n*r*4),i=e.FLOAT,u=a.internalFormatPackedFloat),o.set(s),SP(e,(()=>e.texImage2D(e.TEXTURE_2D,0,u,n,r,0,e.RGBA,i,o))),SP(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=wP(t,n);return e$(e,s,a,a$(r),e.RGBA,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=wP(t,n);return e$(e,s,a,s$(r),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(EP(this.gl,this.framebuffer),this.outputTexture=null),SP(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,r){const[s,a]=yP(t,n),o=new Uint8Array(t*n*4);return SP(e,(()=>e.readPixels(0,0,s,a,r.downloadTextureFormat,e.UNSIGNED_BYTE,o))),new Float32Array(o.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,s,a){return function(e,t,n,r,s,a,o,i){const u=e,l=new Float32Array(function(e,t){const[n,r]=wP(e,t);return n*r*4}(a,o));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}(this.gl,e,0,0,0,s,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const r=e,s=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=function(e,t,n,r){const s=e.createBuffer();SP(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,s)));const a=16*t*n;return SP(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,a,e.STREAM_READ))),SP(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),SP(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),s}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Le().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,s=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(s,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=s}else Le().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,Le().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const r=new Float32Array(t*n*4);return SP(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl,n=function(e,t){const n=$P(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(SP(e,(()=>e.shaderSource(n,t))),SP(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw function(e,t){const n=NP.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const r=+n[1],s=e.split("\n"),a=s.length.toString().length+2,o=s.map(((e,t)=>le((t+1).toString(),a)+e));let i=0;for(let e=0;e<o.length;e++)i=Math.max(o[e].length,i);const u=o.slice(0,r-1),l=o.slice(r-1,r),c=o.slice(r);console.log(u.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${le(l[0],i)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(t,e),r=function(e){const t=jP();return function(e,t){const n=$P(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(SP(e,(()=>e.shaderSource(n,t))),SP(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(t),s=function(e){return $P(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);return SP(t,(()=>t.attachShader(s,r))),SP(t,(()=>t.attachShader(s,n))),function(e,t){if(SP(e,(()=>e.linkProgram(t))),!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,s),this.debug&&IP(t,s),this.vertexAttrsAreBound||(this.setProgram(s),this.vertexAttrsAreBound=function(e,t,n){return SP(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),TP(e,t,"clipSpacePos",n,3,20,0)&&TP(e,t,"uv",n,2,20,12)}(t,this.program,this.vertexBuffer)),s}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&SP(this.gl,(()=>this.gl.deleteProgram(e)))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&IP(this.gl,this.program),SP(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return $P(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),SP(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),CP(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,s]=wP(t,n);this.setOutputMatrixTextureDriver(e,r,s)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&IP(this.gl,this.program),PP(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),SP(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),SP(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=kP(this.gl,2===Le().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Le().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===Le().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await ce((()=>this.disposed||this.isQueryAvailable(e,Le().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,Le().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||ce((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),AP(this.gl,e,this.framebuffer),this.debug&&PP(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(AP(this.gl,this.outputTexture,this.framebuffer),this.debug&&PP(this.gl)):EP(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;AP(r,e,this.framebuffer),this.debug&&PP(r),this.outputTexture=e,SP(r,(()=>r.viewport(0,0,t,n))),SP(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),SP(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{getBroadcastDims:i$}=g;function u$(e,t,n,r){const s=[];e.forEach((e=>{const t=ne(e.shapeInfo.logicalShape);e.shapeInfo.isUniform?s.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(s.push(`uniform sampler2D ${e.name};`),s.push(`uniform int offset${e.name};`))}));const a=s.join("\n"),o=e.map((e=>function(e,t,n=!1){let r="";r+=n?c$(e):l$(e);const s=e.shapeInfo.logicalShape,a=t.logicalShape;return s.length<=a.length&&(r+=n?function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",a=e.shapeInfo.logicalShape.length,o=t.logicalShape.length,i=i$(e.shapeInfo.logicalShape,t.logicalShape),u=y$(o),l=o-a;let c;const p=["x","y","z","w","u","v"];c=0===a?"":o<2&&i.length>=1?"coords = 0;":i.map((e=>`coords.${p[e+l]} = 0;`)).join("\n");let h="";h=o<2&&a>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${p[t+l]}`)).join(", ");let d="return outputValue;";const f=1===ne(e.shapeInfo.logicalShape),m=1===ne(t.logicalShape);if(1!==a||f||m){if(f&&!m)d=1===o?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(i.length){const e=a-2,t=a-1;i.indexOf(e)>-1&&i.indexOf(t)>-1?d="return vec4(outputValue.x);":i.indexOf(e)>-1?d="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":i.indexOf(t)>-1&&(d="return vec4(outputValue.xx, outputValue.zz);")}}else d="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${u} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${r}(${h});\n      ${d}\n    }\n  `}(e,t):function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",a=t.texShape,o=e.shapeInfo.texShape,i=e.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!e.shapeInfo.isUniform&&i===u&&null==e.shapeInfo.flatOffset&&se(o,a))return`\n      float ${s}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const l=y$(u),c=i$(e.shapeInfo.logicalShape,t.logicalShape),p=u-i;let h;const d=["x","y","z","w","u","v"];h=0===i?"":u<2&&c.length>=1?"coords = 0;":c.map((e=>`coords.${d[e+p]} = 0;`)).join("\n");let f="";return f=u<2&&i>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${d[t+p]}`)).join(", "),`\n    float ${s}() {\n      ${l} coords = getOutputCoords();\n      ${h}\n      return get${r}(${f});\n    }\n  `}(e,t)),r}(e,t,r))).join("\n"),i=t.texShape,u=jP(),l=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(u);let c,p,h=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${p$}\n    ${h$}\n    ${d$}\n  `}(u);return t.isPacked?(c=function(e,t){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===n[0]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);\n    }\n  `}(0,t);case 2:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(se(e,t))return`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));\n      }\n    `;const r=Math.ceil(e[1]/2);return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t);case 3:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),s=r*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t);default:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),s=r*Math.ceil(e[e.length-2]/2);let a=s,o="",i="b, r, c";for(let t=2;t<e.length-1;t++)a*=e[e.length-t-1],o=`\n      int b${t} = index / ${a};\n      index -= b${t} * ${a};\n    `+o,i=`b${t}, `+i;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${e.length}(${i});\n    }\n  `}(e,t)}}(t.logicalShape,i),p=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(u)):(c=function(e,t){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return 1===(n=t)[0]?`\n      int getOutputCoords() {\n        return int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return resTexRC.x * ${n[1]} + resTexRC.y;\n    }\n  `;case 2:return function(e,t){return se(e,t)?`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t);case 3:return function(e,t){const n=UP(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${n}\n      return ivec3(r, c, d);\n    }\n  `}(e,t);case 4:return function(e,t){const n=UP(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${n}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t);case 5:return function(e,t){const n=UP(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=UP(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}var n}(t.logicalShape,i),p=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(u)),r&&(h+=f$),[h,l,p,a,c,o,n].join("\n")}function l$(e){const t=e.shapeInfo.logicalShape;switch(t.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`float ${n}() {return ${t};}`;const[r,s]=e.shapeInfo.texShape;if(1===r&&1===s)return`\n      float ${n}() {\n        return sampleTexture(${t}, halfCR);\n      }\n    `;const[a,o]=e.shapeInfo.texShape;return`\n    float ${n}() {\n      vec2 uv = uvFromFlat(${a}, ${o}, ${m$(t)});\n      return sampleTexture(${t}, uv);\n    }\n  `}(e);case 1:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${n}(int index) {\n        ${g$(e)}\n      }\n    `;const r=e.shapeInfo.texShape,s=r[0],a=r[1];if(1===a&&1===s)return`\n      float ${n}(int index) {\n        return sampleTexture(${t}, halfCR);\n      }\n    `;const o=m$(t);return 1===a?`\n      float ${n}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${s}.0);\n        return sampleTexture(${t}, uv);\n      }\n    `:1===s?`\n      float ${n}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${a}.0, 0.5);\n        return sampleTexture(${t}, uv);\n      }\n    `:`\n    float ${n}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${a}, index + ${o});\n      return sampleTexture(${t}, uv);\n    }\n  `}(e);case 2:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape;if(null!=s&&se(t,s)){const e=s[0];return`\n    float ${r}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${s[1]}.0, ${e}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `}const{newShape:a,keptDims:o}=de(t),i=a;if(i.length<t.length){const t=["row","col"];return`\n      ${l$(b$(e,i))}\n      float ${r}(int row, int col) {\n        return ${r}(${w$(t,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));\n        ${g$(e)}\n      }\n    `;const u=s[0],l=s[1],c=m$(n);return 1===l?`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${t[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `:1===u?`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${t[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${l}.0, 0.5);\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n  float ${r}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${t[1]} + col + ${c};\n    vec2 uv = uvFromFlat(${u}, ${l}, index);\n    return sampleTexture(${n}, uv);\n  }\n`}(e);case 3:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[1]*t[2],a=t[2],{newShape:o,keptDims:i}=de(t),u=o;if(u.length<t.length){const t=["row","col","depth"];return`\n        ${l$(b$(e,u))}\n        float ${r}(int row, int col, int depth) {\n          return ${r}(${w$(t,i)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${s}, ${a}, 1)));\n        ${g$(e)}\n      }\n    `;const l=e.shapeInfo.texShape,c=l[0],p=l[1],h=e.shapeInfo.flatOffset;if(p===s&&null==h)return`\n        float ${r}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${a}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${p}.0, ${c}.0);\n          return sampleTexture(${n}, uv);\n        }\n      `;if(p===a&&null==h)return`\n    float ${r}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}.0, ${c}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;return`\n      float ${r}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s} + col * ${a} + depth + ${m$(n)};\n        vec2 uv = uvFromFlat(${c}, ${p}, index);\n        return sampleTexture(${n}, uv);\n      }\n  `}(e);case 4:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[3],a=t[2]*s,o=t[1]*a,{newShape:i,keptDims:u}=de(t);if(i.length<t.length){const t=["row","col","depth","depth2"];return`\n      ${l$(b$(e,i))}\n      float ${r}(int row, int col, int depth, int depth2) {\n        return ${r}(${w$(t,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${a}, ${s}, 1)));\n        ${g$(e)}\n      }\n    `;const l=e.shapeInfo.flatOffset,c=e.shapeInfo.texShape,p=c[0],h=c[1];if(h===o&&null==l)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${a}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${h}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(h===s&&null==l)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${t[1]*t[2]}, ${t[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${h}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${a} +\n          depth * ${s} + depth2;\n      vec2 uv = uvFromFlat(${p}, ${h}, index + ${m$(n)});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[4],a=t[3]*s,o=t[2]*a,i=t[1]*o,{newShape:u,keptDims:l}=de(t);if(u.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${l$(b$(e,u))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${w$(t,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${i}, ${o}, ${a}, ${s})) +\n          depth3;\n        ${g$(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,h=p[0],d=p[1];if(d===i&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${o}, ${a}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${d}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(d===s&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${d}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${i} + col * ${o} + depth * ${a} +\n          depth2 * ${s} + depth3 + ${m$(n)};\n      vec2 uv = uvFromFlat(${h}, ${d}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:a}=de(t);if(s.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${l$(b$(e,s))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${w$(t,a)});\n      }\n    `}const o=t[5],i=t[4]*o,u=t[3]*i,l=t[2]*u,c=t[1]*l;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${l}, ${u}, ${i})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${o}, 1)));\n        ${g$(e)}\n      }\n    `;const p=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],f=h[1];if(f===c&&null==p)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${l}, ${u}, ${i}, ${o})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===o&&null==p)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${l} + depth * ${u} +\n          depth2 * ${i} + depth3 * ${o} + depth4 + ${m$(n)};\n      vec2 uv = uvFromFlat(${d}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function c$(e){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${jP().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=e.shapeInfo.texShape,s=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],a=jP();return`\n    vec4 ${n}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${s[0]}, ${s[1]}, index);\n      return ${a.texture2D}(${t}, uv);\n    }\n  `}(e);case 2:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape,a=s[0],o=s[1],i=jP();if(null!=s&&se(t,s))return`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${a}.0);\n\n        return ${i.texture2D}(${n}, uv);\n      }\n    `;const u=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${r}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(t[1]/2)}, ${u[0]}, ${u[1]}, row, col);\n      return ${i.texture2D}(${n}, uv);\n    }\n  `}(e);case 3:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape,a=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===t[0]){const n=[1,2],s=["b","row","col"];return`\n        ${c$(b$(e,t.slice(1)))}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${w$(s,n)});\n        }\n      `}const o=a[0],i=a[1],u=Math.ceil(t[2]/2);return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${o}, ${i}, ${u*Math.ceil(t[1]/2)}, ${u}, b, row, col);\n      return ${jP().texture2D}(${n}, uv);\n    }\n  `}(e);default:return function(e){const t=e.shapeInfo.logicalShape,n=t.length,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape,o=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],i=o[0],u=o[1],l=Math.ceil(t[n-1]/2);let c=l*Math.ceil(t[n-2]/2),p="int b, int row, int col",h=`b * ${c} + (row / 2) * ${l} + (col / 2)`;for(let e=2;e<n-1;e++)p=`int b${e}, `+p,c*=t[n-e-1],h=`b${e} * ${c} + `+h;return`\n    vec4 ${s}(${p}) {\n      int index = ${h};\n      int texR = index / ${u};\n      int texC = index - texR * ${u};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${u}, ${i});\n      return ${jP().texture2D}(${r}, uv);\n    }\n  `}(e)}}const p$="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",h$="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",d$="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",f$="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function m$(e){return`offset${e}`}function g$(e){const t=e.name,n=ne(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function y$(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function b$(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function w$(e,t){return t.map((t=>e[t])).join(", ")}function x$(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const r=e.logicalShape,s=t[n],a=s.shape;if(!se(r,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${a} must match`);if(e.isUniform&&s.isUniform)return;const o=e.texShape,i=s.isUniform?null:s.texData.texShape;if(!se(o,i))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${o} and ${i} must match`)}))}const{addImpl:S$,bincountImpl:v$,bincountReduceImpl:k$,ceilImpl:N$,concatImpl:I$,expImpl:T$,expm1Impl:C$,floorImpl:A$,gatherV2Impl:E$,greaterImpl:P$,lessImpl:$$,linSpaceImpl:M$,logImpl:O$,maxImpl:_$,maximumImpl:D$,minimumImpl:R$,multiplyImpl:z$,negImpl:F$,prodImpl:L$,rangeImpl:q$,rsqrtImpl:B$,simpleAbsImpl:W$,sliceImpl:V$,stridedSliceImpl:j$,subImpl:U$,tileImpl:G$,topKImpl:H$,transposeImpl:K$,uniqueImpl:Q$}=W;function X$(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function J$(e,t){return 1===t?[e]:X$(e,t)}class Y${constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e;const t=e.length;if(0===t)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=J$("rc",t),r=y$(t),s=function(e,t,n){if(1===e)return`rc > ${t[0]}`;let r="";for(let s=e-2;s<e;s++)r+=`${n[s]} >= ${t[s]}`,s<e-1&&(r+="||");return r}(t,e,n),a=function(e,t,n,r){if(1===e)return"";const s=r.slice(-2);return`\n    int r = ${s[0]};\n    int c = ${s[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${t};\n    bool rEdge = rp1 >= ${n};\n  `}(t,e[e.length-1],e[e.length-2],n),o=function(e,t){const n=e.length,r=function(e,t){const n=[];for(let r=0;r<=1;r++)for(let s=0;s<=1;s++){let a=`${0===r?"r":"rp1"}, ${0===s?"c":"cp1"}`;for(let n=2;n<e;n++)a=`${t[t.length-1-n]},`+a;n.push(a)}return n}(n,t);return 1===n?`getA(rc),\n            rc + 1 >= ${e[0]} ? 0. : getA(rc + 1),\n            0, 0`:`getA(${r[0]}),\n          cEdge ? 0. : getA(${r[1]}),\n          rEdge ? 0. : getA(${r[2]}),\n          rEdge || cEdge ? 0. : getA(${r[3]})`}(e,n);this.userCode=`\n        void main() {\n          ${r} rc = getOutputCoords();\n\n          if(${s}) {\n            setOutput(vec4(0));\n          } else {\n            ${a}\n\n            setOutput(vec4(${o}));\n          }\n        }\n      `}}}class Z${constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var r;this.userCode=`\n      ${r=t,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${UP(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${GP(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${e[1]};\n        int cols = ${e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class eM{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const r=nM(t,n),s=rM(e,r,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);const a=tM(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const e=this.freeTextures[s].shift();return this.usedTextures[s].push(e),e}let o;return r===gP.PACKED_2X2_FLOAT32?o=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===gP.PACKED_2X2_FLOAT16?o=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===gP.UNPACKED_FLOAT32?o=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===gP.UNPACKED_FLOAT16?o=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===gP.PACKED_4X1_UNSIGNED_BYTE&&(o=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[s].push(o),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),o}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const s=nM(n,r),a=rM(t,s,r);a in this.freeTextures||(this.freeTextures[a]=[]);const o=tM(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,r),i=Le().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==i&&this._numBytesAllocated>i?(this.gpgpu.deleteMatrixTexture(e),this._numBytesAllocated-=o):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=o),this.numUsedTextures--;const u=this.usedTextures[a],l=u.indexOf(e);if(l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u.splice(l,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function tM(e,t,n,r,s){const a=function(e,t){switch(e){case gP.PACKED_2X2_FLOAT32:return s$(t);case gP.PACKED_2X2_FLOAT16:return a$(t);case gP.UNPACKED_FLOAT32:return t$(t);case gP.UNPACKED_FLOAT16:return n$(t);case gP.PACKED_4X1_UNSIGNED_BYTE:return r$(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let o;if(s){const[t,n]=wP(e[0],e[1]);o=t*n}else{const[t,n]=yP(e[0],e[1]);o=t*n}return o*function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;throw new Error(`Unknown internal format ${t}`)}(n,a)}function nM(e,t){if(e===mP.UPLOAD)return gP.PACKED_2X2_FLOAT32;if(e===mP.RENDER||null==e)return function(e){return Le().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?gP.PACKED_2X2_FLOAT32:gP.UNPACKED_FLOAT32:e?gP.PACKED_2X2_FLOAT16:gP.UNPACKED_FLOAT16}(t);if(e===mP.DOWNLOAD||e===mP.PIXELS)return gP.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function rM(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class sM{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const aM="return abs(x);",oM="return x;";class iM{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class uM{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e;const t=e.length,n=J$("rc",t),r=y$(t),s=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),a=n.slice(-2),o=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${s});\n\n        setOutput(getChannel(packedInput, ${o}));\n      }\n    `}}const lM=gp,cM={};class pM extends j{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.warnedAboutMemory=!1,this.warnedAboutCPUBackend=!1,this.pendingDeletes=0,this.disposed=!1,!Le().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==e){const e=dP(Le().getNumber("WEBGL_VERSION"));this.binaryCache=((t=Le().getNumber("WEBGL_VERSION"))in cM||(cM[t]={}),cM[t]),this.gpgpu=new o$(e),this.canvas=e.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=e,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=e.gl.canvas;var t;this.textureManager=new eM(this.gpgpu),this.numMBBeforeWarning=null==Le().global.screen?1024:Le().global.screen.height*Le().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new V(this,ti())}numDataIds(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes}write(e,t,n){if((Le().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Le().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:mP.UPLOAD,refCount:1,complexParentRefCount:0}),r}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}decComplexRef(e){if(this.texData.has(e)){const t=this.texData.get(e);t.complexParentRefCount>0&&t.refCount--}}move(e,t,n,r){if(Le().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:mP.UPLOAD,refCount:1,complexParentRefCount:0})}disposeIntermediateTensorInfo(e){const t=e.dataId;if(this.texData.has(t)){const e=this.texData.get(t);e.refCount--,e.refCount<1&&this.disposeData(t)}}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:s,slice:a,shape:o,isPacked:i}=t;if(null!=a){let t;t=i?new iM(o,oM):new sM(o,oM);const n=this.runWebGLProgram(t,[{dataId:e,shape:o,dtype:r}],r),s=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const u=null!=this.activeTimers;let l,c;return u&&(l=is()),c="complex64"===r?pd(this.readSync(s.real.dataId),this.readSync(s.imag.dataId)):this.getValuesFromTexture(e),u&&(this.downloadWaitMs+=is()-l),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:r,slice:s,dtype:a,complexTensorInfos:o,isPacked:i}=t;if(null!=s){let t;t=i?new iM(r,oM):new sM(r,oM);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:a}],a),s=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if(!Le().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Le().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u,l,c=null;if("complex64"!==a&&Le().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);const t=this.texData.get(u.dataId);c=this.gpgpu.createBufferFromTexture(t.texture,...bP(r))}if(this.pendingRead.set(e,[]),"complex64"!==a&&await this.gpgpu.createAndWaitForFence(),"complex64"===a){const e=await Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]);l=pd(e[0],e[1])}else if(null==c)l=this.getValuesFromTexture(e);else{const e=ne(r);l=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}null!=u&&this.disposeIntermediateTensorInfo(u);const p=this.convertAndCacheOnCPU(e,l),h=this.pendingRead.get(e);return this.pendingRead.delete(e),h.forEach((e=>e(p))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e),this.pendingDeletes--),p}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>cs(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return La(e.shape,e.dtype,n)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!vP(n)){if(Le().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),s=ne(t);if(Le().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),a=this.gpgpu.downloadMatrixFromPackedTexture(r.texture,...bP(t)).subarray(0,s);return this.disposeIntermediateTensorInfo(n),a}const a=Le().getBool("WEBGL_PACK")&&!0===r,o=a?_P(t):t,i=a?new JP(o):new XP(o),u=this.runWebGLProgram(i,[{shape:o,dtype:n,dataId:e}],"float32"),l=this.texData.get(u.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture,l.texShape[0],l.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(u),c}async time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const s=te(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),a=te(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);const o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(Le().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(s);o.kernelMs=Q(e),o.getExtraProfileInfo=()=>e.map(((e,t)=>({name:a[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Le().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:is(),endMs:null}}endTimer(e){return Le().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=is(),e)}async getQueryTime(e){if(Le().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e){if(this.pendingDisposal.has(e))return;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),void this.pendingDeletes++;if(!this.texData.has(e))return;if(this.texData.get(e).complexParentRefCount>0)return void this.texData.get(e).refCount--;this.releaseGPUData(e);const{complexTensorInfos:t}=this.texData.get(e);null!=t&&(this.texData.get(t.real.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(t.real),this.texData.get(t.imag.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(t.imag)),this.texData.delete(e)}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:s,isPacked:a,slice:o}=this.texData.get(e),i=o&&o.origDataId||e,u=this.dataRefCount.get(i);u>1?this.dataRefCount.set(i,u-1):(this.dataRefCount.delete(i),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,s,a)));const l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture}getDataInfo(e){return this.texData.get(e)}getCPUBackend(){return Le().getBool("WEBGL_CPU_FORWARD")?(null==this.cpuBackend&&(this.cpuBackend=ti().findBackend("cpu")),this.cpuBackend):null}shouldExecuteOnCPU(e,t=128){const n=this.getCPUBackend();return Le().getBool("IS_TEST")||this.warnedAboutCPUBackend||null!=n||(console.warn("Your application contains ops that are small enough to be executed on the CPU backend, however the CPU backend cannot be found. Consider importing the CPU backend (@tensorflow/tfjs-backend-cpu) for better performance."),this.warnedAboutCPUBackend=!0),null!=n&&e.every((e=>null==this.texData.get(e.dataId).texture&&ne(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){ld("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return lM(e.shape,t)}packedUnaryOp(e,t,n){const r=new iM(e.shape,t);return this.compileAndRun(r,[e],n)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=W$(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(Le().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,aM,e.dtype);const t=new sM(e.shape,aM);return this.compileAndRun(t,[e])}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&ve(n[0])){const s=n.map((e=>ls(e)));r=this.write(s,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){const{dataId:r}=this.makeTensorInfo(e,t,n);return ti().makeTensorFromDataId(r,e,t,this)}unpackTensor(e){const t=new uM(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new Y$(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[MP(e.shape),...OP(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},s=[MP(t),...OP(t)],a=new Z$(s,n),o=this.runWebGLProgram(a,[r],e.dtype,null,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e){const t=this.texData.get(e),{isPacked:n,shape:r,dtype:s}=t,a=_P(r);let o;return o=n?new QP(a):new KP(a),{dtype:s,shape:r,dataId:this.runWebGLProgram(o,[{shape:a,dtype:s,dataId:e}],s,null,!0).dataId}}runWebGLProgram(e,t,n,r,s=!1){const a=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(a.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===fP.DENSE){const t=bP(e.outputShape);o.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===ne(a.shape))return o.values=fe(a.dtype,0),a;const i=[],u=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&ne(t.shape)<=Le().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}else if(!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),i.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!RP(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),i.push(t),n=this.texData.get(t.dataId),e.shape=r}return this.uploadToGPU(t.dataId),{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(a.dataId);const l={shape:a.shape,texData:o,isUniform:!1},c=function(e,t,n){let r="";t.concat(n).forEach((e=>{const t=null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0,n=e.isUniform?"uniform":e.texData.texShape;r+=`${e.shape}_${n}_${t}`}));const s=e.userCode;let a=e.constructor.name;return a+="_"+r+"_"+s,a}(e,u,l),p=this.getAndSaveBinary(c,(()=>function(e,t,n,r){const s=t.userCode,a=n.map(((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),o=a.map((e=>e.shapeInfo)),i={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},u=u$(a,i,s,t.packedInputs),l=e.createProgram(u);let c=null;const p=e.getUniformLocation(l,"NAN",!1);1===Le().getNumber("WEBGL_VERSION")&&(c=e.getUniformLocation(l,"INFINITY",!1));const h={};for(let n=0;n<t.variableNames.length;n++){const r=t.variableNames[n],s=!1;h[r]=e.getUniformLocation(l,r,s),h[`offset${r}`]=e.getUniformLocation(l,`offset${r}`,s)}return{program:t,source:u,webGLProgram:l,uniformLocations:h,inShapeInfos:o,outShapeInfo:i,infLoc:c,nanLoc:p}}(this.gpgpu,e,u,l))),h=null!=this.activeTimers;let d;if(h&&(d=this.startTimer()),function(e,t,n,r,s){x$(t.inShapeInfos,n),x$([t.outShapeInfo],[r]);const a=r.texData.texture,o=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(a,o[0],o[1]):e.setOutputMatrixTexture(a,o[0],o[1]),e.setProgram(t.webGLProgram),1===Le().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,r)=>{const s=t.program.variableNames[r],a=t.uniformLocations[s],o=t.uniformLocations[`offset${s}`];if(null!=a)if(n.isUniform)if(ne(n.shape)<2)e.gl.uniform1f(a,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(a,t)}else null!=n.texData.slice&&null!=o&&e.gl.uniform1i(o,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture,a,r)})),null!=s&&s(e,t.webGLProgram),e.executeProgram()}(this.gpgpu,p,u,l,r),i.forEach((e=>this.disposeIntermediateTensorInfo(e))),h&&(d=this.endTimer(d),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(d)})),!Le().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===s){const e=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),e}return a}compileAndRun(e,t,n,r,s=!1){n=n||t[0].dtype;const a=this.runWebGLProgram(e,t,n,r,s);return ti().makeTensorFromDataId(a.dataId,a.shape,a.dtype)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(Le().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=si((()=>{if(!Le().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=Le().getBool("DEBUG");Le().set("DEBUG",!1);const t=this.abs($i(1e-8)).dataSync()[0];if(Le().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:s,texture:a,usage:o,isPacked:i}=t;if(null!=a)return;const u=null!=this.activeTimers;let l;u&&(l=is());let c=t.texShape;if(null==c&&(c=function(e,t=!1){let n=Le().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(n*=2,1===(e=e.map(((t,n)=>n>=e.length-2?K(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=de(e);e=t.newShape}let r=ne(e);if(e.length<=1&&r<=n)return[1,r];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){const t=MP(e);let n=2,s=2;return e.length&&([n,s]=OP(e)),r=t*(n/2)*(s/2),ie(r).map((e=>2*e))}return ie(r)}(n,i),t.texShape=c),null!=s){const e=_P(n);let a,o=c[1],p=c[0];const h=s instanceof Uint8Array;i?([o,p]=wP(c[0],c[1]),a=new ZP(e,[p,o],h)):a=new YP(e,[p,o],h);const d=this.makeTensorInfo([p,o],r);this.texData.get(d.dataId).usage=h?mP.PIXELS:mP.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(d.dataId),o,p,s);const f=!0,m=this.runWebGLProgram(a,[d],r,null,f),g=this.texData.get(m.dataId);t.texture=g.texture,t.texShape=g.texShape,t.isPacked=g.isPacked,t.usage=g.usage,this.disposeIntermediateTensorInfo(d),this.texData.delete(m.dataId),t.values=null,u&&(this.uploadWaitMs+=is()-l)}else{const e=this.acquireTexture(c,o,r,i);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*xe(t)}}Rs()&&fi("webgl",(()=>new pM),2);class hM{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=Wi(t,n),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}class dM{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Wi(t,n);const s=this.outputShape.length;let a="";if(r)if(0===s||1===ne(this.outputShape))a="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(a=`\n          ${y$(s)} coords = getOutputCoords();\n        `,1===s)a+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=J$("coords",s);a+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= ${this.outputShape[s-2]};\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= ${this.outputShape[s-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${a}\n\n        setOutput(result);\n      }\n    `}}function fM(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const mM={kernelName:tn,backendName:"webgl",kernelFunc:fM};function gM(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.makeTensorInfo(r.shape,"complex64"),o=n.texData.get(a.dataId),i=fM({inputs:{x:r},backend:n});n.texData.get(i.dataId).complexParentRefCount++;const u=fM({inputs:{x:s},backend:n});return n.texData.get(u.dataId).complexParentRefCount++,o.complexTensorInfos={real:i,imag:u},a}const yM={kernelName:mt,backendName:"webgl",kernelFunc:gM},bM="return (a < 0.) ? b * a : a;",wM="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",xM={kernelName:un,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:a}=r,o=n.makeTensorInfo([],"float32",as(a,"float32")),i=Le().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new dM(wM,s.shape,o.shape):new hM(bM,s.shape,o.shape),u=n.runWebGLProgram(i,[s,o],s.dtype);return n.disposeIntermediateTensorInfo(o),u}},SM="return (a < 0.) ? b * a : a;",vM="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",kM={kernelName:Un,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t,a=Le().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new dM(vM,r.shape,s.shape):new hM(SM,r.shape,s.shape);return n.runWebGLProgram(a,[r,s],r.dtype)}};function NM({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:s,backend:a})=>{const{x:o}=s,i=a,u=r||o.dtype;if(i.shouldExecuteOnCPU([o])&&null!=n){const e=i.texData.get(o.dataId),t=n(e.values,u);return i.makeTensorInfo(o.shape,u,t)}let l;return l=Le().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new iM(o.shape,t):new sM(o.shape,e),i.runWebGLProgram(l,[o],u)}}function IM({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:a}){return({inputs:o,backend:i})=>{const{a:u,b:l}=o,c=i;if(r&&"complex64"===u.dtype){const t=c.texData.get(u.dataId),n=c.texData.get(l.dataId),[r,s]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,r]=t,s={dataId:n.dataId,dtype:n.dtype,shape:u.shape},a={dataId:r.dataId,dtype:r.dtype,shape:l.shape},o=new hM(e,u.shape,l.shape);return c.runWebGLProgram(o,[s,a],ks(n.dtype,r.dtype))})),a=gM({inputs:{real:r,imag:s},backend:c});return c.disposeIntermediateTensorInfo(r),c.disposeIntermediateTensorInfo(s),a}const p=a||ks(u.dtype,l.dtype);if(c.shouldExecuteOnCPU([u,l])&&null!=s){const e=c.texData.get(u.dataId),t=c.texData.get(l.dataId),[n,r]=s(u.shape,l.shape,e.values,t.values,p),a=c.makeTensorInfo(r,p);return c.texData.get(a.dataId).values=n,a}let h;return h=Le().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new dM(t,u.shape,l.shape,n):new hM(e,u.shape,l.shape),c.runWebGLProgram(h,[u,l],p)}}function TM(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===e)return t?vM:SM;if("leakyrelu"===e)return t?wM:bM;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class CM{constructor(e,t,n,r=!1,s=!1,a=!1,o=null,i=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;const l=r?e[1]:e[2],c=Math.ceil(l/2),p=r?"i * 2, rc.y":"rc.y, i * 2",h=s?"rc.z, i * 2":"i * 2, rc.z",d=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";o&&(m=i?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${o}\n        }`:u?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${o}\n        }`:`vec4 activation(vec4 x) {\n          ${o}\n        }`,g="result = activation(result);");const y=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let b="rc.x",w="rc.x";e[0]<t[0]?b=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(w=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${m}\n\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${c}; i++) {\n          int batchA = ${b};\n          int batchB = ${w};\n          vec4 a = getMatrixA(batchA, ${p});\n          vec4 b = getMatrixB(batchB, ${h});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${d[0]} * ${f[0]});\n          result += (${d[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}class AM{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Wi(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const EM="return a * b;";function PM(e){const{inputs:t,backend:n}=e,{a:r,b:s}=t,a=ks(r.dtype,s.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),a=new AM("return areal * breal - aimag * bimag;",r.shape,s.shape),o=new AM("return areal * bimag + aimag * breal;",r.shape,s.shape),i=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape}],u=n.runWebGLProgram(a,i,"float32"),l=n.runWebGLProgram(o,i,"float32"),c=gM({inputs:{real:u,imag:l},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),c}if(n.shouldExecuteOnCPU([r,s])){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),[o,i]=z$(r.shape,s.shape,e.values,t.values,a),u=n.makeTensorInfo(i,a);return n.texData.get(u.dataId).values=o,u}let o;return o=Le().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new dM(EM,r.shape,s.shape):new hM(EM,r.shape,s.shape),n.runWebGLProgram(o,[r,s],a)}const $M={kernelName:On,backendName:"webgl",kernelFunc:PM};function MM(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:a}=r,o=n,i=ne(s.shape),u=pe(a,i),l=ne(u);Y(i===l,(()=>`The new shape (${u}) has ${l} elements and the old shape (${s.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`));const c=o.texData.get(s.dataId);return!c.isPacked||RP(s.shape,u)||null!==c.texture&&RP(c.shape,u)?(o.incRef(s.dataId),{dataId:s.dataId,shape:u,dtype:s.dtype}):function(e,t,n){const r=[MP(e.shape),...OP(e.shape)],s={dtype:e.dtype,shape:r,dataId:e.dataId},a=[MP(t),...OP(t)],o=new Z$(a,r),i=n.runWebGLProgram(o,[s],e.dtype,null,!0);return{dataId:i.dataId,shape:t,dtype:i.dtype}}(s,u,o)}const OM={kernelName:Jn,backendName:"webgl",kernelFunc:MM};class _M{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=e;this.outputShape=[r,a];const o=4*Math.floor(n/4),i=n%4;let u="sumValue += dot(values, ones);";if(null!=t){const e=1/t;u=`sumValue += dot(values * ${ae(e)?e.toPrecision(2):e}, ones);`}let l="";s%n>0&&(l=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${l}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===i}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${u}\n        } else if (${2===i}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${u}\n        } else if (${3===i}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}class DM{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=e;this.outputShape=[r,a];let o="0.0",i="";"prod"===t?o="1.0":"min"===t?(o="1.0 / 1e-20",i="min"):"max"===t&&(o="-1.0 / 1e-20",i="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?u="sumValue":"prod"===t?u="prodValue":"all"===t?u="allValue":"any"===t&&(u="anyValue");const l=4*Math.floor(n/4),c=n%4;let p=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${i}(values, minMaxValue);\n      }\n    `,h="vec4";"all"===t?(o="1.0",p="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",h="bvec4"):"any"===t&&(o="0.0",p="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",h="bvec4");let d="";s%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${o};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${d}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${o});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${l}; i += 4) {\n          int inIdx = inOffset + i;\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${p}\n        }\n\n        int inIdx = inOffset + ${l};\n        if (${1===c}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${p}\n        } else if (${2===c}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${p}\n        } else if (${3===c}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${p}\n        }\n        setOutput(${u});\n      }\n    `}}function RM(e,t,n,r){const s=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=Kh(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let a=e;for(let o=0;o<s.length;o++){const{inSize:i,windowSize:u,outSize:l}=s[o];let c,p;c="mean"===n?0===o?new _M({windowSize:u,inSize:i,batchSize:e.shape[0],outSize:l},i):new _M({windowSize:u,inSize:i,batchSize:e.shape[0],outSize:l}):new DM({windowSize:u,inSize:i,batchSize:e.shape[0],outSize:l},n),p=a,a=r.runWebGLProgram(c,[a],t),p.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(p)}return a}class zM{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;const r=y$(this.rank),s=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${s}));\n    }\n    `}}class FM{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=y$(this.rank),s=X$("rc",this.rank),a=new Array(this.rank);for(let e=0;e<t.length;e++)a[t[e]]=s[e];const o=`vec2(${a.slice(-2).join()})`,i=`++${s[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${a.join()}), ${o})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${i}) {\n        result[1] = ${u};\n      }\n      --${s[this.rank-1]};\n      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${i}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function LM(e,t,n){const r=Le().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new FM(e.shape,t):new zM(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function qM(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r;return function(e,t,n,r){const s=t,a=e.shape.length,o=he(s,e.shape);let i=o;const u=Fl(i,a),l=null!=u;let c=e;l&&(c=LM(e,u,r),i=ql(i.length,a)),zl("sum",i,a);const[p,h]=Dl(c.shape,i);let d=p;n&&(d=Rl(p,o));const f=ne(h),m=MM({inputs:{x:c},attrs:{shape:[ne(e.shape)/f,f]},backend:r}),g=RM(m,Ns(e.dtype),"sum",r),y=MM({inputs:{x:g},attrs:{shape:d},backend:r});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(g),l&&r.disposeIntermediateTensorInfo(c),y}(s,a,o,n)}const BM={kernelName:gr,backendName:"webgl",kernelFunc:qM};function WM(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{perm:a}=r,o=n,i=s.shape.length,u=new Array(i);for(let e=0;e<u.length;e++)u[e]=s.shape[a[e]];let l;if(o.shouldExecuteOnCPU([s])){const e=o.texData.get(s.dataId).values,t=K$(e,s.shape,s.dtype,a,u);l=o.makeTensorInfo(u,s.dtype),o.texData.get(l.dataId).values=t}else l=LM(s,a,o);return l}const VM={kernelName:Er,backendName:"webgl",kernelFunc:WM};function jM({a:e,b:t,transposeA:n,transposeB:r,backend:s,bias:a=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:u=null}){const l=e.shape.length,c=t.shape.length,p=n?e.shape[l-2]:e.shape[l-1],h=r?t.shape[c-1]:t.shape[c-2],d=n?e.shape[l-1]:e.shape[l-2],f=r?t.shape[c-2]:t.shape[c-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=ne(m),b=ne(g);Y(l>=2&&c>=2&&(y===b||1===y||1===b),(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${m}) and (${g}).`));const w=(y>b?e.shape.slice(0,-2):t.shape.slice(0,-2)).concat([d,f]);Y(p===h,(()=>`Error in matMul: inner shapes (${p}) and (${h}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`));const x=n?[y,p,d]:[y,d,p],S=r?[b,f,h]:[b,h,f],v=MM({inputs:{x:e},backend:s,attrs:{shape:x}}),k=MM({inputs:{x:t},backend:s,attrs:{shape:S}}),N=[v,k],I=Math.max(y,b),T=n?v.shape[1]:v.shape[2],C=null!=a,A=null!=o,E="leakyrelu"===u,P=null!=u?TM(u,!0):null;let $;if((1===d||1===f)&&T>1e3&&!1===(C||A||E||null!=P)){let e=v,t=k;n&&(e=WM({inputs:{x:v},backend:s,attrs:{perm:[0,2,1]}}),N.push(e)),r&&(t=WM({inputs:{x:k},backend:s,attrs:{perm:[0,2,1]}}),N.push(t));const a=1===f;let o=e;1!==f&&(o=MM({inputs:{x:e},backend:s,attrs:{shape:[I,T,1]}}),N.push(o));const i=1===f?2:1;let u=t;a&&(u=MM({inputs:{x:t},backend:s,attrs:{shape:[I,1,T]}}),N.push(u));const l=PM({inputs:{a:o,b:u},backend:s});$=qM({inputs:{x:l},backend:s,attrs:{axis:i,keepDims:!0}}),N.push(l)}else{const u=ks(e.dtype,t.dtype),l=new CM(x,S,[I,d,f],n,r,C,P,A,E),c=[v,k];if(null!=a&&c.push(a),A&&c.push(o),E){const e=s.makeTensorInfo([],"float32",as(i,"float32"));c.push(e),N.push(e)}$=s.runWebGLProgram(l,c,u)}const M=MM({inputs:{x:$},backend:s,attrs:{shape:w}});N.push($);for(const e of N)s.disposeIntermediateTensorInfo(e);return M}const UM={kernelName:zr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:o,preluActivationWeights:i}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:p}=r;return jM({a:s,b:a,transposeA:u,transposeB:l,backend:n,bias:o,preluActivationWeights:i,leakyreluAlpha:p,activation:c})}},GM="return abs(x);",HM={kernelName:je,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=W$(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let s;return s=Le().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new iM(r.shape,GM):new sM(r.shape,GM),n.runWebGLProgram(s,[r],r.dtype)}},KM=NM({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),QM={kernelName:Ue,backendName:"webgl",kernelFunc:KM},XM=NM({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),JM={kernelName:Ge,backendName:"webgl",kernelFunc:XM},YM="return a + b;",ZM=IM({opSnippet:YM,packedOpSnippet:YM,supportsComplex:!0,cpuKernelImpl:S$}),eO={kernelName:He,backendName:"webgl",kernelFunc:ZM};class tO{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class nO{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const rO={kernelName:Ke,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,s=n;if(1===s.length)return fM({inputs:{x:s[0]},backend:r});if(s.length>Le().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(s.length/2),n=e({inputs:s.slice(0,t),backend:r}),a=e({inputs:s.slice(t),backend:r});return e({inputs:[n,a],backend:r})}const a=s.map((e=>e.dtype)).reduce(((e,t)=>ks(e,t))),o=s.map((e=>e.shape)),i=Le().getBool("WEBGL_PACK")?new nO(s[0].shape,o):new tO(s[0].shape,o);return r.runWebGLProgram(i,s,a)}},sO={kernelName:Qe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r,i=s.shape.length,u=he(a,s.shape);let l=u;const c=Fl(l,i);let p=s;null!=c&&(p=WM({inputs:{x:s},backend:n,attrs:{perm:c}}),l=ql(l.length,i)),zl("all",l,i);const[h,d]=Dl(p.shape,l),f=MM({inputs:{x:p},backend:n,attrs:{shape:[-1,ne(d)]}}),m=RM(f,f.dtype,"all",n);let g;return g=MM(o?{inputs:{x:m},backend:n,attrs:{shape:Rl(h,u)}}:{inputs:{x:m},backend:n,attrs:{shape:h}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(p),g}},aO={kernelName:Xe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r,i=s.shape.length,u=he(a,s.shape);let l=u;const c=Fl(l,i);let p=s;null!=c&&(p=WM({inputs:{x:s},backend:n,attrs:{perm:c}}),l=ql(l.length,i)),zl("any",l,i);const[h,d]=Dl(p.shape,l),f=MM({inputs:{x:p},backend:n,attrs:{shape:[-1,ne(d)]}}),m=RM(f,f.dtype,"any",n);let g;return g=MM(o?{inputs:{x:m},backend:n,attrs:{shape:Rl(h,u)}}:{inputs:{x:m},backend:n,attrs:{shape:h}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(p),g}};class oO{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:s,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,a];const o="max"===t?">":"<",i=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${i};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${o} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class iO{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,Y(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const s=e[e.length-1],a=Math.ceil(s/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),r||this.variableNames.push("bestIndicesA");const o=this.outputShape,i=o.length,u=y$(i),l=J$("coords",i);let c,p;if(1===a){p=i+1;const e=y$(p);c=`\n        ${e} sourceLocR = ${e}(${l.join()}, 0);\n        ++${l[i-1]};\n        ${e} sourceLocG = ${e}(${l.join()}, 0);\n        ++${l[i-2]};\n        ${e} sourceLocA = ${e}(${l.join()}, 0);\n        --${l[i-1]};\n        ${e} sourceLocB = ${e}(${l.join()}, 0);\n        --${l[i-2]};`}else p=i,c=`\n        ${u} sourceLocR = coords;\n        ++${l[i-1]};\n        ${u} sourceLocG = coords;\n        ++${l[i-2]};\n        ${u} sourceLocA = coords;\n        --${l[i-1]};\n        ${u} sourceLocB = coords;\n        --${l[i-2]};`;const h=["x","y","z","w","u","v"].slice(0,p),d="."+h[p-1],f=h.map((e=>"int "+e)),m=J$("sourceLocR",p-1).concat("inIdx.r"),g=J$("sourceLocG",p-1).concat("inIdx.g"),y=J$("sourceLocB",p-1).concat("inIdx.b"),b=J$("sourceLocA",p-1).concat("inIdx.a"),w="max"===n?"greaterThan":"lessThan",x=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()})));`,S=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,v=r?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${h.join()}),\n                                          vec2(${h.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${h.join()}),\n                               vec2(${h.slice(-2).join()}));\n      }\n      ${v}\n      void main() {\n        ${u} coords = getOutputCoords();\n        bool hasNextCol = ${l[i-1]} < ${o[i-1]-1};\n        bool hasNextRow = ${l[i-2]} < ${o[i-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${d}, sourceLocG${d},\n          sourceLocB${d}, sourceLocA${d}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${S};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${x}\n          vec4 candidate = ${S};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${w}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function uO(e,t,n,r=null){let s=t.shape[0],a=t.shape[1];null!=r&&(s=r.shape[0],a=r.shape[1]);const o=Kh(a),i={windowSize:o,inSize:a,batchSize:s,outSize:Math.ceil(a/o)},u=new oO(i,n,null==r),l=[t];null!=r&&l.push(r);const c=e.runWebGLProgram(u,l,"int32");if(1===c.shape[1])return c;const p=uO(e,t,n,c);return e.disposeIntermediateTensorInfo(c),p}function lO(e,t,n,r=null){const s=null!=r?r.shape:t.shape,a=Kh(s[s.length-1]),o=new iO(s,a,n,null==r),i=null==r?[t]:[t,r],u=e.runWebGLProgram(o,i,"int32");if(u.shape.length===t.shape.length){const r=lO(e,t,n,u);return e.disposeIntermediateTensorInfo(u),r}return u}function cO(e,t,n,r){const s=[n];if(zl("arg"+r.charAt(0).toUpperCase()+r.slice(1),s,t.shape.length),!Le().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],[a,o]=Dl(t.shape,s),i=ne(o),u=MM({inputs:{x:t},backend:e,attrs:{shape:[-1,i]}});n.push(u);const l=uO(e,u,r);n.push(l);const c=MM({inputs:{x:l},backend:e,attrs:{shape:a}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),c}return lO(e,t,r)}const pO={kernelName:Je,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;let o=he(a,s.shape);const i=Fl(o,s.shape.length);let u=s;const l=[];null!=i&&(u=WM({inputs:{x:s},backend:n,attrs:{perm:i}}),l.push(u),o=ql(o.length,u.shape.length)),zl("argMax",[o[0]],u.shape.length);const c=cO(n,u,o[0],"max");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},hO={kernelName:Ye,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;let o=he(a,s.shape);const i=Fl(o,s.shape.length);let u=s;const l=[];null!=i&&(u=WM({inputs:{x:s},backend:n,attrs:{perm:i}}),l.push(u),o=ql(o.length,u.shape.length)),zl("argMin",[o[0]],u.shape.length);const c=cO(n,u,o[0],"min");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},dO=NM({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),fO={kernelName:Ze,backendName:"webgl",kernelFunc:dO},mO=NM({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),gO={kernelName:et,backendName:"webgl",kernelFunc:mO},yO=NM({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),bO={kernelName:tt,backendName:"webgl",kernelFunc:yO},wO=IM({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),xO={kernelName:rt,backendName:"webgl",kernelFunc:wO},SO=NM({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),vO={kernelName:nt,backendName:"webgl",kernelFunc:SO};class kO{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,o=e.strideHeight,i=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterHeight,p=e.effectiveFilterWidth,h=e.padInfo.top,d=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${o}, ${i});\n        const ivec2 pads = ivec2(${h}, ${d});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p};\n                wC += ${l}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?s?m:g:`wR * ${p} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / count");const w=4*Math.floor(a/4),x=a%4,S=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${o}, ${i});\n      const ivec2 pads = ivec2(${h}, ${d});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${w}; wC += 4) {\n            int xC = xCCorner + wC * ${l};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              getValue(batch, xR, xC + 3 * ${l}, d)\n            );\n\n            ${S}\n          }\n\n          int xC = xCCorner + ${w};\n          if (${1===x}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${S}\n          } else if (${2===x}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${S}\n          } else if (${3===x}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              initializationValue\n            );\n\n            ${S}\n          }\n        }\n        setOutput(${b});\n      }\n    `}}class NO{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,o=e.strideDepth,i=e.strideHeight,u=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,p=e.dilationWidth,h=e.effectiveFilterDepth,d=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const b="avg"===t;let w="0.0";if(b||(w="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${o}, ${i}, ${u});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${h};\n              wD += ${l}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${d};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${p}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?s?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${d} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let x=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(x="avgValue / count");const S=4*Math.floor(a/4),v=a%4,k=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${o}, ${i}, ${u});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${w};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${w});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${h};\n            wD += ${l}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${S}; wC += 4) {\n              int xC = xCCorner + wC * ${p};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${p}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${p}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${p}, ch)\n              );\n\n              ${k}\n            }\n\n            int xC = xCCorner + ${S};\n            if (${1===v}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${k}\n            } else if (${2===v}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${p}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${k}\n            } else if (${3===v}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${p}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${p}, ch),\n                initializationValue\n              );\n\n              ${k}\n            }\n          }\n          setOutput(${x});\n        }\n      }\n    `}}const IO={kernelName:st,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;WP(s,"avgPool");const{filterSize:a,strides:o,pad:i,dimRoundingMode:u}=r;Y(yu(o,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const l=iu(s.shape,a,o,1,i,u);if(1===l.filterWidth&&1===l.filterHeight&&se(l.inShape,l.outShape))return fM({inputs:{x:s},backend:n});const c=new kO(l,"avg",!1);return n.runWebGLProgram(c,[s],"float32")}},TO={kernelName:ot,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:u,dataFormat:l}=r,c=uu(s.shape,a,o,[1,1,1],i,u,l),p=new NO(c,"avg",!1);return n.runWebGLProgram(p,[s],"float32")}};class CO{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterHeight,u=e.effectiveFilterWidth,l=i-1-e.padInfo.top,c=u-1-e.padInfo.left,p=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${l}, ${c});\n      const float avgMultiplier = float(${p});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${i};\n            wR += ${a}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${o}) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class AO{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,a=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterDepth,p=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=c-1-e.padInfo.front,f=p-1-e.padInfo.top,m=h-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${d}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${i}) {\n          float dyD = float(dyDCorner + wD) / ${s}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${p};\n              wR += ${u}) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${h};\n                wC += ${l}) {\n              float dyC = float(dyCCorner + wC) / ${o}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const EO={kernelName:it,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,o=a,{filterSize:i,strides:u,pad:l,dimRoundingMode:c}=r,p=uu(o.shape,i,u,[1,1,1],l,c),h=new AO(p);return n.runWebGLProgram(h,[s],o.dtype)}},PO={kernelName:at,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,o=a;WP([s,a],"avgPoolGrad");const{filterSize:i,strides:u,pad:l}=r,c=iu(o.shape,i,u,1,l),p=new CO(c);return n.runWebGLProgram(p,[s],o.dtype)}},$O={kernelName:ut,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:o,transposeB:i}=r;return jM({a:s,b:a,transposeA:o,transposeB:i,backend:n})}};class MO{constructor(e,t,n,r,s,a){this.outputShape=[],this.variableNames=["x","mean","variance"],Wi(e,t),Wi(e,n);let o="0.0";null!=r&&(Wi(e,r),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let i="1.0";null!=s&&(Wi(e,s),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${o};\n        float scale = ${i};\n        float inv = scale * inversesqrt(variance + float(${a}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class OO{constructor(e,t,n,r,s,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Wi(e,t),Wi(e,n);let o="vec4(0.0)";null!=r&&(Wi(e,r),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let i="vec4(1.0)";null!=s&&(Wi(e,s),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${o};\n        vec4 scale = ${i};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${a}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const _O={kernelName:Xt,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,mean:s,variance:a,offset:o,scale:i}=e;Y(s.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),Y(null==o||s.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),Y(null==i||s.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:u}=n;null==u&&(u=.001);const l=[r,s,a];let c=null;null!=o&&(c=o.shape,l.push(o));let p=null;null!=i&&(p=i.shape,l.push(i));const h=Le().getBool("WEBGL_PACK_NORMALIZATION")?new OO(r.shape,s.shape,a.shape,c,p,u):new MO(r.shape,s.shape,a.shape,c,p,u);return t.runWebGLProgram(h,l,l[0].dtype)}};class DO{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=y$(this.rank),n=`uniform int start[${this.rank}];`,r=function(e){if(1===e)return"sourceLoc";if(e<=6)return RO.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let s;s=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${RO[t]} = start[${t}] + coords.${RO[t]};`)).join("\n")}\n      `,this.userCode=`\n      ${n}\n      void main() {\n        ${s}\n        setOutput(getSource(${r}));\n      }\n    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{null==this.startLoc&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||t.gl.uniform1iv(this.startLoc,e)}}}const RO=["x","y","z","w","u","v"];class zO{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length;const t=y$(this.rank),n=J$("coords",this.rank),r=J$("sourceLoc",this.rank),s=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,a=`getChannel(getSource(${r.join()}), ${s})`,o=`\n      result.x = ${a};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${a};\n        --${r[this.rank-1]};\n      }\n    `,i=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${a};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${a};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      uniform int start[${this.rank}];\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${o}\n        ${i}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{null==this.startLoc&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||t.gl.uniform1iv(this.startLoc,e)}}}function FO(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,size:o}=r,[i,u]=Oo(s,a,o);if(wo(s,i,u),0===ne(u))return n.makeTensorInfo(u,s.dtype,[]);if(n.shouldExecuteOnCPU([s])||"string"===s.dtype){const e=n.texData.get(s.dataId),t=V$(e.values,i,u,s.shape,s.dtype);return n.makeTensorInfo(u,s.dtype,t)}const{isPacked:l}=n.texData.get(s.dataId),c=$o(s.shape,i,u);if(l||!c){const e=Le().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new zO(u):new DO(u),t=e.getCustomSetupFunc(i);return n.runWebGLProgram(e,[s],s.dtype,t)}return n.uploadToGPU(s.dataId),function(e,t,n,r){const s=r.texData.get(e.dataId),a=r.makeTensorInfo(n,e.dtype),o=r.texData.get(a.dataId);Object.assign(o,s),o.complexParentRefCount=0,o.refCount=1,o.shape=n,o.dtype=e.dtype;let i=Mo(t,Ae(e.shape));s.slice&&(i+=s.slice.flatOffset),o.slice={flatOffset:i,origDataId:s.slice&&s.slice.origDataId||e.dataId};const u=r.dataRefCount.get(o.slice.origDataId)||1;return r.dataRefCount.set(o.slice.origDataId,u+1),a}(s,i,u,n)}const LO={kernelName:lr,backendName:"webgl",kernelFunc:FO},qO={kernelName:lt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,crops:o}=r;Y(s.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const i=a.reduce(((e,t)=>e*t)),u=Xh(s.shape,a,i),l=Jh(u.length,a.length),c=Yh(s.shape,a,i),p=Zh(o,a.length),h=ed(c,o,a.length),d=[],f=MM({inputs:{x:s},backend:n,attrs:{shape:u}}),m=WM({inputs:{x:f},backend:n,attrs:{perm:l}}),g=MM({inputs:{x:m},backend:n,attrs:{shape:c}}),y=FO({inputs:{x:g},backend:n,attrs:{begin:p,size:h}});return d.push(f),d.push(m),d.push(g),d.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},BO={kernelName:ct,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:o}=r,i=n.readSync(s.dataId),u=n.readSync(a.dataId),l=v$(i,u,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,l)}},WO=IM({opSnippet:"return float(a != b);",dtype:"bool"}),VO={kernelName:Dn,backendName:"webgl",kernelFunc:WO};function jO(e){const{inputs:t,backend:n}=e,{input:r}=t;return fM({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const UO={kernelName:Kn,backendName:"webgl",kernelFunc:jO},GO={kernelName:ht,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:s}=t,{x:a}=n,{dtype:o}=s;if("complex64"===o){if("complex64"===a.dtype)return fM({inputs:{x:a},backend:r});const t=sc(a.shape),n=e({inputs:{x:a},backend:r,attrs:{dtype:"float32"}}),s=gM({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),s}if("complex64"===a.dtype){const t=jO({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:o}});return r.disposeIntermediateTensorInfo(t),n}if(!be(a.dtype,o)){const e=fM({inputs:{x:a},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:o}}if("int32"===o)return function(e,t){const n=new sM(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(a,r);if("bool"===o){const e=r.makeTensorInfo([],"bool",fe("bool",1)),t=WO({inputs:{a,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${o}`)}},HO="return ceil(x);",KO=NM({opSnippet:HO,packedOpSnippet:HO,cpuKernelImpl:N$}),QO={kernelName:dt,backendName:"webgl",kernelFunc:KO};class XO{constructor(e){this.variableNames=["A"],this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}getCustomSetupFunc(e,t){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}}class JO{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}getCustomSetupFunc(e,t){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}}const YO={kernelName:ft,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{clipValueMin:a,clipValueMax:o}=r;let i;i=Le().getBool("WEBGL_PACK_CLIP")?new JO(s.shape):new XO(s.shape);const u=i.getCustomSetupFunc(a,o);return n.runWebGLProgram(i,[s],s.dtype,u)}};class ZO{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function e_(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const t_={kernelName:gt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=n.texData.get(r.dataId),a=new ZO(r.shape),o=[e_(r,s.complexTensorInfos.real),e_(r,s.complexTensorInfos.imag)];return n.runWebGLProgram(a,o,o[0].dtype)}};class n_{constructor(e){this.outputShape=[],this.outputShape=Gh(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const r=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${r}));`)}const r=t.length,s=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${s}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class r_{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Gh(e,t);const n=this.outputShape,r=n.length,s=y$(r),a=J$("coords",r),o=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));const i=new Array(e.length-1);i[0]=e[0][t];for(let n=1;n<i.length;n++)i[n]=i[n-1]+e[n][t];const u=o[t],l=o.slice(-2),c=o.join();let p=`if (${u} < ${i[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${l.join()}));\n        }`;for(let e=1;e<i.length;e++){const t=i[e-1];p+=`\n        if (${u} < ${i[e]}  && ${u} >= ${i[e-1]}) {\n          return getChannel(\n            getT${e}(${s_(o,u,t)}),\n            vec2(${s_(l,u,t)}));\n        }`}const h=i.length,d=i[i.length-1];p+=`\n        return getChannel(\n          getT${h}(${s_(o,u,d)}),\n          vec2(${s_(l,u,d)}));`,this.userCode=`\n      float getValue(${o.map((e=>"int "+e))}) {\n        ${p}\n      }\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${a}), 0., 0., 0.);\n\n        ${a[r-1]} = ${a[r-1]} + 1;\n        if (${a[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${a});\n        }\n\n        ${a[r-2]} = ${a[r-2]} + 1;\n        if (${a[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${a});\n        }\n\n        ${a[r-1]} = ${a[r-1]} - 1;\n        if (${a[r-2]} < ${n[r-2]} &&\n            ${a[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${a});\n        }\n        setOutput(result);\n      }\n    `}}function s_(e,t,n){const r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function a_(e){const{inputs:t,backend:n}=e,{input:r}=t;return fM({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const o_={kernelName:rn,backendName:"webgl",kernelFunc:a_};function i_(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map((e=>jO({inputs:{input:e},backend:n}))),s=e.map((e=>a_({inputs:{input:e},backend:n}))),a=i_(r,t,n),o=i_(s,t,n),i=gM({inputs:{real:a,imag:o},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),s.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),i}if("string"===r){const{tensors2D:s,outShape:a}=u_(e,t,n),o=s.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),i=1===s[0].shape[0],u=I$(o,a,r,i),l=Gh(e.map((e=>e.shape)),t),c=n.makeTensorInfo(l,r,u);return s.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}if(e.length>Le().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const r=Math.floor(e.length/2),s=i_(e.slice(0,r),t,n),a=i_(e.slice(r),t,n),o=i_([s,a],t,n);return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),o}if(Le().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const s=new r_(e.map((e=>e.shape)),t);return n.runWebGLProgram(s,e,r)}const{tensors2D:s,outShape:a}=u_(e,t,n),o=new n_(s.map((e=>e.shape))),i=n.runWebGLProgram(o,s,r);s.forEach((e=>n.disposeIntermediateTensorInfo(e)));const u=MM({inputs:{x:i},attrs:{shape:a},backend:n});return n.disposeIntermediateTensorInfo(i),u}function u_(e,t,n){const r=Gh(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>MM({inputs:{x:e},attrs:{shape:[-1,ne(e.shape.slice(t))]},backend:n}))),outShape:r}}function l_(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,a=he(s,t[0].shape)[0],o=Gh(t.map((e=>e.shape)),a);if(0===ne(o))return n.makeTensorInfo(o,t[0].dtype,[]);const i=t.filter((e=>ne(e.shape)>0));return 1===i.length?fM({inputs:{x:i[0]},backend:n}):(Uh(i.map((e=>e.shape)),a),i_(i,a,n))}const c_={kernelName:yt,backendName:"webgl",kernelFunc:l_};class p_{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,o=e.padInfo.left,i=e.strideHeight,u=e.strideWidth,l=e.dilationHeight,c=e.dilationWidth,p=e.filterHeight,h=e.filterWidth,d=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1;let w="",x="";n&&(w=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,x="result = activation(result);");const S=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${w}\n\n      const ivec2 strides = ivec2(${i}, ${u});\n      const ivec2 pads = ivec2(${a}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${p}; wR++) {\n          int xR = xRCorner + wR * ${l};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${h}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${d}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${d}) *\n                    getW(wR, wC, ${d}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${d}, xR, xC) *\n                    getW(wR, wC, ${d}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2),\n                getW(wR, wC, ${d} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1),\n                  getX(batch, xR, xC, ${d} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC),\n                  getX(batch, ${d} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${S}\n        ${x}\n        setOutput(result);\n      }\n    `}}class h_{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,s=e.strideDepth,a=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.filterDepth,p=e.filterHeight,h=e.filterWidth,d=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${s}, ${a}, ${o});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${i};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h}; wC++) {\n              int xC = xCCorner + wC * ${l};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${d}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${d}) *\n                  getW(wF, wR, wC, ${d}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1),\n                  getX(batch, xF, xR, xC, ${d} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2),\n                  getW(wF, wR, wC, ${d} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class d_{constructor(e,t,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;const{filterWidth:r,inChannels:s,strideWidth:a,strideHeight:o,padInfo:i,outWidth:u,dilationWidth:l,dilationHeight:c,dataFormat:p}=n,{left:h,top:d}=i,f=s*r,m=jP(),g="channelsLast"===p,y=g?0:1,b=g?1:2;let w="";for(let n=0;n<=1;n++)for(let r=0;r<=1;r++)w+=`\n          blockIndex = rc.y + ${r};\n          pos = rc.x + ${n};\n\n          if(blockIndex < ${e[1]} && pos < ${e[0]}) {\n            offsetY = int(blockIndex / (${u})) * ${o} - ${d};\n            d0 = offsetY + ${c} * (pos / ${f});\n\n            if(d0 < ${t[y]} && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ${u}.) * ${a}. - ${h}.);\n              d1 = offsetX + ${l} * (int(mod(float(pos), ${f}.) / ${s}.));\n\n              if(d1 < ${t[b]} && d1 >= 0) {\n\n                ch = int(mod(float(pos), ${s}.));\n\n                if (${g}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*n+r}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*n+r}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${w}\n\n        ${m.output} = result;\n      }\n    `}}function f_({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){const u=e.shape,l=r.texData.get(e.dataId),c=n.inChannels,p=u[0]*u[1]*u[2],h=n.outChannels,d="channelsLast"===n.dataFormat;let f;const m=[],g=(1===p||1===h)&&c>1e3,y=u[2]%2!=0&&!!l.isPacked;if(!g&&Le().getBool("WEBGL_LAZILY_UNPACK")&&Le().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&y){const c=d?u[0]*u[1]*(u[2]+1):u[0]*u[2]*(u[3]+1),p={dataId:e.dataId,shape:[1,c,n.inChannels],dtype:e.dtype},h=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,Y(RP(l.shape,p.shape),(()=>`packed reshape ${l.shape} to ${p.shape} isn't free`));const g=MM({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});m.push(g);const y=jM({a:p,b:g,backend:r,transposeA:!1,transposeB:!1,bias:s,activation:i,preluActivationWeights:a,leakyreluAlpha:o}),b=r.texData.get(y.dataId);Y(b.isPacked,(()=>"batchMatMul result is expected to be packed")),l.shape=h,b.shape=n.outShape,f=fM({inputs:{x:y},backend:r}),f.shape=n.outShape,m.push(y)}else{const l=MM({inputs:{x:e},backend:r,attrs:{shape:[1,d?u[0]*u[1]*u[2]:u[0]*u[2]*u[3],n.inChannels]}}),c=MM({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),p=jM({a:l,b:c,transposeA:!1,transposeB:!1,backend:r,bias:s,activation:i,preluActivationWeights:a,leakyreluAlpha:o});f=MM({inputs:{x:p},backend:r,attrs:{shape:n.outShape}}),m.push(l),m.push(c),m.push(p)}for(const e of m)r.disposeIntermediateTensorInfo(e);return f}function m_({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){const{filterWidth:u,filterHeight:l,inChannels:c,outWidth:p,outHeight:h,dataFormat:d}=n,f="channelsLast"===d,m=u*l*c,g=h*p,y=[m,g],b=[],w=MM({inputs:{x:e},backend:r,attrs:{shape:e.shape.slice(1)}}),x=MM({inputs:{x:t},backend:r,attrs:{shape:[1,m,ne(t.shape)/m]}});b.push(w),b.push(x);const S=new d_(y,w.shape,n),v=r.runWebGLProgram(S,[w],"float32"),k=MM({inputs:{x:v},backend:r,attrs:{shape:[1,y[0],y[1]]}});b.push(v),b.push(k);const N=null!=s,I=null!=a,T="leakyrelu"===i,C=i?TM(i,!0):null,A=new CM(k.shape,x.shape,[1,g,n.outChannels],!0,!1,N,C,I,T),E=[k,x];if(s&&E.push(s),I&&E.push(a),T){const e=r.makeTensorInfo([],"float32",as(o,"float32"));E.push(e),b.push(e)}const P=r.runWebGLProgram(A,E,"float32"),$=MM({inputs:{x:P},backend:r,attrs:{shape:f?[1,h,p,n.outChannels]:[1,n.outChannels,h,p]}});b.push(P);for(const e of b)r.disposeIntermediateTensorInfo(e);return $}const g_={kernelName:bt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:o,pad:i,dataFormat:u,dilations:l,dimRoundingMode:c}=r,p=bu(u),h=lu(s.shape,a.shape,o,l,i,c,!1,p);let d;if(1!==h.filterHeight||1!==h.filterWidth||1!==h.dilationHeight||1!==h.dilationWidth||1!==h.strideHeight||1!==h.strideWidth||"SAME"!==h.padInfo.type&&"VALID"!==h.padInfo.type)if(Le().getBool("WEBGL_CONV_IM2COL")&&1===s.shape[0])d=m_({x:s,filter:a,convInfo:h,backend:n});else{const e=new p_(h);d=n.runWebGLProgram(e,[s,a],"float32")}else d=f_({x:s,filter:a,convInfo:h,backend:n});const f=MM({inputs:{x:d},backend:n,attrs:{shape:h.outShape}});return n.disposeIntermediateTensorInfo(d),f}};class y_{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,a="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${a}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class b_{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a="channelsLast"===e.dataFormat,o=t-1-e.padInfo.top,i=n-1-e.padInfo.left,u=a?1:2,l=a?2:3,c=a?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${o}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${u}], coords[${l}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${a}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class w_{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.padInfo.front,a=e.padInfo.top,o=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${s};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${a};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${o};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class x_{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,a=e.strideHeight,o=e.strideWidth,i=t-1-e.padInfo.front,u=n-1-e.padInfo.top,l=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${i}, ${u}, ${l});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${s}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${o}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const S_={kernelName:wt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:o,pad:i,dataFormat:u,dimRoundingMode:l,filterShape:c}=r,p=bu(u),h=lu(s.shape,c,o,1,i,l,!1,p),d=new y_(h);return n.runWebGLProgram(d,[s,a],"float32")}},v_={kernelName:xt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{inputShape:o,strides:i,pad:u,dataFormat:l,dimRoundingMode:c}=r,p=bu(l),h=lu(o,a.shape,i,1,u,c,!1,p),d=new b_(h);return n.runWebGLProgram(d,[s,a],"float32")}},k_={kernelName:St,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:o,pad:i,dilations:u}=r,l=cu(s.shape,a.shape,o,u,i),c=new h_(l);return n.runWebGLProgram(c,[s,a],"float32")}},N_={kernelName:vt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:o,pad:i,filterShape:u}=r,l=cu(s.shape,u,o,1,i),c=new w_(l);return n.runWebGLProgram(c,[s,a],"float32")}},I_={kernelName:kt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{pad:o,strides:i,inputShape:u}=r,l=cu(u,a.shape,i,1,o),c=new x_(l);return n.runWebGLProgram(c,[s,a],"float32")}},T_=NM({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),C_={kernelName:Nt,backendName:"webgl",kernelFunc:T_},A_=NM({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),E_={kernelName:It,backendName:"webgl",kernelFunc:A_};class P_{constructor(e,t,n,r,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,o,i,u]=e,[l]=t,[c,p]=n;this.outputShape=[l,c,p,u];const h="bilinear"===r?1:0,[d,f]=[o-1+".0",i-1+".0"],[m,g,y]=c>1?[""+(o-1)/(c-1),"(y2-y1) * height_ratio",`y1*${d} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${d}`],[b,w,x]=p>1?[""+(i-1)/(p-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${a}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${w};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${d} ) {\n          setOutput(float(${s}));\n          return;\n        }\n        float in_x = ${x};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${s}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${h} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const $_={kernelName:Ct,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:a,boxInd:o}=t,{cropSize:i,method:u,extrapolationValue:l}=r,c=new P_(s.shape,a.shape,i,u,l);return n.runWebGLProgram(c,[s,a,o],"float32")}};class M_{constructor(e,t,n){this.variableNames=["x"],this.outputShape=e;const r=e.length,s=t?"0.0":`getX(${O_(r,"coords")})`,a=e[e.length-1];let o="",i="";t?(o=n?"end != "+(a-1):"end != 0",i=n?"end + 1":"end - 1"):(o=n?`end + pow2 < ${a}`:"end >= pow2",i=n?"end + pow2":"end - pow2"),this.userCode=`\n      uniform float index;\n      void main() {\n        ${y$(r)} coords = getOutputCoords();\n        int end = ${__(r,"coords")};\n        float val = ${s};\n        int pow2 = int(pow(2.0, index));\n        if (${o}) {\n          int idx = ${i};\n          ${__(r,"coords")} = idx;\n          val += getX(${O_(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.index&&(this.index=t.getUniformLocation(n,"index")),t.gl.uniform1f(this.index,e)}}}function O_(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function __(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}const D_={kernelName:Tt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:o,reverse:i}=r,u=s.shape.length,l=Fl([a],u);let c=s;null!=l&&(c=WM({inputs:{x:s},backend:n,attrs:{perm:l}}));const p=ql(1,u)[0];if(p!==u-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${s.shape.length-1} but got axis=${a}`);const h=c.shape[p];let d=fM({inputs:{x:c},backend:n});for(let e=0;e<=Math.ceil(Math.log2(h))-1;e++){const t=new M_(c.shape,!1,i),r=t.getCustomSetupFunc(e),s=d;d=n.runWebGLProgram(t,[d],d.dtype,r),n.disposeIntermediateTensorInfo(s)}if(o){const e=new M_(c.shape,o,i),t=d;d=n.runWebGLProgram(e,[d],d.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=l){const e=WM({inputs:{x:d},backend:n,attrs:{perm:Ll(l)}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c),e}return d}},R_={kernelName:At,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:o,binaryOutput:i}=r;if(1===s.shape.length){const e=n.readSync(s.dataId),t=n.readSync(a.dataId),r=v$(e,t,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,r)}if(2===s.shape.length){const e=n.bufferSync(s),t=n.bufferSync(a),r=k$(e,t,o,i);return n.makeTensorInfo(r.shape,a.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}};class z_{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const F_={kernelName:Et,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:a,dataFormat:o}=r;Y(a>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${a}`));const i=s.shape[0],u="NHWC"===o?s.shape[1]:s.shape[2],l="NHWC"===o?s.shape[2]:s.shape[3],c="NHWC"===o?s.shape[3]:s.shape[1],p=u*a,h=l*a,d=c/(a*a),f=new z_("NHWC"===o?[i,p,h,d]:[i,d,p,h],a,o);return n.runWebGLProgram(f,[s],s.dtype)}};class L_{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.inHeight,o=e.inWidth,i=e.padInfo.top,u=e.padInfo.left,l=e.strideHeight,c=e.strideWidth,p=e.dilationHeight,h=e.dilationWidth,d=e.filterHeight,f=e.filterWidth,m=e.outChannels/e.inChannels;let g="",y="";n&&(g=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,y="result = activation(result);");const b=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${g}\n\n      const ivec2 strides = ivec2(${l}, ${c});\n      const ivec2 pads = ivec2(${i}, ${u});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${m};\n        int q = d2 - d1 * ${m};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${d}; wR++) {\n          int xR = xRCorner + wR * ${p};\n\n          if (xR < 0 || xR >= ${a}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${f}; wC++) {\n            int xC = xCCorner + wC * ${h};\n\n            if (xC < 0 || xC >= ${o}) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${b}\n        ${y}\n        setOutput(result);\n      }\n    `}}class q_{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.outShape;const a=e.inHeight,o=e.inWidth,i=e.padInfo.top,u=e.padInfo.left,l=e.strideHeight,c=e.strideWidth,p=e.dilationHeight,h=e.dilationWidth,d=e.filterHeight,f=e.filterWidth,m=f;let g="int xR; int xC; int xCOffset;";for(let e=0;e<d;e++)for(let t=0;t<f;t++)g+=`\n          vec4 xTexelR${e}C${2*t} = vec4(0.);\n          vec4 wR${e}C${t} = vec4(0.);\n          vec4 xR${e}C${t} = vec4(0.);`;for(let e=0;e<d;e++)for(let t=0;t<m;t++){const n=2*t;if(g+=`\n          xR = xRCorner + ${e*p};\n          xC = xCCorner + ${n*h};\n        `,1===c){if(n<f&&(g+=u%2==1?`\n                xCOffset = xC + 1;\n                if(xR >= 0 && xR < ${a} && xCOffset >= 0 && xCOffset < ${o}) {\n                  xTexelR${e}C${n} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${o}) {\n                    xTexelR${e}C${n}.zw = vec2(0.);\n                  }\n                } else {\n                  xTexelR${e}C${n} = vec4(0.);\n                }\n\n                xCOffset = xC + 1 - 2;\n                if(xR >= 0 && xR < ${a} && xCOffset >= 0 && xCOffset < ${o}) {\n                  vec4 previous = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${o}) {\n                    previous.zw = vec2(0.);\n                  }\n\n                  xR${e}C${n} = vec4(previous.zw, xTexelR${e}C${n}.xy);\n                } else {\n                  xR${e}C${n} = vec4(0, 0, xTexelR${e}C${n}.xy);\n                }\n              `:`\n                if(xR >= 0 && xR < ${a} && xC >= 0 && xC < ${o}) {\n                  xTexelR${e}C${n} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${e}C${n} = vec4(0.);\n                }\n\n                xR${e}C${n} = xTexelR${e}C${n};\n              `,n+1<f)){const t=u%2==0?K(h):h;h%2==0&&u%2==1||h%2!=0&&u%2!=1?(g+=`\n                  xCOffset = xC + ${u%2} + ${t};\n\n                  if(xR >= 0 && xR < ${a} &&\n                    xCOffset >= 0 && xCOffset < ${o}) {\n                    xTexelR${e}C${n+2} = getX(batch, xR, xCOffset, d1);\n                  }\n                `,h>1&&(g+=`\n                    xCOffset -= 2;\n                    if(xR >= 0 && xR < ${a} &&\n                      xCOffset >= 0 && xCOffset < ${o}) {\n                      xTexelR${e}C${n} = getX(batch, xR, xCOffset, d1);\n                    } else {\n                      xTexelR${e}C${n} = vec4(0.);\n                    }\n                  `),g+=`\n                  xR${e}C${n+1} = vec4(\n                    xTexelR${e}C${n}.zw, xTexelR${e}C${n+2}.xy);\n                `):g+=`\n                  xCOffset = xC + ${t};\n\n                  if(xR >= 0 && xR < ${a} &&\n                    xCOffset >= 0 && xCOffset < ${o}) {\n                    xTexelR${e}C${n+2} = getX(batch, xR, xCOffset, d1);\n                  }\n\n                  xR${e}C${n+1} = xTexelR${e}C${n+2};\n                `}}else n<f&&(g+=`\n              if(xR >= 0 && xR < ${a}) {\n            `,u%2==1?(g+=`\n                xCOffset = xC + 1 - ${c};\n                if(xCOffset >= 0 && xCOffset < ${o}) {\n                  xTexelR${e}C${n} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${e}C${n} = vec4(0.);\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ${o}) {\n                  xTexelR${e}C${n+2} = getX(batch, xR, xC + 1, d1);\n                } else {\n                  xTexelR${e}C${n+2} = vec4(0.);\n                }\n\n                xR${e}C${n} = vec4(\n                  xTexelR${e}C${n}.zw, xTexelR${e}C${n+2}.zw);\n              `,n+1<f&&(g+=`\n                  vec4 final = vec4(0.);\n                  xCOffset = xC + 1 + ${c};\n                  if(xCOffset >= 0 && xCOffset < ${o}) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xR${e}C${n+1} = vec4(xTexelR${e}C${n+2}.xy, final.xy);\n                `)):(g+=`\n                if(xC >= 0 && xC < ${o}) {\n                  xTexelR${e}C${n} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${e}C${n} = vec4(0.);\n                }\n\n                xCOffset = xC + ${c};\n                if(xCOffset >= 0 && xCOffset < ${o}) {\n                  xTexelR${e}C${n+2} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${e}C${n+2} = vec4(0.);\n                }\n\n                xR${e}C${n} = vec4(\n                  xTexelR${e}C${n}.xy, xTexelR${e}C${n+2}.xy);\n              `,n+1<f&&(g+=`\n                  xR${e}C${n+1} = vec4(\n                    xTexelR${e}C${n}.zw, xTexelR${e}C${n+2}.zw);\n                `)),g+="}");n<f&&(g+=`\n            vec4 wTexelR${e}C${n} = getW(${e}, ${n}, d1, q);\n            wR${e}C${n} = vec4(wTexelR${e}C${n}.xz, wTexelR${e}C${n}.xz);\n          `,n+1<f&&(g+=`\n              vec4 wTexelR${e}C${n+1} = getW(${e}, ${n+1}, d1, q);\n              wR${e}C${n+1} =\n                vec4(wTexelR${e}C${n+1}.xz, wTexelR${e}C${n+1}.xz);`))}for(let e=0;e<d;e++)for(let t=0;t<f;t++)g+=`dotProd += xR${e}C${t} * wR${e}C${t};`;let y="",b="";n&&(y=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,b="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${y}\n\n      const ivec2 strides = ivec2(${l}, ${c});\n      const ivec2 pads = ivec2(${i}, ${u});\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2;\n        int q = 0;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        vec4 dotProd = vec4(0.);\n\n        ${g}\n\n        vec4 result = dotProd;\n        ${w}\n        ${b}\n        setOutput(result);\n      }\n    `}}const B_={kernelName:Pt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:o,pad:i,dilations:u,dimRoundingMode:l}=r;let c=u;null==c&&(c=[1,1]),Y(yu(o,c),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`));const p=lu(s.shape,a.shape,o,c,i,l,!0);let h;return h=Le().getBool("WEBGL_PACK_DEPTHWISECONV")&&p.strideWidth<=2&&p.outChannels/p.inChannels==1?new q_(p):new L_(p),n.runWebGLProgram(h,[s,a],"float32")}};class W_{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${a} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class V_{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a=t-1-e.padInfo.top,o=n-1-e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${i}; dm++) {\n              int d2 = d1 * ${i} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const j_={kernelName:$t,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:o,dilations:i,pad:u,dimRoundingMode:l,filterShape:c}=r,p=lu(s.shape,c,o,i,u,l,!0),h=new W_(p);return n.runWebGLProgram(h,[s,a],"float32")}},U_={kernelName:Mt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{strides:o,dilations:i,pad:u,dimRoundingMode:l,inputShape:c}=r,p=lu(c,a.shape,o,i,u,l,!0),h=new V_(p);return n.runWebGLProgram(h,[s,a],"float32")}};class G_{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const H_={kernelName:Ot,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=[...r.shape,...r.shape],a=ne(r.shape),o=MM({inputs:{x:r},backend:n,attrs:{shape:[a]}}),i=new G_(a),u=n.runWebGLProgram(i,[o],o.dtype),l=MM({inputs:{x:u},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),l}};class K_{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:s,strideWidth:a,filterHeight:o,filterWidth:i,dilationHeight:u,dilationWidth:l}=e,{top:c,left:p}=r;this.userCode=`\n      const ivec2 strides = ivec2(${s}, ${a});\n      const ivec2 pads = ivec2(${c}, ${p});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${o}; h++) {\n          int hIn = hBeg + h * ${u};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${i}; w++) {\n              int wIn = wBeg + w * ${l};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const Q_={kernelName:_t,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:o,pad:i,dilations:u}=r,l=ou(s.shape,a.shape,o,i,"NHWC",u);let c;const p=new K_(l);c=n.runWebGLProgram(p,[s,a],"float32");const h=MM({inputs:{x:c},backend:n,attrs:{shape:l.outShape}});return n.disposeIntermediateTensorInfo(c),h}},X_=NM({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),J_={kernelName:Ft,backendName:"webgl",kernelFunc:X_},Y_={kernelName:Lt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:s}=t,a=Le().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new dM("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,s.shape):new hM("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,s.shape);return n.runWebGLProgram(a,[r,s],r.dtype)}},Z_=IM({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool"}),eD={kernelName:Bt,backendName:"webgl",kernelFunc:Z_},tD=NM({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${rd};\n  float a1 = ${sd};\n  float a2 = ${ad};\n  float a3 = ${od};\n  float a4 = ${id};\n  float a5 = ${ud};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),nD={kernelName:qt,backendName:"webgl",kernelFunc:tD},rD="return exp(x);",sD=NM({opSnippet:rD,packedOpSnippet:rD,cpuKernelImpl:T$}),aD={kernelName:Wt,backendName:"webgl",kernelFunc:sD};function oD(e){const{inputs:t,attrs:n,backend:r}=e,{dim:s}=n,{input:a}=t,o=a.shape.length,i=a.shape.slice();let u=s;return s<0&&(Y(-(o+1)<=s,(()=>`Axis must be in the interval [${-(o+1)}, ${o}]`)),u=o+s+1),i.splice(u,0,1),MM({inputs:{x:a},backend:r,attrs:{shape:i}})}const iD={kernelName:Vt,backendName:"webgl",kernelFunc:oD},uD="return exp(x) - 1.0;",lD=NM({opSnippet:uD,packedOpSnippet:uD,cpuKernelImpl:C$}),cD={kernelName:jt,backendName:"webgl",kernelFunc:lD};class pD{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${r}.0`:"1.0";let o;if("real"===e)o="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);o="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${o}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${a};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function hD(e,t,n){const r=n.texData.get(e.dataId),s=ne(e.shape),a=e.shape[e.shape.length-1],o=MM({inputs:{x:e},backend:n,attrs:{shape:[s/a,a]}}),i=o.shape,u=new pD("real",i,t),l=new pD("imag",i,t),c=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:i},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:i}],p=n.runWebGLProgram(u,c,"float32"),h=n.runWebGLProgram(l,c,"float32"),d=gM({inputs:{real:p,imag:h},backend:n});n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h);const f=MM({inputs:{x:d},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(d),f}const dD={kernelName:Ut,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return hD(r,!1,n)}};class fD{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}getCustomSetupFunc(e){return(t,n)=>{null==this.valueLoc&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}}function mD(e){const{backend:t,attrs:n}=e,{shape:r,value:s}=n;let{dtype:a}=n;if(a=a||Ie(s),"string"===a){const e=me(a,ne(r));return e.fill(s),t.makeTensorInfo(r,a,e)}{const e=new fD(r,s),n=e.getCustomSetupFunc(s);return t.runWebGLProgram(e,[],a,n)}}const gD={kernelName:Gt,backendName:"webgl",kernelFunc:mD};class yD{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const bD={kernelName:Ht,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,s=new yD(n.shape);return r.runWebGLProgram(s,[n],n.dtype)}},wD="return floor(x);",xD=NM({opSnippet:wD,packedOpSnippet:wD,cpuKernelImpl:A$}),SD={kernelName:Kt,backendName:"webgl",kernelFunc:xD},vD=IM({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),kD={kernelName:Qt,backendName:"webgl",kernelFunc:vD};class ND{constructor(e){this.variableNames=["A"];const t=jP(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class ID{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=jP(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const TD={kernelName:Dr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:s}=t;const{numChannels:a}=r,o="undefined"!=typeof HTMLVideoElement&&s instanceof HTMLVideoElement,i="undefined"!=typeof HTMLImageElement&&s instanceof HTMLImageElement,u="undefined"!=typeof ImageBitmap&&s instanceof ImageBitmap,[l,c]=o?[s.videoWidth,s.videoHeight]:[s.width,s.height],p=[c,l],h=[c,l,a];(i||o||u)&&(null==CD&&(CD=document.createElement("canvas").getContext("2d")),CD.canvas.width=l,CD.canvas.height=c,CD.drawImage(s,0,0,l,c),s=CD.canvas);const d=n.makeTensorInfo(p,"int32");n.texData.get(d.dataId).usage=mP.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),s);const f=Le().getBool("WEBGL_PACK")?new ID(h):new ND(h),m=n.runWebGLProgram(f,[d],"int32");return n.disposeData(d.dataId),m}};let CD;const AD={kernelName:Fr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:o,preluActivationWeights:i}=t,{strides:u,pad:l,dataFormat:c,dilations:p,dimRoundingMode:h,activation:d,leakyreluAlpha:f}=r,m=bu(c),g=lu(s.shape,a.shape,u,p,l,h,!1,m);let y;const b=[];if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(Le().getBool("WEBGL_CONV_IM2COL")&&1===s.shape[0])y=m_({x:s,filter:a,convInfo:g,backend:n,bias:o,activation:d,preluActivationWeights:i,leakyreluAlpha:f});else{const e=null!=o,t=null!=i,r="leakyrelu"===d,u=d?TM(d,!1):null,l=new p_(g,e,u,t,r),c=[s,a];if(o&&c.push(o),i&&c.push(i),r){const e=n.makeTensorInfo([],"float32",as(f,"float32"));c.push(e),b.push(e)}y=n.runWebGLProgram(l,c,"float32")}else y=f_({x:s,filter:a,convInfo:g,backend:n,bias:o,activation:d,preluActivationWeights:i,leakyreluAlpha:f});const w=MM({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return b.push(y),b.forEach((e=>n.disposeIntermediateTensorInfo(e))),w}},ED={kernelName:Lr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:o,preluActivationWeights:i}=t,{strides:u,pad:l,dilations:c,dimRoundingMode:p,activation:h,leakyreluAlpha:d}=r,f=[];let m=c;null==m&&(m=[1,1]),Y(yu(u,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${m}'`));const g=lu(s.shape,a.shape,u,m,l,p,!0),y=Le().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,b=h?TM(h,y):null,w=[s,a],x=null!=o,S=null!=i,v="leakyrelu"===h;if(x&&w.push(o),S&&w.push(i),v){const e=n.makeTensorInfo([],"float32",as(d,"float32"));w.push(e),f.push(e)}let k;k=y?new q_(g,x,b,S,v):new L_(g,x,b,S,v);const N=n.runWebGLProgram(k,w,"float32");return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),N}};class PD{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;const r=y$(t.length),s=y$(n.length),a=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${s} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${a};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}const $D={kernelName:Yt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,a=s.shape,o=a[a.length-1],[i,u,l,c]=mo(r,s),p=MM({inputs:{x:s},backend:n,attrs:{shape:[u,o]}}),h=MM({inputs:{x:r},backend:n,attrs:{shape:[ne(r.shape)/l,l]}}),d=new PD(o,c,[u,l]),f=n.runWebGLProgram(d,[h,p],h.dtype),m=MM({inputs:{x:f},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),m}};class MD{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=y$(this.rank),r=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let t=0;t<e.length;t++)2===t?r.push("int(getIndices(resRC.x, resRC.z))"):r.push(`${n[t]}`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}const OD={kernelName:Jt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:a}=t,{axis:o,batchDims:i}=r,u=vd(s,a,he(o,s.shape)[0],i),l=ne(a.shape),c=[],p=MM({inputs:{x:s},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),h=MM({inputs:{x:a},backend:n,attrs:{shape:[u.batchSize,l/u.batchSize]}});c.push(p),c.push(h);const d=[u.batchSize,u.outerSize,l/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([s,a])||"string"===s.dtype){const e=n.bufferSync(h),t=n.bufferSync(p),r=E$(t,e,d);return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(u.outputShape,r.dtype,r.values)}const f=new MD(p.shape,d),m=n.runWebGLProgram(f,[p,h],p.dtype);c.push(m);const g=MM({inputs:{x:m},backend:n,attrs:{shape:u.outputShape}});return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}},_D=IM({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:P$,dtype:"bool"}),DD={kernelName:Zt,backendName:"webgl",kernelFunc:_D},RD=IM({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool"}),zD={kernelName:en,backendName:"webgl",kernelFunc:RD},FD={kernelName:nn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return hD(r,!0,n)}},LD=NM({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),qD={kernelName:sn,backendName:"webgl",kernelFunc:LD},BD=NM({opSnippet:"return float(isinf(x));",dtype:"bool"}),WD={kernelName:an,backendName:"webgl",kernelFunc:BD},VD=NM({opSnippet:"return float(isnan(x));",dtype:"bool"}),jD={kernelName:on,backendName:"webgl",kernelFunc:VD},UD=IM({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:$$,dtype:"bool"}),GD={kernelName:ln,backendName:"webgl",kernelFunc:UD},HD=IM({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",dtype:"bool"}),KD={kernelName:cn,backendName:"webgl",kernelFunc:HD},QD={kernelName:pn,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:a}=n,o=M$(r,s,a);return t.makeTensorInfo([o.length],"float32",o)}},XD=NM({opSnippet:"if (x < 0.0) return NAN;\n  return log(x);",packedOpSnippet:"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:O$}),JD={kernelName:hn,backendName:"webgl",kernelFunc:XD},YD=NM({opSnippet:"return log(1.0 + x);"}),ZD={kernelName:dn,backendName:"webgl",kernelFunc:YD},eR=IM({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),tR={kernelName:fn,backendName:"webgl",kernelFunc:eR},nR=NM({opSnippet:"return float(!(x >= 1.0));"}),rR={kernelName:mn,backendName:"webgl",kernelFunc:nR},sR=IM({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),aR={kernelName:gn,backendName:"webgl",kernelFunc:sR};class oR{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[];const a=t,o=e[3]-1;let i;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;i=.5===s?`inversesqrt(${u})`:1===s?`1.0/(${u})`:`exp(log(${u}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${a}; j <= ${a}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${o}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${i};\n        setOutput(val);\n      }\n    `}}class iR{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=t,o=e[3]-1;let i;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;i=.5===s?`inversesqrt(${u})`:1===s?`1.0/(${u})`:`exp(log(${u}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${a};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${a}; j <= ${a}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${o}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${i};\n        setOutput(result);\n      }\n    `}}const uR={kernelName:bn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:a,bias:o,alpha:i,beta:u}=r,l=Le().getBool("WEBGL_PACK_NORMALIZATION")?new iR(s.shape,a,o,i,u):new oR(s.shape,a,o,i,u);return n.runWebGLProgram(l,[s],s.dtype)}};class lR{constructor(e,t,n,r,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=s,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${s})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${s});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const cR={kernelName:wn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s,y:a,dy:o}=t,{depthRadius:i,bias:u,alpha:l,beta:c}=r,p=new lR(s.shape,i,u,l,c);return n.runWebGLProgram(p,[s,a,o],s.dtype)}};function pR(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:a,keepDims:o}=r,i=s.shape.length,u=he(a,s.shape);let l=u;const c=Fl(l,i),p=null!=c,h=n.shouldExecuteOnCPU([s]);let d=s;if(p){if(h){const e=n.texData.get(d.dataId).values,t=new Array(i);for(let e=0;e<t.length;e++)t[e]=s.shape[c[e]];const r=K$(e,s.shape,s.dtype,c,t);d=n.makeTensorInfo(t,s.dtype),n.texData.get(d.dataId).values=r}else d=LM(s,c,n);l=ql(l.length,i)}zl("max",l,i);const[f,m]=Dl(d.shape,l);let g,y=f;if(o&&(y=Rl(f,u)),h){const e=n.texData.get(d.dataId).values,t=_$(e,ne(m),y,s.dtype);g=n.makeTensorInfo(y,s.dtype),n.texData.get(g.dataId).values=t}else g=function(e,t,n,r){const s=ne(t),a=MM({inputs:{x:e},attrs:{shape:[ne(e.shape)/s,s]},backend:r}),o=RM(a,e.dtype,"max",r),i=MM({inputs:{x:o},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(o),i}(d,m,y,n);return p&&n.disposeIntermediateTensorInfo(d),g}const hR={kernelName:xn,backendName:"webgl",kernelFunc:pR},dR=IM({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:D$}),fR={kernelName:Sn,backendName:"webgl",kernelFunc:dR},mR={kernelName:vn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;WP(s,"maxPool");const{filterSize:a,strides:o,pad:i,dimRoundingMode:u}=r;Y(yu(o,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const l=iu(s.shape,a,o,1,i,u);if(1===l.filterWidth&&1===l.filterHeight&&se(l.inShape,l.outShape))return fM({inputs:{x:s},backend:n});const c=new kO(l,"max",!1);return n.runWebGLProgram(c,[s],s.dtype)}},gR={kernelName:Nn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:o,pad:i,dataFormat:u,dimRoundingMode:l}=r,c=uu(s.shape,a,o,[1,1,1],i,l,u),p=new NO(c,"max",!1);return n.runWebGLProgram(p,[s],s.dtype)}};class yR{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,s=e.effectiveFilterHeight,a=e.effectiveFilterWidth,o=s-1-e.padInfo.top,i=a-1-e.padInfo.left,u=s*a-1;this.userCode=`\n      const ivec2 pads = ivec2(${o}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${s};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${a} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class bR{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.dilationDepth,a=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterDepth,u=e.effectiveFilterHeight,l=e.effectiveFilterWidth,c=i-1-e.padInfo.front,p=u-1-e.padInfo.top,h=l-1-e.padInfo.left,d=i*u*l-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${p}, ${h});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${i};\n           wD += ${s}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${a}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${l};\n                wC += ${o}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${d} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${l} +\n                  wR * ${l} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const wR={kernelName:In,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,o=a,{filterSize:i,strides:u,pad:l,dimRoundingMode:c}=r,p=uu(o.shape,i,u,[1,1,1],l,c),h=new NO(p,"max",!0),d=n.runWebGLProgram(h,[o],o.dtype),f=new bR(p),m=n.runWebGLProgram(f,[s,d],o.dtype);return n.disposeIntermediateTensorInfo(d),m}},xR={kernelName:kn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a,output:o}=t,i=a;WP([a,o],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:p}=r,h=iu(i.shape,u,l,1,c,p),d=new kO(h,"max",!0),f=n.runWebGLProgram(d,[i],i.dtype),m=new yR(h),g=n.runWebGLProgram(m,[s,f],i.dtype);return n.disposeIntermediateTensorInfo(f),g}},SR={kernelName:Tn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:s,strides:a,pad:o,includeBatchInIndex:i}=t,u=n;Y(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const l=[1,1];Y(yu(a,l),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`));const c=iu(r.shape,s,a,l,o),[p,h]=function(e,t,n,r){let s=new kO(n,"max",!1);const a=r.runWebGLProgram(s,[e],"float32");return s=new kO(n,"max",!0,!0,t),[a,r.runWebGLProgram(s,[e],"float32")]}(r,i,c,u);return[p,h]}},vR={kernelName:Cn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{keepDims:s,axis:a}=t,o=n,i=r.shape.length,u=he(a,r.shape);let l=u;const c=Fl(l,i),p=null!=c,h=o.shouldExecuteOnCPU([r]),d=[];let f=r;if(p){if(h){const e=o.texData.get(f.dataId).values,t=new Array(i);for(let e=0;e<t.length;e++)t[e]=r.shape[c[e]];const n=K$(e,r.shape,r.dtype,c,t);f=o.makeTensorInfo(t,r.dtype),o.texData.get(f.dataId).values=n}else f=LM(r,c,o);d.push(f),l=ql(l.length,i)}zl("sum",l,i);const[m,g]=Dl(f.shape,l);let y=m;s&&(y=Rl(m,u));const b=function(e,t,n,r){const s=ne(t),a=MM({inputs:{x:e},attrs:{shape:[ne(e.shape)/s,s]},backend:r}),o=RM(a,"float32","mean",r),i=MM({inputs:{x:o},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(o),i}(f,g,y,o);for(const e of d)o.disposeIntermediateTensorInfo(e);return b}},kR={kernelName:An,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r,i=s.shape.length,u=he(a,s.shape);let l=u;const c=Fl(l,i);let p=s;null!=c&&(p=WM({inputs:{x:s},backend:n,attrs:{perm:c}}),l=ql(l.length,s.shape.length)),zl("min",l,i);const[h,d]=Dl(p.shape,l),f=MM({inputs:{x:p},backend:n,attrs:{shape:[-1,ne(d)]}}),m=RM(f,f.dtype,"min",n);let g;return g=MM(o?{inputs:{x:m},backend:n,attrs:{shape:Rl(h,u)}}:{inputs:{x:m},backend:n,attrs:{shape:h}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(p),g}},NR=IM({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:R$}),IR={kernelName:En,backendName:"webgl",kernelFunc:NR};class TR{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=y$(r),a=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===n?0:1;this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${o});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${s} coords = outC - start;\n        setOutput(getX(${i}));\n      }\n    `:`\n        int start = ${a};\n        int end = ${o};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class CR{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=y$(r),a=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=J$("rc",r),u=J$("source",r),l=`${i[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,p="reflect"===n?0:1;let h="";if(1===r){const e=`\n        ${s} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${p};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${p};\n        }\n        source -= start;\n      `;h=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${i[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n      `}else{const e=`\n        ${s} source = rc;\n        ${s} lt = ${s}(lessThan(source, start));\n        ${s} gte = ${s}(greaterThanEqual(source, end));\n        ${s} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${p}) +\n                gte * ((end - 1) * 2 - source + ${p});\n        source -= start;\n      `;h=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${i[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${i[r-2]} += 1;\n        if(${i[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${u.join()}), ${c});\n          ${i[r-1]} += 1;\n          if(${l}) {\n            ${e}\n            result[3] = getChannel(getX(${u.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${o});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${h}\n        setOutput(result);\n      }\n    `}}const AR={kernelName:Pn,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:s,mode:a}=n,o=Le().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new CR(r.shape,s,a):new TR(r.shape,s,a);return t.runWebGLProgram(o,[r],r.dtype)}},ER=IM({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),PR={kernelName:$n,backendName:"webgl",kernelFunc:ER};class $R{constructor(e,t,n){this.variableNames=["probs"],this.outputShape=[e,n],this.userCode=`\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.seedLoc&&(this.seedLoc=t.getUniformLocation(n,"seed")),t.gl.uniform1f(this.seedLoc,e)}}}const MR=IM({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),OR={kernelName:zt,backendName:"webgl",kernelFunc:MR},_R="return a - b;",DR=IM({opSnippet:_R,packedOpSnippet:_R,supportsComplex:!0,cpuKernelImpl:U$}),RR={kernelName:vr,backendName:"webgl",kernelFunc:DR};function zR(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:a}=r,o=he([a],s.shape),i=pR({inputs:{x:s},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),u=Rl(i.shape,o),l=MM({inputs:{x:i},backend:n,attrs:{shape:u}}),c=DR({inputs:{a:s,b:l},backend:n}),p=sD({inputs:{x:c},backend:n}),h=qM({inputs:{x:p},backend:n,attrs:{axis:o,keepDims:!1}}),d=MM({inputs:{x:h},backend:n,attrs:{shape:u}}),f=MR({inputs:{a:p,b:d},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),f}const FR={kernelName:wr,backendName:"webgl",kernelFunc:zR},LR={kernelName:Mn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:a,seed:o,normalized:i}=r,u=i?s:zR({inputs:{logits:s},backend:n,attrs:{dim:s.shape.length-1}}),l=u.shape[0],c=u.shape[1],p=new $R(l,c,a),h=p.getCustomSetupFunc(o),d=n.runWebGLProgram(p,[u],"int32",h);return i||n.disposeIntermediateTensorInfo(u),d}},qR="return -x;",BR={kernelName:_n,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,s]=F$(e.values,r.shape,r.dtype);return n.makeTensorInfo(s,r.dtype,t)}let s;return s=Le().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new iM(r.shape,qR):new sM(r.shape,qR),n.runWebGLProgram(s,[r],r.dtype)}},WR=ph,VR={kernelName:Rn,backendName:"webgl",kernelFunc:function(e){ld("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:u}=r,l=n.readSync(s.dataId),c=n.readSync(a.dataId),{selectedIndices:p}=WR(l,c,o,i,u);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}},jR=hh,UR={kernelName:zn,backendName:"webgl",kernelFunc:function(e){ld("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:u,padToMaxOutputSize:l}=r,c=n.readSync(s.dataId),p=n.readSync(a.dataId),{selectedIndices:h,validOutputs:d}=jR(c,p,o,i,u,l);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([d]))]}},GR=dh,HR={kernelName:Fn,backendName:"webgl",kernelFunc:function(e){ld("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:u,softNmsSigma:l}=r,c=n.readSync(s.dataId),p=n.readSync(a.dataId),h=o,d=i,f=u,m=l,{selectedIndices:g,selectedScores:y}=GR(c,p,h,d,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class KR{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const QR={kernelName:qn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{depth:a,onValue:o,offValue:i}=r,u=ne(s.shape),l=new KR(u,a,o,i),c=MM({inputs:{x:s},backend:n,attrs:{shape:[u]}}),p=n.runWebGLProgram(l,[c],s.dtype);n.disposeIntermediateTensorInfo(c);const h=MM({inputs:{x:p},backend:n,attrs:{shape:[...s.shape,a]}});return n.disposeIntermediateTensorInfo(p),h}};function XR(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=jO({inputs:{input:r},backend:n}),t=XR({inputs:{x:e},backend:n}),s=a_({inputs:{input:r},backend:n}),a=XR({inputs:{x:s},backend:n}),o=gM({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),o}return mD({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const JR={kernelName:Or,backendName:"webgl",kernelFunc:XR},YR={kernelName:Ln,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===s.dtype){const t=jO({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),a=a_({inputs:{input:s},backend:r}),o=XR({inputs:{x:a},backend:r}),i=gM({inputs:{real:n,imag:o},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(o),i}return mD({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:r})}},ZR={kernelName:Bn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return oD({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const a=t[0].shape,o=t[0].dtype;t.forEach((e=>{Z(a,e.shape,"All tensors passed to stack must have matching shapes"),Y(o===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const i=[],u=l_({inputs:t.map((e=>{const t=oD({inputs:{input:e},backend:n,attrs:{dim:s}});return i.push(t),t})),backend:n,attrs:{axis:s}});return i.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}};class ez{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=y$(r),a=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${o});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(float(${n}));\n        } else {\n          ${s} coords = outC - start;\n          setOutput(getX(${i}));\n        }\n      }\n    `:`\n        int start = ${a};\n        int end = ${o};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(float(${n}));\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class tz{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=y$(r),a=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=J$("rc",r),u=J$("source",r),l=`${i[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,p=[`${s} rc = outputLoc;`,`${i[r-1]} += 1;\n       if(${l}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${i[r-2]} += 1;\n       if(${i[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${i[r-1]} += 1;\n         if(${l}) {`],h=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let d="";for(let e=0,t=1===r?2:4;e<t;e++)d+=`\n        ${p[e]}\n        if (${h}) {\n          result[${e}] = float(${n});\n        } else {\n          ${s} source = rc - start;\n          result[${e}] = getChannel(getX(${u.join()}), ${c});\n        }\n      `;d+=1===r?"} ":"}}",this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${o});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const nz=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,constantValue:o}=r,i=Le().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new tz(s.shape,a,o):new ez(s.shape,a,o);return n.runWebGLProgram(i,[s],s.dtype)},rz={kernelName:Wn,backendName:"webgl",kernelFunc:nz},sz=IM({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),az={kernelName:jn,backendName:"webgl",kernelFunc:sz},oz={kernelName:Gn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r,i=s.shape.length,u=[],l=he(a,s.shape);let c=l;const p=Fl(c,i);let h,d=s;if(null!=p&&(d=WM({inputs:{x:s},backend:n,attrs:{perm:p}}),c=ql(c.length,i),u.push(d)),zl("prod",c,i),n.shouldExecuteOnCPU([d])){const e=n.texData.get(d.dataId).values,{outVals:t,outShape:r,outDtype:s}=L$(d.shape,d.dtype,e,c);h=n.makeTensorInfo(r,s,t)}else{const[e,t]=Dl(d.shape,c),r=ne(t),a=MM({inputs:{x:d},backend:n,attrs:{shape:[-1,r]}}),o=RM(a,Ns(s.dtype),"prod",n);h=MM({inputs:{x:o},backend:n,attrs:{shape:e}}),u.push(a),u.push(o)}if(o){u.push(h);const e=Rl(h.shape,l);h=MM({inputs:{x:h},backend:n,attrs:{shape:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},iz=e=>{const{backend:t,attrs:n}=e,{start:r,stop:s,step:a,dtype:o}=n,i=q$(r,s,a,o);return t.makeTensorInfo([i.length],o,i)},uz={kernelName:Hn,backendName:"webgl",kernelFunc:iz},lz=NM({opSnippet:"return 1.0 / x;"}),cz={kernelName:Qn,backendName:"webgl",kernelFunc:lz},pz=NM({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),hz={kernelName:Xn,backendName:"webgl",kernelFunc:pz},dz=NM({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),fz={kernelName:nr,backendName:"webgl",kernelFunc:dz};class mz{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[a,o,i,u]=e;this.outputShape=[a,t,n,u];const l=[r&&t>1?o-1:o,r&&n>1?i-1:i],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let p;p=s?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${o}.0, ${i}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${p};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class gz{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,o,i,u]=e;this.outputShape=[a,t,n,u];const l=[r&&t>1?o-1:o,r&&n>1?i-1:i],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let p;p=s?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${o}.0, ${i}.0,\n                                     ${i}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${p};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const yz={kernelName:er,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:o,size:i}=r,[u,l]=i,c=Le().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new gz(s.shape,u,l,a,o):new mz(s.shape,u,l,a,o);return n.runWebGLProgram(c,[s],"float32")}};class bz{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,a,o]=e,i=[n&&a>1?r-1:r,n&&o>1?s-1:s],u=[n&&a>1?a-1:a,n&&o>1?o-1:o],l=i[0]/u[0],c=i[1]/u[1],p=1/l,h=1/c,d=2*Math.ceil(p)+2,f=2*Math.ceil(h)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${p});\n        const float invWidthScale = float(${h});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${o}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const wz={kernelName:tr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:o}=r,i=new bz(a.shape,s.shape,o);return n.runWebGLProgram(i,[a],a.dtype)}};class xz{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[a,o,i,u]=e;this.outputShape=[a,t,n,u];const l=[r&&t>1?o-1:o,r&&n>1?i-1:i],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],p=r?"0.5":"0.0";let h;h=s?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${o}.0, ${i}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${p})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}const Sz={kernelName:Yn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:o,size:i}=r,[u,l]=i,c=new xz(s.shape,u,l,a,o);return n.runWebGLProgram(c,[s],s.dtype)}};class vz{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,a,o]=e,i=[n&&a>1?r-1:r,n&&o>1?s-1:s],u=[n&&a>1?a-1:a,n&&o>1?o-1:o],l=i[0]/u[0],c=i[1]/u[1],p=1/l,h=1/c,d=2*Math.ceil(p)+2,f=2*Math.ceil(h)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${p});\n        const float invWidthScale = float(${h});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${o}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${i[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${i[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const kz={kernelName:Zn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:o}=r,i=new vz(a.shape,s.shape,o);return n.runWebGLProgram(i,[a],a.dtype)}};class Nz{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),s=y$(n);this.userCode=`\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class Iz{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=J$("rc",n),s=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,o=y$(n);function i(n){const r=e.map(((r,s)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(s,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${s}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${o} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return i(e)}(r.slice())};\n          if(${s}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",i(e)}(r.slice())};\n          }\n          if(${a}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",i(e)}(r.slice())};\n            if(${s}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",i(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const Tz={kernelName:rr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:a}=r,o=s.shape.length,i=he(a,s.shape);if(0===o)return fM({inputs:{x:s},backend:n});const u=Le().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Iz(s.shape,i):new Nz(s.shape,i);return n.runWebGLProgram(u,[s],s.dtype)}};class Cz{constructor(e,t,n,r){this.variableNames=["Image"],this.outputShape=[];const s=e[1],a=e[2],o=Math.sin(t).toFixed(3),i=Math.cos(t).toFixed(3);this.outputShape=e;const[u,l]=Qh(r,s,a),c=u.toFixed(3),p=l.toFixed(3);let h="";h="number"==typeof n?`float outputValue = ${n.toFixed(2)};`:`\n        vec3 fill = vec3(${n.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - ${c}) * ${i} - (float(y) - ${p}) * ${o};\n          float coordYFloat = (float(x) - ${c}) * ${o} + (float(y) - ${p}) * ${i};\n          int coordX = int(round(coordXFloat + ${c}));\n          int coordY = int(round(coordYFloat + ${p}));\n          ${h}\n          if(coordX >= 0 && coordX < ${a} && coordY >= 0 && coordY < ${s}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const Az={kernelName:Rr,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:a,center:o}=t,i=n,u=new Cz(r.shape,s,a,o);return i.runWebGLProgram(u,[r],r.dtype)}},Ez=NM({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),Pz={kernelName:sr,backendName:"webgl",kernelFunc:Ez},$z=NM({opSnippet:"return inversesqrt(x);",cpuKernelImpl:B$}),Mz={kernelName:ar,backendName:"webgl",kernelFunc:$z};class Oz{constructor(e,t,n,r,s,a,o=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const i=y$(s.length),u=y$(a.length);let l="";1===n?l="i":2===n&&(l="i, j");const c=`getIndices(${l})`;let p="";1===r?p="i":2===r&&(p="i, coords[1]");const h=`getUpdates(${p})`,d=t>1?"strides[j]":"strides";this.userCode=`\n        ${i} strides = ${i}(${s});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${d};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${h};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const _z={kernelName:or,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:a}=t,{shape:o}=r,{sliceRank:i,numUpdates:u,sliceSize:l,strides:c,outputSize:p}=bo(0,s,o),h=[p/l,l];if(0===p)return n.makeTensorInfo(o,s.dtype);const d=MM({inputs:{x:s},backend:n,attrs:{shape:[u,i]}}),f=MM({inputs:{x:a},backend:n,attrs:{shape:[u,l]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new Oz(u,i,d.shape.length,f.shape.length,c,h),y=n.runWebGLProgram(g,[f,d,m],f.dtype),b=MM({inputs:{x:y},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),b}};class Dz{constructor(e,t,n){let r,s;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)s="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],o=[];for(let r=0;r<t.length;r++)o.push(`${n[r]}`),r<e&&a.push(`${n[r]}`);r=a.join(),s=o.join()}const a=y$(n);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${s}));\n        } else {\n          setOutput(getB(${s}));\n        }\n      }\n    `}}const Rz={kernelName:ir,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:a}=t,o=new Dz(r.shape.length,s.shape,s.shape.length);return n.runWebGLProgram(o,[r,s,a],ks(s.dtype,a.dtype))}},zz=NM({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${td};\n  float scale = ${nd};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),Fz={kernelName:ur,backendName:"webgl",kernelFunc:zz},Lz=NM({opSnippet:"return 1.0 / (1.0 + exp(-1.0 * x));"}),qz={kernelName:dr,backendName:"webgl",kernelFunc:Lz},Bz=NM({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),Wz={kernelName:hr,backendName:"webgl",kernelFunc:Bz},Vz=NM({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),jz={kernelName:cr,backendName:"webgl",kernelFunc:Vz},Uz=NM({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),Gz={kernelName:pr,backendName:"webgl",kernelFunc:Uz},Hz=NM({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),Kz={kernelName:fr,backendName:"webgl",kernelFunc:Hz},Qz={kernelName:yr,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,paddings:o}=r;Y(s.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const i=a.reduce(((e,t)=>e*t)),u=[[0,0]];u.push(...o);for(let e=1+a.length;e<s.shape.length;++e)u.push([0,0]);const l=[],c=nz({inputs:{x:s},backend:n,attrs:{paddings:u,constantValue:0}}),p=Xh(c.shape,a,i,!1),h=Jh(p.length,a.length,!1),d=Yh(c.shape,a,i,!1),f=MM({inputs:{x:c},backend:n,attrs:{shape:p}}),m=WM({inputs:{x:f},backend:n,attrs:{perm:h}}),g=MM({inputs:{x:m},backend:n,attrs:{shape:d}});return l.push(c),l.push(f),l.push(m),l.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}},Xz={kernelName:kr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:a,defaultValue:o}=t,{outputShape:i}=r,{sliceRank:u,numUpdates:l,strides:c,outputSize:p}=bo(0,s,i),h=new Oz(l,u,s.shape.length,a.shape.length,c,[p,1],!1),d=n.runWebGLProgram(h,[a,s,o],a.dtype),f=MM({inputs:{x:d},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(d),f}},Jz={kernelName:br,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:a,axis:o}=r,i=he(o,s.shape)[0],u=wd(s,a,i),l=s.shape.length,c=new Array(l).fill(0),p=s.shape.slice();return u.map((e=>{const t=[...p];t[i]=e;const r=FO({inputs:{x:s},backend:n,attrs:{begin:c,size:t}});return c[i]+=e,r}))}},Yz=NM({opSnippet:"return sqrt(x);"}),Zz={kernelName:mr,backendName:"webgl",kernelFunc:Yz},eF=NM({opSnippet:"return x * x;"}),tF={kernelName:Sr,backendName:"webgl",kernelFunc:eF},nF="return (a - b) * (a - b);",rF=IM({opSnippet:nF,packedOpSnippet:nF}),sF={kernelName:xr,backendName:"webgl",kernelFunc:rF},aF={kernelName:_r,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:r}=e,s=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,a=new sM(r.shape,s);return n.runWebGLProgram(a,[r],r.dtype)}};class oF{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,s=y$(n.length),a=y$(n.length);let o="";if(1===r)o="coords * strides + begin";else{let e=0;o=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${s} begin = ${s}(${e});\n      ${s} strides = ${s}(${t});\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${o}));\n      }\n    `}}const iF={kernelName:Nr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,end:o,strides:i,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:p,shrinkAxisMask:h}=r,{nonStrided:d,$begin:f,$strides:m,size:g,newShape:y,outShape:b}=_o(s.shape,a,o,i,u,l,c,p,h),w=MM({inputs:{x:s},backend:n,attrs:{shape:y}});let x;if(d){const e=FO({inputs:{x:w},backend:n,attrs:{begin:f,size:g}});x=MM({inputs:{x:e},backend:n,attrs:{shape:b}}),n.disposeIntermediateTensorInfo(e)}else if(b.some((e=>0===e)))x=n.makeTensorInfo(b,s.dtype,[]);else if(n.shouldExecuteOnCPU([w])){const e=n.texData.get(w.dataId).values,t=La(w.shape,w.dtype,e),r=j$(b,t,m,f);x=n.makeTensorInfo(b,w.dtype,r.values)}else{const e=new oF(f,m,b);x=n.runWebGLProgram(e,[w],w.dtype)}const S=MM({inputs:{x},backend:n,attrs:{shape:b}});return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(x),S}},uF=NM({opSnippet:"return tan(x);"}),lF={kernelName:Ir,backendName:"webgl",kernelFunc:uF},cF=NM({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),pF={kernelName:Tr,backendName:"webgl",kernelFunc:cF};class hF{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;const r=y$(this.rank),s=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${s}));\n      }\n    `}}function dF(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:a}=r;if("string"===s.dtype){const e=n.readSync(s.dataId).map((e=>cs(e))),t=La(s.shape,s.dtype,e),r=G$(t,a);return n.makeTensorInfo(r.shape,r.dtype,r.values)}const o=new hF(s.shape,a);return n.runWebGLProgram(o,[s],s.dtype)}const fF={kernelName:Cr,backendName:"webgl",kernelFunc:dF},mF={kernelName:Ar,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:a,sorted:o}=r,i=n.readSync(s.dataId),[u,l]=H$(i,s.shape,s.dtype,a,o);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}},gF={kernelName:Pr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;WP(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const o=r.readSync(a.dataId),{outputValues:i,outputShape:u,indices:l}=Q$(o,s,a.shape,a.dtype);return[r.makeTensorInfo(u,a.dtype,i),r.makeTensorInfo([l.length],"int32",l)]}},yF={kernelName:$r,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:a}=r;a<0&&(a+=s.shape.length);const o=s,i=o.shape.length,u=s.shape[a],l=new Array(i-1);let c=0;for(let e=0;e<i;e++)e!==a&&(l[c++]=o.shape[e]);const p=[],h=new Array(i).fill(0),d=o.shape.slice();d[a]=1;const f=new Array(u);for(let e=0;e<f.length;e++){h[a]=e;const t=FO({inputs:{x:o},backend:n,attrs:{begin:h,size:d}}),r=MM({inputs:{x:t},backend:n,attrs:{shape:l}});f[e]=r,p.push(t)}return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class bF{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,s=e.inSize,a=e.numSegments,o=a*Math.ceil(s/n);this.outputShape=[r,o];const i=4*Math.floor(n/4),u=n%4,l="\n        sumValue += dot(values, segFilter);\n    ";let c="";s%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `);let p="";s%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${p}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${a})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${a})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${l}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${l}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}const wF=[uR,cR,UM,HM,QM,JM,eO,rO,sO,aO,pO,hO,fO,gO,xO,bO,vO,TO,IO,EO,PO,$O,_O,qO,BO,GO,QO,YO,t_,yM,c_,S_,v_,g_,N_,I_,k_,C_,E_,$_,D_,R_,F_,j_,U_,B_,H_,Q_,J_,Y_,eD,nD,aD,iD,cD,dD,gD,bD,SD,kD,TD,AD,ED,$D,OD,DD,zD,mM,FD,o_,qD,WD,jD,xM,GD,KD,QD,ZD,JD,tR,rR,aR,hR,gR,mR,wR,xR,SR,fR,vR,kR,IR,AR,PR,LR,$M,BR,VR,UR,HR,VO,QR,YR,ZR,rz,az,kM,oz,uz,UO,OR,cz,fz,hz,OM,yz,wz,Sz,kz,Tz,Az,Pz,Mz,_z,Rz,Fz,qz,Wz,jz,Gz,LO,FR,Kz,Qz,Xz,Jz,Zz,tF,sF,aF,iF,RR,BM,lF,pF,fF,mF,VM,gF,yF,{kernelName:Mr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:a}=t,{numSegments:o}=r,i=s.shape.length,u=[];let l=0;const c=Fl([l],i);let p=s;null!=c&&(p=WM({inputs:{x:s},backend:n,attrs:{perm:c}}),u.push(p),l=ql(1,i)[0]);const h=Sd(p.shape,l,o),d=ne([p.shape[l]]),f=MM({inputs:{x:p},backend:n,attrs:{shape:[-1,d]}});u.push(f);const m=Ns(s.dtype),g=(e,t,r,s,a)=>{const o=e.shape[0],i=e.shape[1],l=xd(i,a),c=new bF({windowSize:l,inSize:i,batchSize:o,numSegments:a},t),p=n.compileAndRun(c,[e,r],s);if(u.push(p),p.shape[1]===a)return p;const h=iz({backend:n,attrs:{start:0,stop:a,step:1,dtype:"float32"}}),d=dF({inputs:{x:h},backend:n,attrs:{reps:[i/l]}});return u.push(h),u.push(d),g(p,t,d,s,a)},y=MM({inputs:{x:g(f,"unsortedSegmentSum",a,m,o)},backend:n,attrs:{shape:h}});let b=y;if(null!=c){u.push(y);const e=Ll(c);b=WM({inputs:{x:b},backend:n,attrs:{perm:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},JR];for(const e of wF)Ur(e);const xF={"tfjs-core":Qo,"tfjs-backend-cpu":"2.8.6","tfjs-backend-webgl":"2.8.6","tfjs-data":DN,"tfjs-layers":Yy,"tfjs-converter":Ak,tfjs:"2.8.6"}},377:(e,t,n)=>{var r=n(832),s=n(652),a=n(801),o=n(30),i=n(618),u=n(49),l=n(971);l.alea=r,l.xor128=s,l.xorwow=a,l.xorshift7=o,l.xor4096=i,l.tychei=u,e.exports=l},832:function(e,t,n){var r;!function(e,s,a){function o(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function i(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function u(e,t){var n=new o(e),r=t&&t.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,r&&("object"==typeof r&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.alea=u}(0,e=n.nmd(e),n.amdD)},49:function(e,t,n){var r;!function(e,s,a){function o(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,s=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^s,t.a=s-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function u(e,t){var n=new o(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.tychei=u}(0,e=n.nmd(e),n.amdD)},652:function(e,t,n){var r;!function(e,s,a){function o(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function u(e,t){var n=new o(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.xor128=u}(0,e=n.nmd(e),n.amdD)},618:function(e,t,n){var r;!function(e,s,a){function o(e){var t=this;t.next=function(){var e,n,r=t.w,s=t.X,a=t.i;return t.w=r=r+1640531527|0,n=s[a+34&127],e=s[a=a+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=s[a]=n^e,t.i=a,n+(r^r>>>16)|0},function(e,t){var n,r,s,a,o,i=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),s=0,a=-32;a<u;++a)t&&(r^=t.charCodeAt((a+32)%t.length)),0===a&&(o=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,a>=0&&(o=o+1640531527|0,s=0==(n=i[127&a]^=r+o)?s+1:0);for(s>=128&&(i[127&(t&&t.length||0)]=-1),s=127,a=512;a>0;--a)r=i[s+34&127],n=i[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,i[s]=r^n;e.w=o,e.X=i,e.i=s}(t,e)}function i(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function u(e,t){null==e&&(e=+new Date);var n=new o(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.X&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.xor4096=u}(0,e=n.nmd(e),n.amdD)},30:function(e,t,n){var r;!function(e,s,a){function o(e){var t=this;t.next=function(){var e,n,r=t.x,s=t.i;return e=r[s],n=(e^=e>>>7)^e<<24,n^=(e=r[s+1&7])^e>>>10,n^=(e=r[s+3&7])^e>>>3,n^=(e=r[s+4&7])^e<<7,e=r[s+7&7],n^=(e^=e<<13)^e<<9,r[s]=n,t.i=s+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function i(e,t){return t.x=e.x.slice(),t.i=e.i,t}function u(e,t){null==e&&(e=+new Date);var n=new o(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.x&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.xorshift7=u}(0,e=n.nmd(e),n.amdD)},801:function(e,t,n){var r;!function(e,s,a){function o(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function u(e,t){var n=new o(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.xorwow=u}(0,e=n.nmd(e),n.amdD)},971:(e,t,n)=>{var r;!function(s,a){var o,i=this,u=256,l=a.pow(u,6),c=a.pow(2,52),p=2*c,h=255;function d(e,t,n){var r=[],h=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,b(s)]:null==e?function(){try{var e;return o&&(e=o.randomBytes)?e=e(u):(e=new Uint8Array(u),(i.crypto||i.msCrypto).getRandomValues(e)),b(e)}catch(e){var t=i.navigator,n=t&&t.plugins;return[+new Date,i,n,i.screen,b(s)]}}():e,3),r),d=new f(r),w=function(){for(var e=d.g(6),t=l,n=0;e<c;)e=(e+n)*u,t*=u,n=d.g(1);for(;e>=p;)e/=2,t/=2,n>>>=1;return(e+n)/t};return w.int32=function(){return 0|d.g(4)},w.quick=function(){return d.g(4)/4294967296},w.double=w,y(b(d.S),s),(t.pass||n||function(e,t,n,r){return r&&(r.S&&m(r,d),e.state=function(){return m(d,{})}),n?(a.random=e,t):e})(w,h,"global"in t?t.global:this==a,t.state)}function f(e){var t,n=e.length,r=this,s=0,a=r.i=r.j=0,o=r.S=[];for(n||(e=[n++]);s<u;)o[s]=s++;for(s=0;s<u;s++)o[s]=o[a=h&a+e[s%n]+(t=o[s])],o[a]=t;(r.g=function(e){for(var t,n=0,s=r.i,a=r.j,o=r.S;e--;)t=o[s=h&s+1],n=n*u+o[h&(o[s]=o[a=h&a+t])+(o[a]=t)];return r.i=s,r.j=a,n})(u)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,r=[],s=typeof e;if(t&&"object"==s)for(n in e)try{r.push(g(e[n],t-1))}catch(e){}return r.length?r:"string"==s?e:e+"\0"}function y(e,t){for(var n,r=e+"",s=0;s<r.length;)t[h&s]=h&(n^=19*t[h&s])+r.charCodeAt(s++);return b(t)}function b(e){return String.fromCharCode.apply(0,e)}if(a.seedrandom=d,y(a.random(),s),e.exports){e.exports=d;try{o=n(42)}catch(e){}}else void 0===(r=function(){return d}.call(t,n,t,e))||(e.exports=r)}([],Math)}}]);